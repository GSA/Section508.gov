{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/features/art-docx-download/art-docx-download.component.ts","./src/app/features/art-docx-download/art-docx-download.component.html","./src/app/pages/form-page/form-page.component.ts","./src/app/pages/form-page/form-page.component.html","./src/app/pages/ict-listing-page/ict-listing-page.component.ts","./src/app/pages/ict-listing-page/ict-listing-page.component.html","./src/app/pages/landing-page/landing-page.component.ts","./src/app/pages/landing-page/landing-page.component.html","./src/app/pages/summary-page/summary-page.component.ts","./src/app/pages/summary-page/summary-page.component.html","./src/app/pages/test/test.component.ts","./src/app/shared/components/art-button/art-button.component.ts","./src/app/shared/components/art-button/art-button.component.html","./src/app/shared/components/art-checkbox-group/art-checkbox-group.component.ts","./src/app/shared/components/art-checkbox-group/art-checkbox-group.component.html","./src/app/shared/components/art-generic-text/art-generic-text.component.ts","./src/app/shared/components/art-generic-text/art-generic-text.component.html","./src/app/shared/components/art-ict-item/art-ict-item.component.ts","./src/app/shared/components/art-ict-item/art-ict-item.component.html","./src/app/shared/components/art-radiobutton-group/art-radiobutton-group.component.ts","./src/app/shared/components/art-radiobutton-group/art-radiobutton-group.component.html","./src/app/shared/components/art-save-json/art-save-json.component.ts","./src/app/shared/components/art-save-json/art-save-json.component.html","./src/app/shared/components/art-side-navigation/art-side-navigation.component.ts","./src/app/shared/components/art-side-navigation/art-side-navigation.component.html","./src/app/shared/components/art-text-field/art-text-field.component.ts","./src/app/shared/components/art-text-field/art-text-field.component.html","./src/app/shared/components/back-to-top/back-to-top.component.ts","./src/app/shared/components/back-to-top/back-to-top.component.html","./src/app/shared/components/banner/banner.component.ts","./src/app/shared/components/banner/banner.component.html","./src/app/shared/components/file-upload/file-upload.component.ts","./src/app/shared/components/file-upload/file-upload.component.html","./src/app/shared/components/section508-banner/section508-banner.component.ts","./src/app/shared/components/section508-banner/section508-banner.component.html","./src/app/shared/components/section508-footer/section508-footer.component.ts","./src/app/shared/components/section508-footer/section508-footer.component.html","./src/app/shared/components/section508-header/section508-header.component.ts","./src/app/shared/components/section508-header/section508-header.component.html","./src/app/shared/components/step-indicator/step-indicator.component.ts","./src/app/shared/components/step-indicator/step-indicator.component.html","./src/app/shared/models/form-element.interface.ts","./src/app/shared/services/art-508-lang/art-508-lang.service.ts","./src/app/shared/services/art-content-data/art-content-data.service.ts","./src/app/shared/services/art-ict-lp/art-ict-lp.service.ts","./src/app/shared/services/art-test.service.ts","./src/app/shared/services/file-upload.service.ts","./src/app/shared/services/form-page/form-page.service.ts","./src/app/shared/services/ict-item/ict-item.service.ts","./src/app/shared/services/landing-page/landing-page.service.ts","./src/app/shared/templates/art-form-template/art-form-template.component.ts","./src/app/shared/templates/art-form-template/art-form-template.component.html","./src/environments/environment.dev.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormPageComponent } from './pages/form-page/form-page.component';\r\nimport { IctListingPageComponent } from './pages/ict-listing-page/ict-listing-page.component';\r\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\r\nimport { TestComponent } from './pages/test/test.component';\r\nimport { SummaryPageComponent } from './pages/summary-page/summary-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path:'' ,  component: LandingPageComponent },  \r\n  { path:'ict-listing-page' ,  component: IctListingPageComponent },  \r\n  { path:'form-page' ,  component: FormPageComponent },  \r\n  { path:'summary-page' ,  component: SummaryPageComponent },  \r\n  { path:'test' ,  component: TestComponent },  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {scrollPositionRestoration: 'enabled'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICTInterface } from './shared/models/ict.interface';\r\nimport { IButtonInterface } from './shared/models/IButtonInterface';\r\nimport { ArtContentDataService } from './shared/services/art-content-data/art-content-data.service';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n   /**\r\n   * @description Using service for all shared content\r\n   * @params artContentDataService\r\n   */\r\n    constructor( public artContentDataService:ArtContentDataService, private router:Router ) { }\r\n    \r\n    url=\"/preview/gsa/section508.gov/test-art/art-v2\";\r\n    //url=\"\";\r\n\r\n    ngOnInit(): void {\r\n      this.url = environment.urlPath;\r\n    }\r\n  title = 'Accessibility Requirements Tool (ART)';\r\n\r\n  \r\n}\r\n","<section aria-label=\"Official Government Site Banner\" class=\"page-landing-page layout-demo  art-default-font\">\r\n    <a class=\"usa-skipnav\" href=\"#main-content\" >Skip to main content</a>\r\n    <art-section508-banner [url] = \"url\"></art-section508-banner>\r\n    <div class=\"usa-overlay\"></div>\r\n</section>\r\n<art-section508-header [url] = \"url\"></art-section508-header>\r\n  \r\n<art-banner \r\n    id=\"main-content\"\r\n    *ngIf=\"artContentDataService && artContentDataService.getBannerData()\"\r\n    [title]=\"artContentDataService.getBannerData().title\" \r\n    [header]=\"artContentDataService.getBannerData().header\" >\r\n</art-banner>\r\n\r\n<section class=\"usa-graphic-list usa-section art-banner\">\r\n    <div class=\"grid-container\">\r\n        <div class=\"grid-row grid-gap\">\r\n            <div class=\"tablet: grid-col\">\r\n                <!-- Header display -->\r\n                <div class=\"margin-bottom-2\">\r\n                    <art-generic-text *ngIf=\"artContentDataService && artContentDataService.getHeader\">\r\n                        <div [innerHTML]=\"artContentDataService.getHeader()\"></div>\r\n                    </art-generic-text>\r\n                </div>\r\n                <!-- Any content from the routing url will be displayed here -->\r\n                <router-outlet></router-outlet>\r\n                <!-- Footer display-->\r\n                <div art-generic-text-layout=\"border\" class=\"margin-top-5\">\r\n                    <div class=\"padding-x-2 padding-bottom-2 margin-top-2\"  *ngIf=\"artContentDataService && artContentDataService.getFooter()\">\r\n                        <art-generic-text [title]=\"artContentDataService.getFooter().title\">\r\n                            <div class=\"margin-top-1\">\r\n                                <div [innerHTML]=\"artContentDataService.getFooter().data\"></div>\r\n                            </div>\r\n                        </art-generic-text>\r\n                    </div>\r\n                </div>\r\n                <div class=\"margin-y-2\" [innerHTML]=\"artContentDataService.getUpdatedDate()\"> </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<art-section508-footer [url] = \"url\"></art-section508-footer>\r\n<back-to-top></back-to-top>","import { NgModule } from '@angular/core';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FileUploadComponent } from './shared/components/file-upload/file-upload.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ArtButtonComponent } from './shared/components/art-button/art-button.component';\r\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\r\nimport { BannerComponent } from './shared/components/banner/banner.component';\r\nimport { IctListingPageComponent } from './pages/ict-listing-page/ict-listing-page.component';\r\nimport { ArtGenericTextComponent } from './shared/components/art-generic-text/art-generic-text.component';\r\nimport { Section508HeaderComponent } from './shared/components/section508-header/section508-header.component';\r\nimport { Section508BannerComponent } from './shared/components/section508-banner/section508-banner.component';\r\nimport { Section508FooterComponent } from './shared/components/section508-footer/section508-footer.component';\r\nimport { StepIndicatorComponent } from './shared/components/step-indicator/step-indicator.component';\r\nimport { ArtDocxDownloadComponent } from './features/art-docx-download/art-docx-download.component';\r\nimport { ArtSideNavigationComponent } from './shared/components/art-side-navigation/art-side-navigation.component';\r\nimport { ArtTextFieldComponent } from './shared/components/art-text-field/art-text-field.component';\r\nimport { ArtFormTemplateComponent } from './shared/templates/art-form-template/art-form-template.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ICTItemComponent } from './shared/components/art-ict-item/art-ict-item.component';\r\nimport { TestComponent } from './pages/test/test.component';\r\nimport { ArtCheckboxGroupComponent } from './shared/components/art-checkbox-group/art-checkbox-group.component';\r\nimport { FormPageComponent } from './pages/form-page/form-page.component';\r\nimport { RadiobuttonGroupComponent } from './shared/components/art-radiobutton-group/art-radiobutton-group.component';\r\nimport { ArtSaveJsonComponent } from './shared/components/art-save-json/art-save-json.component';\r\nimport { BackToTopComponent} from \"./shared/components/back-to-top/back-to-top.component\";\r\nimport { SummaryPageComponent } from './pages/summary-page/summary-page.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FileUploadComponent,\r\n    ArtButtonComponent,\r\n    LandingPageComponent,\r\n    BannerComponent,\r\n    IctListingPageComponent,\r\n    ArtGenericTextComponent,\r\n    Section508HeaderComponent,\r\n    Section508BannerComponent,\r\n    Section508FooterComponent,\r\n    StepIndicatorComponent,\r\n    ArtDocxDownloadComponent,\r\n    ArtSideNavigationComponent,\r\n    ArtTextFieldComponent,\r\n    ArtFormTemplateComponent,\r\n    ICTItemComponent,\r\n    TestComponent,\r\n    RadiobuttonGroupComponent,\r\n    ArtSaveJsonComponent,\r\n    ArtCheckboxGroupComponent,\r\n    FormPageComponent,\r\n    RadiobuttonGroupComponent,\r\n    BackToTopComponent,\r\n    SummaryPageComponent,\r\n    TestComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [  {provide: LocationStrategy, useClass: HashLocationStrategy} ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, Input, OnInit, Renderer2} from '@angular/core';\r\nimport * as docx from 'docx';\r\nimport {AlignmentType, HeadingLevel, LevelFormat, Paragraph, TextRun} from 'docx';\r\n\r\n@Component({\r\n  selector: 'art-docx-download',\r\n  templateUrl: './art-docx-download.component.html',\r\n  styleUrls: ['./art-docx-download.component.scss']\r\n})\r\nexport class ArtDocxDownloadComponent implements OnInit {\r\n  @Input() params: { btnName: string, fileName: string } = { btnName: \"\", fileName: \"\" };\r\n  @Input() markup: string = \"\";\r\n\r\n  constructor(protected renderer: Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * Click Event. Generates the docx file and sends it to the user.\r\n   */\r\n  generateFile(): void {\r\n\r\n    if (!this.validateFilename(this.params.fileName)) {\r\n      throw \"Invalid filename: \" + this.params.fileName;\r\n    }\r\n\r\n    let container = document.createElement('div');\r\n    container.innerHTML = this.markup;\r\n    let elements = this.traverseTree(container);\r\n\r\n    let docElems: Paragraph[] = [];\r\n    for (let i = 0, l = elements.length; i < l; i++) {\r\n      let elem = elements[i];\r\n      switch (elem.nodeName) {\r\n        case 'P':\r\n          docElems.push(this.parseParagraph(elem));\r\n          break;\r\n        case 'OL':\r\n          docElems = docElems.concat(this.parseList(elem, true));\r\n          break;\r\n        case 'UL':\r\n          docElems = docElems.concat(this.parseList(elem, false));\r\n          break;\r\n        case 'H1':\r\n        case 'H2':\r\n        case 'H3':\r\n        case 'H4':\r\n        case 'H5':\r\n        case 'H6':\r\n          docElems = docElems.concat(this.parseHeader(elem));\r\n          break;\r\n      }\r\n    }\r\n\r\n    let d: docx.Document = new docx.Document({\r\n      styles: {\r\n        default: {\r\n          heading1: {\r\n            run: {\r\n              size: 48,\r\n              font: 'Source Sans Pro Web',\r\n              bold: true\r\n            },\r\n            paragraph: {\r\n              spacing: {\r\n                before: 0,\r\n                after: 360, // 240 line units per line.\r\n                line: 320\r\n              }\r\n            },\r\n          },\r\n          heading2: {\r\n            run: {\r\n              size: 44,\r\n              font: 'Source Sans Pro Web',\r\n              bold: true\r\n            },\r\n            paragraph: {\r\n              spacing: {\r\n                before: 0,\r\n                after: 360, // 240 line units per line.\r\n                line: 320\r\n              }\r\n            },\r\n          },\r\n          heading3: {\r\n            run: {\r\n              size: 40,\r\n              font: 'Source Sans Pro Web',\r\n              bold: true\r\n            },\r\n            paragraph: {\r\n              spacing: {\r\n                before: 0,\r\n                after: 360, // 240 line units per line.\r\n                line: 320\r\n              }\r\n            },\r\n          },\r\n          heading4: {\r\n            run: {\r\n              size: 36,\r\n              font: 'Source Sans Pro Web',\r\n              bold: true\r\n            },\r\n            paragraph: {\r\n              spacing: {\r\n                before: 0,\r\n                after: 360, // 240 line units per line.\r\n                line: 320\r\n              }\r\n            },\r\n          },\r\n          heading5: {\r\n            run: {\r\n              size: 32,\r\n              font: 'Source Sans Pro Web',\r\n              bold: true\r\n            },\r\n            paragraph: {\r\n              spacing: {\r\n                before: 0,\r\n                after: 360, // 240 line units per line.\r\n                line: 320\r\n              }\r\n            },\r\n          },\r\n          heading6: {\r\n            run: {\r\n              size: 28,\r\n              font: 'Source Sans Pro Web',\r\n              bold: true\r\n            },\r\n            paragraph: {\r\n              spacing: {\r\n                before: 0,\r\n                after: 360, // 240 line units per line.\r\n                line: 320\r\n              }\r\n            },\r\n          },\r\n        },\r\n        paragraphStyles: [\r\n          {\r\n            id: 'default',\r\n            name: 'default',\r\n            basedOn: 'Normal',\r\n            next: 'Normal',\r\n            run: {\r\n              size: 24, // half units. real font size will be half this value\r\n              font: 'Source Sans Pro Web',\r\n            },\r\n            paragraph: {\r\n              spacing: {\r\n                before: 0,\r\n                after: 360, // 240 line units per line.\r\n                line: 320\r\n              }\r\n            },\r\n          }\r\n        ]\r\n      },\r\n      numbering: {\r\n        config: [\r\n          {\r\n            reference: \"number\",\r\n            levels: [\r\n              {\r\n                level: 0,\r\n                format: LevelFormat.DECIMAL,\r\n                text: \"%1\",\r\n                alignment: AlignmentType.START,\r\n                style: {\r\n                  paragraph: {\r\n                    indent: { left: 720, hanging: 260 }\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      sections: [\r\n        {\r\n          children: docElems\r\n        }\r\n      ]\r\n    });\r\n\r\n    let a = document.createElement('a');\r\n    document.body.appendChild(a);\r\n    a.classList.add(\"display-none\");\r\n\r\n    docx.Packer.toBlob(d).then((b) => {\r\n      let url = window.URL.createObjectURL(b);\r\n\r\n      a.href= url;\r\n      a.download = this.params.fileName + \".docx\";\r\n      a.click();\r\n      window.URL.revokeObjectURL(url);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Traverses the dom tree of the submitted markup and picks out relevant elements.\r\n   *\r\n   * @param root\r\n   * @private\r\n   */\r\n  private traverseTree(root: Element): Element[] {\r\n    let elems: Element[] = [];\r\n    let leaves = ['P', 'OL', 'UL', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\r\n    for (let i = 0, l = root.children.length; i < l; i++) {\r\n      let child = root.children[i];\r\n      if (leaves.includes(child.nodeName)) {\r\n        elems.push(child);\r\n      }\r\n      else {\r\n        elems = elems.concat(this.traverseTree(child));\r\n      }\r\n    }\r\n    return elems;\r\n  }\r\n\r\n  /**\r\n   * Parses a p tag into a Docx element.\r\n   * @param p\r\n   * @private\r\n   */\r\n  private parseParagraph(p: Element): Paragraph {\r\n    let children = this.parseText(Array.from(p.childNodes));\r\n    return new Paragraph({\r\n      children: children,\r\n      style: 'default'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parses lists into Docx elements.\r\n   *\r\n   * @param list\r\n   * @param ordered  Whether this list should be numbered or just bullet points\r\n   * @private\r\n   */\r\n  private parseList(list: Element, ordered: boolean): Paragraph[] {\r\n    let ps: Paragraph[] = [];\r\n    ps=[...this.parseSubList(ps, list, ordered)];\r\n    return ps;\r\n  }\r\n\r\n  /**\r\n   * Parses lists and nested list into Docx elements.\r\n   *\r\n   * @param list\r\n   * @param ordered  Whether this list should be numbered or just bullet points\r\n   * @param childNumber nesting level or indexing level\r\n   * @param ps paragraph array\r\n   * @private\r\n   */\r\n  private parseSubList(ps: Paragraph[], list: Element, ordered: boolean, childNumber = 0): Paragraph[] {\r\n\r\n    //Lopping to child each node of the parent node\r\n    for (let i = 0; i < list.children.length; i++) {\r\n      let child = list.children[i];\r\n      if (ordered) {\r\n        ps.push(new Paragraph({\r\n          children: this.parseText(Array.from(child.childNodes)),\r\n          style: 'default',\r\n          numbering: {\r\n            reference: 'number',\r\n            level: 0\r\n          }\r\n        }));\r\n      }\r\n      else {\r\n        // If a child of the current node has a nested ol/ul\r\n        const olNode = this.findNode(child,'UL');\r\n        ps.push(new Paragraph({\r\n          children: this.parseText(Array.from(child.childNodes)),\r\n          style: 'default',\r\n          bullet: {\r\n            level: childNumber // updating index number\r\n          },\r\n        }));\r\n        // If there is a nested ul\r\n        if(olNode) {\r\n          childNumber++; // move on padding up\r\n          this.parseSubList(ps, child.children[1], false,childNumber);\r\n          childNumber--; // after the recurssion is done, go one padding down\r\n\r\n        }\r\n      }\r\n    }\r\n    return ps;\r\n  }\r\n\r\n  /**\r\n   * @description form a node, find if a child node has an UL node\r\n   * @param node \r\n   * @param nodeName \r\n   * @returns boolean\r\n   */\r\n  findNode(node:Element, nodeName:string):boolean{\r\n    let found:boolean =false;\r\n    node.childNodes.forEach(eachNode => { \r\n        if(eachNode.nodeName === nodeName){\r\n          found = true;\r\n        }\r\n    })\r\n    return found;\r\n  }\r\n\r\n  /**\r\n   * Parses H* tags into Docx elements.\r\n   * @param elem\r\n   * @private\r\n   */\r\n  private parseHeader(elem: Element): Paragraph {\r\n    let level = elem.nodeName[1];\r\n    let headingLevel: HeadingLevel = HeadingLevel.TITLE;\r\n    switch (level) {\r\n      case \"1\":\r\n        headingLevel = HeadingLevel.HEADING_1;\r\n        break;\r\n      case \"2\":\r\n        headingLevel = HeadingLevel.HEADING_2;\r\n        break;\r\n      case \"3\":\r\n        headingLevel = HeadingLevel.HEADING_3;\r\n        break;\r\n      case \"4\":\r\n        headingLevel = HeadingLevel.HEADING_4;\r\n        break;\r\n      case \"5\":\r\n        headingLevel = HeadingLevel.HEADING_5;\r\n        break;\r\n      case \"6\":\r\n        headingLevel = HeadingLevel.HEADING_6;\r\n        break;\r\n    }\r\n    return new Paragraph({\r\n      children: this.parseText(Array.from(elem.childNodes)),\r\n      heading: headingLevel,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Parses the text of an element into Docx elements, taking typographic elements into account.\r\n   * @param elems\r\n   * @private\r\n   */\r\n  private parseText(elems: Node[]): TextRun[] {\r\n    let r: TextRun[] = [];\r\n\r\n    for (let i = 0, l = elems.length; i < l; i++) {\r\n      let e = elems[i];\r\n      // remove tab runs that occur in markup\r\n      let text = (e.textContent ?? '').replace(/\\s+/g, ' ')\r\n\r\n      // strip leading whitespace from the first element\r\n      if (i == 0) {\r\n        text = text.trimStart();\r\n      }\r\n      switch (e.nodeType) {\r\n        case 1:\r\n          // This is an element like b or i\r\n            switch (e.nodeName) {\r\n              case 'B':\r\n              case 'STRONG':\r\n                r.push(new TextRun({\r\n                  text: text,\r\n                  style: 'default',\r\n                  bold: true\r\n                }));\r\n                break;\r\n              case 'I':\r\n                r.push(new TextRun({\r\n                  text: text,\r\n                  style: 'default',\r\n                  italics: true\r\n                }));\r\n            }\r\n          break;\r\n        case 3:\r\n          r.push(new TextRun({\r\n            text: text,\r\n            style: 'default',\r\n          }))\r\n          break;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  /**\r\n   * Tests that the given filename is valid.\r\n   * @param filename\r\n   * @protected\r\n   */\r\n  protected validateFilename(filename: string): boolean {\r\n    let test1: RegExp = /^[^\\\\/:*?\"<>|]+$/;\r\n    let test2: RegExp = /^\\./;\r\n    let test3: RegExp = /^(nul|prn|con|lpt[0-9]|com[0-9])(\\.|$)/i;\r\n    return test1.test(filename) && !test2.test(filename) && !test3.test(filename);\r\n  }\r\n\r\n}\r\n","<button class=\"usa-button usa-button--accent-warm\" (click)=\"generateFile()\">{{ params.btnName }}</button>","import {ChangeDetectorRef, AfterViewChecked, Component, HostListener, OnInit} from '@angular/core';\r\nimport { FormTemplateInterface } from 'src/app/shared/models/form-template.interface';\r\nimport { FormPageService } from 'src/app/shared/services/form-page/form-page.service';\r\nimport { IctItemService } from 'src/app/shared/services/ict-item/ict-item.service';\r\nimport { Router } from '@angular/router';\r\nimport { ICTInterface } from 'src/app/shared/models/ict.interface';\r\nimport { ElementType } from 'src/app/shared/models/form-element.interface';\r\nimport {IStepIndicator} from \"../../shared/models/step-indicator.interface\";\r\n\r\n@Component({\r\n  selector: 'app-form-page',\r\n  templateUrl: './form-page.component.html',\r\n  styleUrls: ['./form-page.component.scss']\r\n})\r\nexport class FormPageComponent implements OnInit, AfterViewChecked {\r\n\r\n\r\n  /**\r\n   * @description Used to trigger the ngOnChanges function to listing to any input property change\r\n   * @type any\r\n   */\r\n  scanChange:any = \"\";\r\n\r\n  /**\r\n   * @description To display a loading container as the form is loading\r\n   * @type boolean\r\n   */\r\n  loading:boolean = false;\r\n\r\n  /**\r\n   * @description Track the form page from the form component as the user is navigating\r\n   * @type Number\r\n   */\r\n  pageNumber = 0;\r\n\r\n  /**\r\n   * @description Provide all the configuration for the forms and elements which will be created\r\n   * @type FormTemplateInterface\r\n   */\r\n  formConfig:FormTemplateInterface[] = [];\r\n\r\n  /**\r\n   * @description Steps data for StepIndicatorComponent.\r\n   * @type IStepIndicator\r\n   */\r\n  stepsData: IStepIndicator = {tabs:[],activeId:'0'};\r\n\r\n  /**\r\n   * @description Flag to update step indicator.\r\n   * @type boolean\r\n   */\r\n  updateStep: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private formPageService: FormPageService, \r\n    public ictItemService: IctItemService,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n     // Getting the form configuration, creating a new address, any update will no change this.formPageService data\r\n     this.formConfig = JSON.parse(JSON.stringify(this.formPageService.getConfigurations()));\r\n   \r\n     // Redirect to the home page if there is no ictitem/ on page reload\r\n    if(this.ictItemService.get().length <= 0) this.router.navigateByUrl(\"/\");\r\n\r\n    // Letting the form to load before nay initialization\r\n    setTimeout(() => {\r\n      this.formPageService.prepopulateData(this.formConfig,this.ictItemService.get());\r\n      this.loading = true;\r\n    }, 1000);\r\n\r\n    // Creating custom formName for each formElement and generation each configuration\r\n    this.ictItemService.get().forEach((eachIctItem,  index)=> {\r\n      this.stepsData.tabs.push({\r\n        name: eachIctItem.name,\r\n        id: index.toString()\r\n      });\r\n      if(index > 0) {\r\n        const tempConfig = this.formPageService.generateNewConfig(JSON.parse(JSON.stringify(this.formPageService.getConfigurations()[0])), '-'+Date.now().toString()+'-'.concat(index.toString()),eachIctItem);\r\n        tempConfig.id = index;\r\n        this.formConfig.push(tempConfig);\r\n      }\r\n    });\r\n\r\n    // Load the form page based on which the user selection was on the summary page ot be amended, it is 0 by default\r\n    this.onPageChanged(this.formPageService.navToFormPage());\r\n\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    // To evaluate any variable angular hasn't check the value change\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * @description to update the page number when the form page is changing\r\n   * @param index \r\n   * @type number\r\n   * @return void\r\n   */\r\n  onPageChanged(index:number):void{\r\n    this.pageNumber = index;\r\n    this.stepsData.activeId = this.pageNumber.toString();\r\n    this.updateStep = !this.updateStep;\r\n  }\r\n\r\n  /**\r\n   * @return void\r\n   * @description When the user submit an project or ICT name, it will call the addIctItem function\r\n   * @param data \r\n   */\r\n   onFormSubmitted(data:any):void{\r\n\r\n      this.formPageService.setFormResults(data);\r\n      const itcItems:ICTInterface[] = this.ictItemService.get();\r\n      itcItems.forEach((eachItem,index) =>{\r\n          eachItem.langKeyWords = data[index];\r\n      })\r\n\r\n      // Saved the updatde items, will be used when ever the user returns to the form to repopulated values\r\n      this.ictItemService.reSet(itcItems);\r\n      this.router.navigateByUrl(('/summary-page'));\r\n  }\r\n\r\n  /**\r\n   * @description Update page number on step navigation click.\r\n   * @param event\r\n   */\r\n  onSelectedTabReceive(event:number){\r\n    this.pageNumber = event;\r\n  }\r\n}\r\n","<atr-step-indicator [stepsData]=\"stepsData\"  [update] = \"updateStep\" (getSelectedTab)=\"onSelectedTabReceive($event)\"></atr-step-indicator>\r\n\r\n<div *ngIf=\"ictItemService.get().length > 0 && loading\" class =\"font-serif-xl margin-bottom-neg-1\">\r\n    <div class=\"grid-row\">\r\n        <div class=\"tablet:grid-col-3 margin-bottom-3 tablet:margin-bottom-0 tablet:margin-right-6\">\r\n        </div>\r\n        <div class=\"tablet:grid-col-8 tablet:margin-bottom-0\" class=\"ogp-title\">\r\n            <b>How can ART help you ?</b>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n<div *ngIf=\"ictItemService.get().length > 0 && loading;\" class=\"\">\r\n        <art-form-template\r\n                [formConfig]=\"formConfig\"\r\n                [scanChange]=\"scanChange\"\r\n                [pageIndex]=\"pageNumber\"\r\n                (formData)=\"onFormSubmitted($event)\"\r\n                (pageNumber)=\"onPageChanged($event)\"\r\n        ></art-form-template>\r\n</div>\r\n<div class=\"ogp-flex\" *ngIf=\"!loading\">\r\n        <div class=\"lds-ripple\"><div></div><div></div></div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { IButtonInterface } from 'src/app/shared/models/IButtonInterface';\r\nimport { IctItemService } from 'src/app/shared/services/ict-item/ict-item.service';\r\nimport { FormTemplateInterface } from 'src/app/shared/models/form-template.interface';\r\nimport { ArtIctLpService } from 'src/app/shared/services/art-ict-lp/art-ict-lp.service';\r\nimport { ICTInterface } from 'src/app/shared/models/ict.interface';\r\nimport { LandingPageService, NextPage } from 'src/app/shared/services/landing-page/landing-page.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-ict-listing-page',\r\n  templateUrl: './ict-listing-page.component.html',\r\n  styleUrls: ['./ict-listing-page.component.scss']\r\n})\r\nexport class IctListingPageComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * @description limit the maximum of ICT items that can be added\r\n   * @type number\r\n   */\r\n  maxItems:number = 0;\r\n\r\n  /**\r\n   * @description Provide all the configuration for the forms and elements which will be created\r\n   * @type FormTemplateInterface\r\n   */\r\n  formConfig:FormTemplateInterface[] = [];\r\n\r\n  /**\r\n   * @description Used to trigger the ngOnChanges function to listing to any input property change\r\n   * @type any\r\n   */\r\n  scanChange:any = \"\";\r\n\r\n  /**\r\n   * @description to store all the ICT Items created or uploaded\r\n   * @type: ICTInterface[]\r\n   */\r\n  ictItems:ICTInterface[] = [];\r\n\r\n  /**\r\n   * @description store the value of the placeholder for an element\r\n   * @type string\r\n   */\r\n  tempPlaceHolder:string | undefined;\r\n\r\n  /**\r\n  * @description enum to set predefined string \r\n  * @type string\r\n  */\r\n  nextPage = NextPage;\r\n\r\n  /**\r\n   * @description using the ictItemService component and artIctLpService service\r\n   * @param ictItemService artIctLpService\r\n   */\r\n  constructor(\r\n    private router:Router,\r\n    public landingPageService: LandingPageService,\r\n    private ictItemService: IctItemService, \r\n    public artIctLpService:ArtIctLpService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.maxItems = this.artIctLpService.getMaxItems();\r\n\r\n    // Return on the home page if the user refreshes the page, because all the content will be lost\r\n    if(!this.landingPageService.getNextPage()){\r\n      this.router.navigateByUrl(\"/\");\r\n    }\r\n    // Getting the form configuration\r\n    this.formConfig = this.artIctLpService.getConfigurations();\r\n    this.tempPlaceHolder = this.formConfig[0].formElements[0].placeholder;\r\n\r\n  }\r\n\r\n  /**\r\n   * @description Before the page is getting destructed, the form needs to be disable if it was enable before\r\n   * @return void\r\n   */\r\n  ngOnDestroy(): void {\r\n    if(this.ictItems.length <= this.maxItems && this.formConfig[0].disable ){\r\n      this.formConfig[0].disable = false;\r\n      this.formConfig[0].formElements[0].placeholder = this.tempPlaceHolder;\r\n      this.scanChange=\"false\";\r\n    }\r\n  } \r\n\r\n  /**\r\n   * @return void\r\n   * @description When the user submit an project or ICT name, it will call the addIctItem function\r\n   * @param data \r\n   */\r\n  onFormSubmitted(dataArr:any):void{\r\n    const data = dataArr[0];\r\n    const key = Object.keys(data)[0];\r\n    const val = data[key];\r\n    const tempIctItem:ICTInterface = {name:val, langKeyWords:data, timeStamp: (Date.now()).toString()} \r\n    this.addIctItem(tempIctItem);\r\n  }\r\n\r\n   /**\r\n   * @description When the user delete an ictItem, it will return the index of the ictItem deleted\r\n   * @param index \r\n   * @type number\r\n   * @return void\r\n   */\r\n  onItemDelete(index:number):void{\r\n    this.removeIctItem(index-1);\r\n  }\r\n\r\n  /**\r\n   * @description Used to remove an ICT item from the ictItem array\r\n   * @type: number\r\n   * @return void\r\n   * @param index\r\n   */\r\n   removeIctItem(index: number):void{\r\n    if(this.ictItems[index]){\r\n      // If the form  is disabled and an item is being removed \r\n      if(this.ictItems.length <= this.maxItems && this.formConfig[0].disable ){\r\n        this.formConfig[0].disable = false;\r\n        this.formConfig[0].formElements[0].placeholder = this.tempPlaceHolder;\r\n        this.scanChange=\"false\";\r\n        this.ictItems.splice(index,1);\r\n      }else{\r\n        this.ictItems.splice(index,1);\r\n      };\r\n      this.ictItemService.reSet(this.ictItems);\r\n    }\r\n   }\r\n\r\n  /**\r\n   * @description Used to add an ICT item to the ictItem array\r\n   * @type: ICTInterface\r\n   * @return void\r\n   */\r\n  addIctItem(ictItem: ICTInterface):void{\r\n    // No action needed if the mx item is reached\r\n    if(this.ictItems.length >= this.maxItems && this.formConfig[0].disable){\r\n      return;\r\n    }\r\n\r\n    if(this.ictItems.length < this.maxItems){\r\n      this.ictItems.push(ictItem);\r\n      this.ictItemService.reSet(this.ictItems);\r\n    }\r\n\r\n    // if the max item number has been reached, disable the form\r\n    if(this.ictItems.length === this.maxItems){\r\n      this.formConfig[0].disable = true;\r\n      this.formConfig[0].formElements[0].placeholder = \"\";\r\n      this.scanChange=\"true\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description when the file has been uploaded successfully, this function is called \r\n   * @param event \r\n   * @type ICTInterface\r\n   * @return void\r\n   */\r\n   onFileReceive(event:ICTInterface[]):void{\r\n    //this.ictItemService.set(event);\r\n    event.forEach(eachIctItem => this.addIctItem(eachIctItem));\r\n  }\r\n}\r\n","\r\n<!-- Bordered section-->\r\n<div art-generic-text-layout=\"top-border\">\r\n\r\n    <div class=\"margin-3\">\r\n        <!-- Upload ICT section-->\r\n        <div *ngIf=\"nextPage.uploadICT === landingPageService.getNextPage()\" >\r\n            <!-- Get Upload button container section-->\r\n            <div class=\"margin-bottom-neg-1\">\r\n                <div class =\"font-serif-lg\">\r\n                    <b>{{artIctLpService.getUploadBtn().description}}</b>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- File upload section-->\r\n            <div id=\"art-upload-button-container\" class=\"margin-left-2 margin-bottom-3\">\r\n                <art-file-upload \r\n                    (getFileData)=\"onFileReceive($event)\" \r\n                    [maxFilesNbr]=\"maxItems - ictItems.length\"\r\n                    [maxFile]=\"maxItems\"\r\n                    [maxLength] = \"artIctLpService.getMaxLength()\"\r\n                >\r\n                </art-file-upload>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Input field section-->\r\n        <art-generic-text *ngIf=\"artIctLpService.getSectionTitle() && nextPage.getStarted === landingPageService.getNextPage()\">\r\n                <div class =\"font-serif-lg margin-bottom-1\">\r\n                    <b>{{artIctLpService.getSectionTitle()}}</b>\r\n                </div>\r\n                <div class=\"margin-left-2\">\r\n                    <p class=\"margin-bottom-0\">\r\n                        {{artIctLpService.getInputLabel()}}\r\n                    </p>\r\n                    <!-- Input field -->\r\n                    <art-form-template \r\n                        [formConfig]=\"formConfig\" \r\n                        [scanChange]=\"scanChange\"\r\n                        (formData)=\"onFormSubmitted($event)\"\r\n                    ></art-form-template>\r\n                    <i class=\"usa-error-message font-sans-2xs\" *ngIf=\"ictItems.length >= maxItems\">{{artIctLpService.getErrorMsg()}}</i>\r\n                </div>         \r\n        </art-generic-text>\r\n         <!-- Listing ICT Items -->\r\n         <div class=\"margin-left-2 margin-top-1\">\r\n            <span *ngFor= \"let eachIctItem of ictItems; let index = index\">\r\n                <art-ict-item \r\n                    [index] = \"index + 1\"\r\n                    [ictItem]=\"eachIctItem\"\r\n                    (delete)=\"onItemDelete($event)\"\r\n                >\r\n                </art-ict-item>\r\n            </span>\r\n        </div>  \r\n        <!-- Continue button-->\r\n        <div class=\"margin-top-5\" *ngIf=\"ictItems\">\r\n            <art-button  \r\n                [buttonData] = \"artIctLpService.getContBtl()\" \r\n                [disabled]=\"ictItems.length <= 0\"\r\n                >\r\n            </art-button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IButtonInterface } from 'src/app/shared/models/IButtonInterface';\r\nimport { ICTInterface } from 'src/app/shared/models/ict.interface';\r\nimport { IStepIndicator } from 'src/app/shared/models/step-indicator.interface';\r\nimport { IctItemService } from 'src/app/shared/services/ict-item/ict-item.service';\r\nimport { LandingPageService, NextPage } from 'src/app/shared/services/landing-page/landing-page.service';\r\n\r\n@Component({\r\n  selector: 'art-landing-page',\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.scss']\r\n})\r\nexport class LandingPageComponent implements OnInit {\r\n\r\n  /**\r\n   * @description Using the  ICT Item service and the landing page service\r\n   * @params ictItemService, landingPageService\r\n   */\r\n  constructor(private ictItemService:IctItemService, public landingPageService:LandingPageService ) { }\r\n\r\n  /**\r\n   * @description data for the description above the button\r\n   * @type string\r\n   */\r\n  lpButtonHeader:string = \"\";\r\n\r\n  /**\r\n    * @description Storing the data for the get started button: label and destination\r\n    * @type IButtonInterface\r\n    */\r\n  getStartedBtn:IButtonInterface = {label:\"\"};\r\n\r\n  /** \r\n  * @description storing the data for the upload ict button. labe and destination\r\n  * @type IButtonInterface\r\n  */\r\n  getUploadICTBtn:IButtonInterface = {label:\"\"}\r\n\r\n\r\n  ngOnInit(): void {\r\n    //Initialization\r\n    this.lpButtonHeader = this.landingPageService.getLpButtonData().buttonHeader;\r\n    this.getStartedBtn = {...this.landingPageService.getLpGetStrBtn(), action:()=>{this.getNextPage(NextPage.getStarted)}};\r\n    this.getUploadICTBtn = {...this.landingPageService.getLpUplBtn(), action:()=>{this.getNextPage(NextPage.uploadICT)}};\r\n  }\r\n\r\n\r\n  /**\r\n   * @description set the destination on the next page\r\n   * @param nextPage \r\n   * @type string\r\n   */\r\n  getNextPage(nextPage:NextPage):void{\r\n      this.landingPageService.setNextPage(nextPage);\r\n  }\r\n\r\n}\r\n","<section aria-label=\"Landing Banner\">\r\n    <!-- Get started button container section-->\r\n    <div art-generic-text-layout=\"top-border\">\r\n        <art-generic-text *ngIf=\"lpButtonHeader\">\r\n            <div class=\"margin-2\">\r\n                <div class =\"font-serif-lg margin-bottom-1\">\r\n                    <b>{{lpButtonHeader}}</b>\r\n                </div> \r\n                <div class=\"art-flex\">\r\n                    <div>\r\n                        <art-button [buttonData] = \"getStartedBtn\" ></art-button>\r\n                    </div>\r\n                    <div class=\"art-btn\">\r\n                        <art-button [buttonData] = \"getUploadICTBtn\"   ></art-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </art-generic-text>\r\n    </div>\r\n    <!-- Sample Procurement Language in 3 Steps section-->\r\n    <div art-generic-text-layout=\"background-color\">\r\n        <art-generic-text *ngIf=\"landingPageService && landingPageService.getSampleProLang\">\r\n            <div class=\"padding-x-3 padding-y-1 margin-top-5\"  >\r\n                <div [innerHTML]=\"landingPageService.getSampleProLang()\"></div>\r\n            </div>\r\n        </art-generic-text>\r\n    </div>\r\n</section>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ICTInterface } from 'src/app/shared/models/ict.interface';\r\nimport { ClipboardService } from 'ngx-clipboard';\r\nimport {Art508LangService} from '../../shared/services/art-508-lang/art-508-lang.service';\r\nimport {IctItemService} from \"../../shared/services/ict-item/ict-item.service\";\r\nimport { IStepIndicator } from 'src/app/shared/models/step-indicator.interface';\r\nimport { Router } from '@angular/router';\r\nimport { FormPageService } from 'src/app/shared/services/form-page/form-page.service';\r\n\r\n@Component({\r\n    selector: 'app-summary-page',\r\n    templateUrl: './summary-page.component.html',\r\n    styleUrls: ['./summary-page.component.scss']\r\n})\r\nexport class SummaryPageComponent implements OnInit {\r\n\r\n  /**\r\n   * @description Used to trigger the ngOnChanges function to listing to any input property change\r\n   * @type any\r\n   */\r\n  resultData:any = \"\";\r\n\r\n  constructor(\r\n    private art508LangService: Art508LangService,\r\n    public ictItemService: IctItemService,\r\n    private clipboardService:ClipboardService,\r\n    private router: Router,\r\n    private formPageService:FormPageService\r\n  ) {}\r\n\r\n\r\n    /**\r\n     * To position the currently active item\r\n     */\r\n    currentIndex:number = 0;\r\n\r\n    /**\r\n     * Maximum index for form's step indicator\r\n     */\r\n    maxIndex: number = 0;\r\n    \r\n    /**\r\n     * Will be populated from 508MappingService\r\n     */\r\n    languageGenerated:string[] = []  ;\r\n\r\n    stepsData:IStepIndicator = {tabs:[], activeId:''};\r\n\r\n    /**\r\n     * ICTItems can be populated from ICTItemService\r\n     */\r\n    ictItems: ICTInterface[] = [];\r\n \r\n    ngOnInit(): void {\r\n        // Get form data from the ICT service.\r\n        this.ictItems = this.ictItemService.get();\r\n        \r\n        //if there is no icItems, return to landingPageComponent\r\n        if(this.ictItems.length==0){\r\n            this.router.navigateByUrl('');\r\n        }\r\n        this.maxIndex = this.ictItems.length-1;\r\n        \r\n        this.ictItems.forEach((item, index) =>{\r\n\r\n            //Populate step data indicator\r\n            this.stepsData.tabs.push({id: \"0\"+index, name:item.name});\r\n            const langKeyWords = JSON.parse(JSON.stringify(item.langKeyWords));\r\n            const langGenerated = this.art508LangService.get508Languages(langKeyWords) ? this.art508LangService.get508Languages(langKeyWords) : \"<p><b>No Language can be generated based on your selection!</b></p>\"\r\n            \r\n            //508MapoingService call for language\r\n            this.languageGenerated.push(\"<p><h2>\" + item.name + \"</h2></p>\\n\" + langGenerated);\r\n        });\r\n\r\n        this.stepsData.activeId = \"00\";\r\n    }\r\n\r\n    onNext(){\r\n        this.currentIndex++;\r\n        if(this.currentIndex >= this.maxIndex){\r\n            this.currentIndex = this.maxIndex;\r\n        }\r\n        this.stepsData.activeId = this.stepsData.tabs[this.currentIndex].id;\r\n        //document.documentElement.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n        const section = document.getElementById('art-section-508-requirements');\r\n        if (section instanceof HTMLElement) {\r\n         section.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n        }\r\n\r\n        \r\n    }\r\n    onPrevious(){\r\n        this.currentIndex--;\r\n        this.stepsData.activeId = this.stepsData.tabs[this.currentIndex].id;\r\n        //document.documentElement.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n        const section = document.getElementById('art-section-508-requirements');\r\n        if (section instanceof HTMLElement) {\r\n         section.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n        }\r\n\r\n    }\r\n\r\n    copyToClipboard(){\r\n        this.clipboardService.copyFromContent(this.languageGenerated[this.currentIndex]);\r\n    }\r\n\r\n    onAmendForm(index:number){\r\n        this.formPageService.setFormPage(index);\r\n        this.router.navigateByUrl(\"/form-page\");\r\n    }\r\n\r\n    onSelectedTabReceive(selectedIndex:number){\r\n        this.currentIndex = selectedIndex;\r\n        this.stepsData.activeId = this.stepsData.tabs[this.currentIndex].id;\r\n    }\r\n}\r\n\r\n","<atr-step-indicator [stepsData]=\"stepsData\" (getSelectedTab)=\"onSelectedTabReceive($event)\" [activeTab]=\"stepsData.activeId\" [currentIndex] = \"currentIndex\" ></atr-step-indicator>\r\n<div class=\"usa-media-block ogp-flex-space\">\r\n  <div class=\"ogp-btn\">\r\n    <button type=\"\" class=\"usa-button usa-button--accent-warm\" (click)=\"copyToClipboard()\">Copy all Solicitation Language</button>\r\n  </div>\r\n  <div class=\"ogp-btn\">\r\n    <art-docx-download [params]=\"{btnName:'Download Section 508 Results', fileName:'Language'}\" [markup]=\"languageGenerated[currentIndex]\" ></art-docx-download>\r\n  </div>\r\n  <div class=\"ogp-btn\">\r\n    <art-save-json [saveAsInfo]=\"{btnName:'Save Results in a JSON', fileName:'jsonData.json'}\" [ictItem]=\"ictItems[currentIndex]\" class=\"\" ></art-save-json>\r\n  </div>\r\n</div>\r\n  \r\n<div class=\"grid-row grid-gap margin-top-4\">\r\n  <main class=\"usa-layout-docs__main desktop:grid-col-12 usa-prose usa-layout-docs\">\r\n    <h2 class=\"site-preview-heading\">Section 508 Requirements for Your Solicitation</h2>\r\n    <section id=\"section-result\">\r\n      <div class=\"usa-summary-box\" role=\"region\" aria-labelledby=\"summary-box-key-information\">\r\n        <div class=\"usa-summary-box__body\">\r\n          <h3 class=\"usa-summary-box__heading\" id=\"summary-box-key-information\">Instructions</h3>\r\n          <div class=\"usa-summary-box__text\">\r\n            <p>Copy and paste the language below into your procurement (include in the SOW, PWS, or SOO)</p>\r\n            <ol>\r\n              <li>\r\n                Include the Section 508 Requirements generated by ART in your Statement of Work, Performance Work Statement, or Statement of Objectives.These requirements apply to the specific technology products and services you are buying. <i>(do not copy these instructions into the solicitation)</i>.\r\n              </li>\r\n              <li>\r\n                The ART output can be included as a separate document labeled as  your 508 requirements or as part of your requirements sections of your contract.\r\n              </li>\r\n              <li>\r\n                If you copied and pasted Section 508 language from an earlier contract or solicitation, remove this old language in its entirety and replace it with the language generated by ART.\r\n              </li>\r\n              <li>\r\n                Review the Section 508 requirements. If you have any questions about the requirements, contact your agency 508 program manager.\r\n              </li>\r\n            </ol>\r\n            <h3>Why is this important?</h3>\r\n            <p>\r\n              By including Section 508 requirements in the solicitation, you are ensuring potential Offerors know which Section 508 standards apply to commercially available technology products required to be offered by the vendor in their proposals, as well as requirements to ensure technology services provided will support the agency’s ability to comply with the Section 508 law.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section class=\"example-spacing usa-prose margin-top-1 font-sans-sm\">\r\n      <h2 id=\"art-section-508-requirements\">Section 508 Requirements</h2>\r\n    </section>\r\n    <section>\r\n      <div id=\"results\">\r\n        <div class=\"section-1-results\"></div>\r\n      </div>\r\n      <div id=\"copy-requirements\">\r\n        <p>\r\n            Section 508 of the Rehabilitation Act, as amended by the Workforce Investment Act of 1998 (P.L. 105-220) requires that when Federal agencies\r\n            develop, procure, maintain, or use information and communication technology (ICT), it shall be accessible to people with disabilities. Federal employees and\r\n            members of the public who have disabilities must have access to, and use of, information and data that is comparable to people without disabilities.\r\n        </p>\r\n        <p *ngIf=\"ictItems[currentIndex] && ictItems[currentIndex].name\">\r\n            <b>Item that contains ICT: </b>{{ictItems[currentIndex].name}}\r\n        </p>\r\n        <div [innerHTML]=\"languageGenerated[currentIndex]\" class=\"margin-bottom-5\">\r\n          \r\n        </div>\r\n      </div>\r\n    </section>\r\n  </main>\r\n</div>\r\n\r\n<div class=\"usa-media-block ogp-flex-space\">\r\n  <div class=\"width-full\">\r\n    <button class=\"ogp-btn usa-button usa-button--base\" (click)=\"onPrevious()\" [disabled]=\"currentIndex==0\">Prev</button>\r\n    <button class=\"ogp-btn usa-button usa-button--base\" (click)=\"onNext()\" [disabled]=\"currentIndex==maxIndex\">Next</button>\r\n  </div>\r\n \r\n  <div class=\"width-full\">\r\n    <button type=\"\" class=\"ogp-btn usa-button usa-button--outline float-right margin-right-0\" (click)=\"onAmendForm(currentIndex)\">Amend Form</button>\r\n    <button (click)=\"onAmendForm(0)\" class=\"ogp-btn usa-button usa-button--outline float-right\">Back to Form</button>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormTemplateInterface } from 'src/app/shared/models/form-template.interface';\r\nimport { ArtTestService } from 'src/app/shared/services/art-test.service';\r\nimport { IctItemService } from 'src/app/shared/services/ict-item/ict-item.service';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n/**\r\n * @description Provide all the configuration for the forms and elements which will be created\r\n * @type FormTemplateInterface\r\n */\r\n  formConfig:FormTemplateInterface[] = [];\r\n\r\n  /**\r\n  * @description Used to trigger the ngOnChanges function to listing to any input property change\r\n  * @type any\r\n  */\r\n  scanChange:any = \"\";\r\n  \r\n  constructor(private ictItemService: IctItemService, \r\n    public artTestService:ArtTestService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formConfig = this.artTestService.getConfigurations();\r\n  }\r\n\r\n  /**\r\n   * @return void\r\n   * @description When the user submit an project or ICT name, it will call the addIctItem function\r\n   * @param data \r\n   */\r\n   onFormSubmitted(data:any):void{\r\n    const key = Object.keys(data)[0];\r\n    const val = data[key];\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { IButtonInterface } from '../../models/IButtonInterface';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'art-button',\r\n    templateUrl: './art-button.component.html',\r\n    styleUrls: ['./art-button.component.scss']\r\n})\r\nexport class ArtButtonComponent implements OnInit {\r\n    constructor(private router: Router) { }\r\n\r\n    /**\r\n     * @description the input for the button \r\n     * @type IButtonInterface\r\n     */\r\n    @Input('buttonData') buttonData: IButtonInterface | undefined;\r\n\r\n    /**\r\n     * @description to disabled the button\r\n     * @type boolean\r\n     */\r\n    @Input('disabled') disabled?: boolean = false;\r\n\r\n    ngOnInit(): void {\r\n        if(this.buttonData && !this.buttonData.btnClass) this.buttonData.btnClass = \"warm\";\r\n        if(this.buttonData && !this.buttonData.ariaLabel) {\r\n            this.buttonData.ariaLabel = this.buttonData?.label + \" button\"\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @return void\r\n     * @description this function is trigger when the button is and will redirect the user to the destination\r\n     */\r\n    buttonClicked():void {\r\n\r\n        // Calling the action method if defined\r\n        if (this.buttonData?.action) {\r\n            this.buttonData?.action();\r\n        }\r\n        if (this.buttonData?.destination) {\r\n            this.router.navigateByUrl(this.buttonData?.destination);\r\n        }\r\n    }\r\n}\r\n","<button \r\n    [disabled]=\"disabled\"\r\n    type=\"button\" \r\n    class=\"usa-button \" \r\n    [ngClass] = \"{'usa-button--accent-warm': buttonData?.btnClass == 'warm', 'usa-button--base': buttonData?.btnClass == 'base'}\"\r\n    [attr.aria-label]=\"buttonData?.ariaLabel\"\r\n    (click)=\"buttonClicked()\">\r\n        {{buttonData?.label}}\r\n</button>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\r\nimport {FormElement} from \"../../models/form-element.interface\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'art-checkbox-group',\r\n  templateUrl: './art-checkbox-group.component.html',\r\n  styleUrls: ['./art-checkbox-group.component.scss']\r\n})\r\nexport class ArtCheckboxGroupComponent implements OnInit, OnChanges {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnChanges(){\r\n\r\n    /**\r\n     * Whenever the parent is updating the value of the checkbox element, this function will check if some element needs to be disable and disable them on a new page load.\r\n     */\r\n    this.enableFormElts();\r\n  }\r\n\r\n  /**\r\n   * @type FormElement\r\n   * @description the parent component will send that input to configure this text input field component\r\n   */\r\n  @Input() formData: FormElement | undefined;\r\n\r\n  /**\r\n   * @description Formgroup passed by the parent to store all checkboxes control dynamically created\r\n   * @type formGroup\r\n   */\r\n  @Input() formGroup: FormGroup = new FormGroup({});\r\n\r\n  /**\r\n   * @type boolean\r\n   * @description used ot hide the control by the parent\r\n   */\r\n  @Input() hidden: boolean = false;\r\n\r\n  /**\r\n   * Used to trigger ngChange when an object is updated by a parent\r\n   */\r\n  @Input() dataUpdated:boolean = false;\r\n\r\n  /**\r\n   * @description Will return the data to the parent for only 1 form after form submission\r\n   * @type FormElement\r\n   */\r\n  @Output() formElement = new EventEmitter<FormElement>();\r\n\r\n  /**\r\n   * @description return the element the user clicked on\r\n   */\r\n  @Output() eltClicked = new EventEmitter<FormElement>();\r\n\r\n  ngOnInit(): void {\r\n    this.formData?.options?.forEach(element => {\r\n      this.formGroup?.addControl(element.controlName, new FormControl(element.value, [Validators.required]));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description Logic to uncheck all other option if a checkbox with onlyOption field is set to true\r\n   * @param formElement \r\n   * @return void\r\n   */\r\n  onClicked(formElement:FormElement):void{\r\n    this.eltClicked.emit(formElement);\r\n    const tempControl:FormControl = <FormControl>this.formGroup.get(formElement.controlName);\r\n    const value = tempControl.value;\r\n\r\n    if(formElement.onlyOption && !value ){\r\n      this.formGroup.reset();\r\n      this.formGroup.get(formElement.controlName)?.patchValue(!value);\r\n      Object.keys(this.formGroup.controls).forEach(key =>{\r\n        if(key !== formElement.controlName){\r\n          this.formGroup.get(key)?.disable();\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      this.formGroup.enable();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Used when the page is loading by clicking on next or back, and any checkbox needed to by loaded disabled would be\r\n   */\r\n  enableFormElts(){\r\n\r\n    let  formElement:FormElement | undefined;\r\n    const values = this.formGroup.value;\r\n\r\n    // Found the element which has a value\r\n    Object.keys(this.formGroup.controls).forEach(key =>{\r\n      if(values[key] && !formElement?.controlName){\r\n        // find the formElement for the key which has a value and has a onlyOption\r\n        formElement = this.formData?.options?.find(opt => {\r\n          return opt.controlName === key && opt.onlyOption\r\n        });\r\n      }\r\n    });\r\n\r\n    // If that element is found disable all the other option in that group except that element\r\n    if(formElement?.controlName){\r\n      Object.keys(this.formGroup.controls).forEach(key =>{\r\n        if(key !== formElement?.controlName &&  !this.formGroup.get(key)!.disabled){\r\n          this.formGroup.get(key)?.disable();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Get FormControl by controlName.\r\n   * @param controlName\r\n   */\r\n  getControls(controlName: string | number): FormControl {\r\n    return <FormControl>this.formGroup.controls[controlName];\r\n  }\r\n\r\n}\r\n","<div [hidden] = \"hidden\" class=\"usa-form-group\">\r\n    <div  class=\"margin-bottom-2\"><b>{{formData?.title}}</b></div>\r\n    <fieldset class=\"usa-fieldset\">\r\n        <legend class=\"usa-legend\" [innerHTML]=\"formData?.label\"></legend>\r\n\r\n        <div class=\"usa-checkbox\" *ngFor=\"let formItem of formData?.options\" [ngClass]=\"{'is-active':getControls(formItem.controlName).value}\">\r\n            <input\r\n                    class=\"usa-checkbox__input\"\r\n                    id=\"{{ formItem.controlName}}\"\r\n                    type=\"checkbox\"\r\n                    name=\"{{ formItem.controlName}}\"\r\n                    [formControl]=\"getControls(formItem.controlName)\"\r\n                    (click)=\"onClicked(formItem)\"\r\n            />\r\n            <label class=\"usa-checkbox__label art-bold\" for=\"{{ formItem.controlName}}\" > {{formItem.label}}\r\n                <span class=\"usa-checkbox__label-description \" [innerHTML]=\"formItem.description\">\r\n                </span>\r\n            </label>\r\n        </div>\r\n\r\n    </fieldset>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormElement } from '../../models/form-element.interface';\r\n\r\n@Component({\r\n  selector: 'art-generic-text',\r\n  templateUrl: './art-generic-text.component.html',\r\n  styleUrls: ['./art-generic-text.component.scss']\r\n})\r\nexport class ArtGenericTextComponent implements OnInit {\r\n\r\n  /**\r\n   * @description the input value for this component\r\n   * @type string\r\n   */\r\n  @Input() title:string = '';\r\n  /**\r\n   * @description return the element the user clicked on\r\n   */\r\n   @Output() eltClicked = new EventEmitter<FormElement>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <strong class=\"art-agt-title\">{{ title }}</strong>\r\n  <ng-content></ng-content>\r\n</div>\r\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {ICTInterface} from \"../../models/ict.interface\";\r\n\r\n@Component({\r\n  selector: 'art-ict-item',\r\n  templateUrl: './art-ict-item.component.html',\r\n  styleUrls: ['./art-ict-item.component.scss']\r\n})\r\nexport class ICTItemComponent {\r\n  /**\r\n   * @var index  The index of this item in a list\r\n   */\r\n  @Input() index: number = 0;\r\n\r\n  /**\r\n   * @var ictItem  The Item this component represents.\r\n   */\r\n  @Input() ictItem?: ICTInterface;\r\n\r\n  /**\r\n   * @var delete  An event emitter that triggers when the delete button is clicked.\r\n   */\r\n  @Output() delete: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Emits a delete event when the function is invoked.\r\n   * This function is bound to the click event of the delete button.\r\n   */\r\n  deleteClicked(): void {\r\n    this.delete.emit(this.index);\r\n  }\r\n\r\n}\r\n","<div attr.data-index=\"{{ index }}\">\r\n    <span><abbr title=\"{{ ictItem?.name }}\">{{ ictItem?.name }}</abbr></span>\r\n    <button \r\n        (click)=\"deleteClicked()\" \r\n        attr.aria-label=\"Delete button for index {{index}}\"\r\n        class=\"usa-button usa-button--secondary\" >Delete\r\n    </button>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { FormElement } from \"../../models/form-element.interface\";\r\n\r\n@Component({\r\n    selector:'art-radiobutton-group',\r\n    templateUrl: './art-radiobutton-group.component.html',\r\n    styleUrls:['./art-radiobutton-group.component.scss']\r\n})\r\n\r\nexport class RadiobuttonGroupComponent implements OnInit{\r\n\r\n    @Input() formData: FormElement | undefined;\r\n    @Input() formGroup: FormGroup = new FormGroup({});\r\n    @Input() hidden: boolean = false;\r\n    /**\r\n     * @description return the element the user clicked on\r\n     */\r\n    @Output() eltClicked = new EventEmitter<FormElement>();\r\n\r\n \r\n    constructor(){}\r\n    ngOnInit(): void {\r\n        if(this.formData){\r\n            this.formGroup.addControl(this.formData.controlName, new FormControl(this.formData.value, [Validators.required]));\r\n        }\r\n    }\r\n /**\r\n   * @description emit the element the user clicked on\r\n   * @param formElement \r\n   * @return void\r\n   */\r\n    onClicked(formElement:FormElement):void{\r\n        this.eltClicked.emit(formElement);\r\n    }\r\n}\r\n","<div [formGroup]=\"formGroup\" [hidden]=\"hidden\">\r\n    <div  class=\"margin-bottom-2\"><b>{{formData?.title}}</b></div>\r\n    <fieldset class=\"usa-fieldset\">\r\n        <legend *ngIf=\"formData?.label\" class=\"usa-legend\">{{formData?.label}}</legend>\r\n        <!-- TODO: Show Error message here -->\r\n        <div *ngFor=\"let button of formData?.options, let i=index\">\r\n            <div class=\"usa-radio\">\r\n                <input\r\n                 (click)=\"onClicked(button)\"\r\n                  class=\"usa-radio__input usa-radio__input--tile\"\r\n                  id=\"radio_answer_{{button.controlName}}_{{i}}\"\r\n                  type=\"radio\"\r\n                  formControlName=\"{{formData?.controlName}}\"\r\n                  value=\"{{button.value}}\"\r\n                 [attr.name]=\"formData?.controlName\"\r\n                />\r\n                <label  \r\n                    id = \"radio_label_{{button.controlName}}_{{i}}\" \r\n                    class=\"usa-radio__label\" \r\n                    [ngClass]=\"{'art-bold': button.description}\"  \r\n                    for=\"radio_answer_{{button.controlName}}_{{i}}\"\r\n                    >{{button.label}}\r\n                    <span *ngIf=\"button.description\" class=\"usa-checkbox__label-description\" [innerHTML]=\"button.description\"></span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n        <div *ngFor=\"let eachOpt of formData?.options\">\r\n            <div *ngIf=\"formGroup.value[formData!.controlName] === eachOpt.value && eachOpt.info\" class=\"usa-alert usa-alert--info usa-alert--no-icon margin-top-2\">\r\n                <div class=\"usa-alert__body\">\r\n                  <p class=\"usa-alert__text\">\r\n                    {{eachOpt.info}}\r\n                  </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </fieldset>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SafeUrl } from '@angular/platform-browser';\r\nimport { ICTInterface } from '../../models/ict.interface';\r\n\r\n@Component({\r\n  selector: 'art-save-json',\r\n  templateUrl: './art-save-json.component.html',\r\n  styleUrls: ['./art-save-json.component.scss']\r\n})\r\n\r\n/**\r\n * A button component to facilitate downloading data in json format.\r\n */\r\nexport class ArtSaveJsonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  /**\r\n   * @type obj{btnName:string, fileName:string}\r\n   * @description the parent component will send input to configure the save as json button component\r\n   */\r\n  @Input() saveAsInfo:any = {btnName:'', fileName:''};\r\n\r\n  /**\r\n   * @type ICTInterface\r\n   * @description input to Save As Json component from parent componenet\r\n   */\r\n  @Input() ictItem: ICTInterface |undefined\r\n\r\n  /**\r\n   * @type boolean\r\n   * @description makes the button enabled or disabled.\r\n   */\r\n  buttonIsEnabled:boolean = false;\r\n\r\n  ngOnInit() {\r\n    if(this.ictItem){\r\n      this.buttonIsEnabled=true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns SafeUrl\r\n   * @description generates a json content from ICT Item and returns a safe url linking to the json file. \r\n   */\r\n  get dataUri(): SafeUrl {\r\n    const jsonData = JSON.stringify(this.ictItem);\r\n    const uri = 'data:application/json;charset=UTF-8,' + encodeURIComponent(jsonData);\r\n    return uri;\r\n  }\r\n}","<a *ngIf=\"buttonIsEnabled\" download=\"{{saveAsInfo.fileName}}\" [href]=\"dataUri\" class=\"usa-button usa-button--accent-warm\">\r\n  {{saveAsInfo.btnName}}\r\n</a>\r\n<button *ngIf=\"!buttonIsEnabled\"  class=\"usa-button usa-button--accent-warm\" disabled>{{saveAsInfo.btnName}}</button>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport { ArtSideMenuInterface } from '../../models/art-side-menu.interface';\r\n\r\n@Component({\r\n  selector: 'art-side-navigation',\r\n  templateUrl: './art-side-navigation.component.html',\r\n  styleUrls: ['./art-side-navigation.component.scss']\r\n})\r\nexport class ArtSideNavigationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * @description the input for the menu\r\n   * @type ArtSideMenuInterface\r\n   */\r\n  @Input('sideMenu') sideMenu?: ArtSideMenuInterface;\r\n\r\n  @Output() menuItemSelected: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * @description this function is trigger when user click on the menu link.\r\n   * @param id Active menu item id.\r\n   * @return void\r\n   */\r\n  menuItemClicked(id: number):void {\r\n    this.menuItemSelected.emit(id);\r\n    let section = document.getElementById('form-section-' + id);\r\n    if (section instanceof HTMLElement) {\r\n      section.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n    }\r\n  }\r\n\r\n}\r\n","<nav aria-label=\"Side navigation\" class=\"art-side-navigation\">\r\n    <ul class=\"usa-sidenav\">\r\n        <li class=\"usa-sidenav__item\" *ngFor=\"let menuItem of sideMenu?.sideNavItems\">\r\n            <a href=\"javascript:void(0);\" class=\"side-nav-link {{ menuItem?.id == sideMenu?.activeId ? 'usa-current' : '' }}\"\r\n               (click)=\"menuItemClicked(menuItem.id)\">{{ menuItem.name }}</a>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n","import { ThisReceiver } from '@angular/compiler';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormControl, ValidationErrors } from '@angular/forms';\r\nimport { FormElement, ElementType } from '../../models/form-element.interface';\r\n\r\n@Component({\r\n  selector: 'art-text-field',\r\n  templateUrl: './art-text-field.component.html',\r\n  styleUrls: ['./art-text-field.component.scss']\r\n})\r\nexport class ArtTextFieldComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * @type FromElement\r\n   * @description the parent component will send that input to configure this text input field component\r\n   */\r\n  @Input() formData:FormElement | undefined;\r\n  @Input() control:AbstractControl<any, any> | undefined;\r\n  @Input() hidden: boolean = false;\r\n  \r\n  fromControl:FormControl = new FormControl();\r\n\r\n  ngOnInit(): void {\r\n    this.fromControl = <FormControl>this.control;\r\n    this.control?.statusChanges.subscribe(()=>{\r\n    });\r\n  }\r\n\r\n  /** \r\n   * @description used to check if this formcontrol has any error based on the validations from its configuration, wit the max char length to be 25\r\n   * @return string\r\n  */\r\n  displayError():string{\r\n    let errorMessage = \"\";\r\n    const error:ValidationErrors | undefined | null = this.control?.errors;\r\n    if(this.control?.getError(ErrorText.maxlength)){\r\n      errorMessage= this.formData?.errorMessages[ErrorText.maxlength];\r\n    };\r\n\r\n    return errorMessage || \"\";\r\n  }\r\n\r\n}\r\n\r\nexport enum ErrorText {\r\n  maxlength = \"maxlength\"\r\n}\r\n","\r\n<div class=\"usa-form-group\" [ngClass]=\"{'usa-form-group--error':displayError()}\"  [hidden]=\"hidden\">\r\n  <div  class=\"margin-bottom-0\"><b>{{formData?.title}}</b></div>\r\n\r\n  <label class=\"usa-label \" for=\"input\"\r\n    >{{formData?.label}}</label\r\n  >\r\n  <span class=\"usa-checkbox__label-description usa-hint\" id=\"file-input-specific-hint\" *ngIf=\"formData?.description\" >{{formData?.description}}</span>\r\n\r\n  <span *ngIf=\"displayError()\" class=\"usa-error-message\" role=\"alert\" for=\"input-error\">{{displayError()}}</span>\r\n\r\n  <input\r\n    class=\"usa-input\" [ngClass]=\"{'usa-input--error':displayError()}\"\r\n    autocomplete=\"off\"\r\n    id=\"input\"\r\n    attr.aria-label=\"{{formData?.placeholder}}\"\r\n    [placeholder]=\"formData?.placeholder\"\r\n    name=\"input\"\r\n    [formControl]=\"fromControl\"\r\n  />\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'back-to-top',\r\n  templateUrl: './back-to-top.component.html',\r\n  styleUrls: ['./back-to-top.component.scss']\r\n})\r\nexport class BackToTopComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let topButton = document.getElementById('backtotop');\r\n    if (topButton instanceof HTMLElement) {\r\n      window.onscroll = function () {\r\n        scrollFunction(topButton)\r\n      };\r\n      topButton.onclick = function () {\r\n        document.documentElement.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction scrollFunction(topButton: HTMLElement | null) {\r\n  if (topButton instanceof HTMLElement) {\r\n    if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\r\n      topButton.style.display = 'block';\r\n    } else {\r\n      topButton.style.display = 'none';\r\n    }\r\n  }\r\n}","<button id=\"backtotop\" title=\"Go to top\" style=\"display: none;\">˄ Top</button>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'art-banner',\r\n  templateUrl: './banner.component.html',\r\n  styleUrls: ['./banner.component.scss']\r\n})\r\nexport class BannerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * @description Title for the banner\r\n   * @type string\r\n   */\r\n  @Input() title:string = \"\";\r\n\r\n  /**\r\n   * @description Header for the banner\r\n   * @type string\r\n   */\r\n  @Input() header:string = \"\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section aria-label=\"Page Banner\" class=\"usa-graphic-list usa-section art-landing-page-banner\">\r\n    <div class=\"grid-container\">\r\n        <div class=\"grid-row grid-gap\">\r\n            <div class=\"tablet: grid-col\">\r\n                <span *ngIf=\"header\" id=\"art-banner-header\" class=\"art-banner-title-color font-sans-lg margin-bottom-0\">\r\n                    {{header}}\r\n                </span>\r\n                <br />\r\n                <h1 *ngIf=\"title\" id=\"art-banner-title\" class=\"text-white font-sans-xl margin-top-0 margin-bottom-0\">\r\n                    {{title}}\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n </section>\r\n","import { Component,EventEmitter,Input,OnInit, Output } from \"@angular/core\";\r\nimport { FileUploadService } from \"src/app/shared/services/file-upload.service\";\r\nimport { IFileData } from \"../../models/file-data.interface\";\r\nimport { ICTInterface } from \"../../models/ict.interface\";\r\n@Component({\r\n    selector: 'art-file-upload',\r\n    templateUrl: './file-upload.component.html',\r\n    styleUrls: ['./file-upload.component.scss']\r\n})\r\n\r\nexport class FileUploadComponent implements OnInit{\r\n    selectErrors:string[] = [];\r\n    //Store selected files\r\n    files: File[] = [];\r\n    //Output for parent component.\r\n    result: IFileData = {errors:[], jsonData:[]};\r\n    //Flag to enable/disable the Upload button.\r\n    isReadyToUpload:boolean = false;\r\n    //Flag for file input. True if no file selected.\r\n    fileInputRequired:boolean = true;\r\n   \r\n    //Max size allowed for a file (in Bytes)\r\n    maxFileSize: number = 10485760\r\n    /**\r\n     * @description Used to display successful message when the files has been upload successfully \r\n     * @type string\r\n     */\r\n    successMessage:string = '';\r\n    \r\n    //Inject Services\r\n    constructor(private fileUploadService: FileUploadService){}\r\n    @Output() getFileData = new EventEmitter<ICTInterface[]>();\r\n\r\n    /**\r\n     * @description the maximum number of files to be uploaded. This will change by the parent\r\n     */\r\n    @Input() maxFilesNbr:number = 8;\r\n\r\n    /**\r\n     * @description the maximum number of files to be uploaded Initially\r\n     */\r\n     @Input() maxFile:number = 8;\r\n\r\n    /**\r\n     * @description the maximum number the name character\r\n     */\r\n     @Input() maxLength:number = 25;\r\n\r\n    ngOnInit(): void {\r\n        this.fileUploadService.setMaxLength(this.maxLength);\r\n    }\r\n    /**\r\n     * @param event \r\n     * @returns void\r\n     * @description invokes when user selects the files. Validates numbers of file selected, size and type of a file. Validation errors are stored in SelectErrors array. \r\n     * @type {(event: Event) => void}\r\n     **/\r\n    onChange(event: any): void {\r\n        this.successMessage = \"\";\r\n        //Initializing the variables\r\n        this.result={errors:[], jsonData:[]};\r\n        this.isReadyToUpload = false;\r\n        this.fileInputRequired = false;\r\n        this.selectErrors = [];\r\n        //checking if no file is selected\r\n        if(event.target.files.length==0){\r\n            this.fileInputRequired = true\r\n            return;\r\n        }\r\n        //checking if files are selected are more than the maximum sent by the parents\r\n        if(event.target.files.length > this.maxFilesNbr){\r\n            this.selectErrors.push('Maximum Upload is ' +this.maxFile + '.');\r\n        }\r\n        //validating type and size of selected files.\r\n        for(var file of event.target.files){\r\n            if (file.size > this.maxFileSize){\r\n                this.selectErrors.push('File size is limited to 10MB max. ' + file.name + ': ' + this.fileUploadService.truncate(file.size/1048576,2)  + 'MB');\r\n            }\r\n            if(file.type != 'application/json'){\r\n                this.selectErrors.push('Please upload a valid JSON file. ' + file.name);\r\n            }\r\n        }\r\n        if(this.selectErrors.length>0){\r\n            return;\r\n        }\r\n        this.files = event.target.files;\r\n        this.isReadyToUpload = true;\r\n    }\r\n    \r\n    /**\r\n     * @returns void\r\n     * @description collects the json data from all files and emits a single array to the calling component \r\n     * @type {() => void}\r\n     **/\r\n    onUpload(){\r\n        this.fileUploadService.upload(this.files)\r\n        .then((fileData)=>{       \r\n            this.result = fileData;\r\n            this.getFileData.emit(this.result.jsonData);\r\n            this.isReadyToUpload = false;\r\n            if(this.result.errors && this.result.errors.length <= 0) this.successMessage = \"File uploaded\"\r\n        })\r\n    }\r\n\r\n}","<!-- div for file upload -->\r\n<section aria-label=\"File upload\" class=\"usa-graphic-list\">\r\n    <div class=\"usa-form-group margin-bottom-1\">\r\n        <label class=\"usa-label\" for=\"file-input-specific\">Input accepts only specific file types</label>\r\n        <span class=\"usa-hint\" id=\"file-input-specific-hint\" *ngIf=\"fileInputRequired\" >Select JSON files</span>\r\n        <!-- file input button -->\r\n        <div class=\"usa-file-input margin-top-1\">\r\n            <!-- error message from file-upload component, these error may be seen after selecting the files -->\r\n            <div class=\"input-error-alert error\" *ngIf=\"selectErrors.length>0\">\r\n                <div class=\"margin-x-2\" *ngFor=\"let error of selectErrors\">\r\n                    {{error}}\r\n                </div>\r\n            </div>\r\n            <!-- error message from file-upload service -->\r\n            <div *ngIf=\"result.errors.length>0\" class=\"error\">\r\n                <div *ngFor=\"let error of result.errors; let i = index\">\r\n                    {{error}}\r\n                </div>\r\n            </div>\r\n            <!-- SUccess message-->\r\n            <div *ngIf=\"successMessage\" class=\"success\">\r\n                {{successMessage}}\r\n            </div>\r\n            <div class=\"art-file-input__target\" >\r\n                <div *ngIf=\"isReadyToUpload\" class=\"margin-bottom-3\" >\r\n                    <div class=\"usa-file-input__preview-heading\">\r\n                        {{files.length}} file{{files.length==1? '':'s'}} selected \r\n                        <span class=\"usa-file-input__choose\">Change files</span>\r\n                    </div>\r\n                    <!-- Looping through each file selected-->\r\n                    <div *ngFor=\"let eachFile of files\" class=\"usa-file-input__preview\" aria-hidden=\"true\">\r\n                        {{eachFile.name}}\r\n                    <div></div></div>\r\n                </div>\r\n                <div class=\"usa-file-input__instructions\" *ngIf=\"!isReadyToUpload\">\r\n                    <span class=\"usa-file-input__drag-text\">Drag file here or </span>\r\n                    <span class=\"usa-file-input__choose\">choose from folder</span>\r\n                </div>\r\n                <div class=\"usa-file-input__box\"></div>\r\n                <input \r\n                    #fileUpload\r\n                    id=\"file-input-specific\" \r\n                    class=\"usa-file-input__input\" \r\n                    type=\"file\" \r\n                    name=\"file-input-specific\" \r\n                    (change)=\"onChange($event)\" \r\n                    accept=\".json\" \r\n                    multiple=\"multiple\" \r\n                    aria-live=\"polite\" \r\n                    aria-label=\"No files selected\" \r\n                    data-default-aria-label=\"No files selected\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- the upload button -->\r\n    <button \r\n        class=\"usa-button usa-button--outline\" \r\n        *ngIf=\"isReadyToUpload\" \r\n        (click)=\"onUpload(); fileUpload.value ='';\" >\r\n        Upload\r\n    </button>\r\n</section>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'art-section508-banner',\r\n  templateUrl: './section508-banner.component.html',\r\n  styleUrls: ['./section508-banner.component.scss']\r\n})\r\nexport class Section508BannerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input() url = \"\";\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"usa-banner\">\r\n    <div class=\"usa-accordion\">\r\n      <div class=\"usa-banner__header\">\r\n        <div class=\"usa-banner__inner\">\r\n          <div class=\"grid-col-auto\" aria-label=\"U.S. Flag\">\r\n              <img\r\n                  aria-hidden=\"true\"\r\n                  alt=\"U.S. Flag\"\r\n                  class=\"usa-banner__header-flag\"\r\n                  src=\"{{url}}/assets/uswds/img/us_flag_small.png\"\r\n              >\r\n          </div>\r\n          <div class=\"grid-col-fill tablet:grid-col-auto\">\r\n            <p class=\"usa-banner__header-text\">An official website of the United States government</p>\r\n            <p class=\"usa-banner__header-action\" aria-hidden=\"true\">Here’s how you know</p>\r\n          </div>\r\n          <button class=\"usa-accordion__button usa-banner__button\" aria-expanded=\"false\" aria-controls=\"gov-banner\">\r\n            <span class=\"usa-banner__button-text\">Here's how you know</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"usa-banner__content usa-accordion__content\" id=\"gov-banner\" hidden=\"\">\r\n        <div class=\"grid-row grid-gap-lg\">\r\n          <div class=\"usa-banner__guidance tablet:grid-col-6\">\r\n            <img class=\"usa-banner__icon usa-media-block__img\" alt=\"Dot gov\" src=\"{{url}}/assets/uswds/img/icon-dot-gov.svg\">\r\n            <div class=\"usa-media-block__body\">\r\n              <p>\r\n                <strong>The .gov means it’s official.</strong>\r\n                <br>\r\n                Federal government websites often end in .gov or .mil. Before sharing sensitive information, make sure\r\n                you’re on a federal government site.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"usa-banner__guidance tablet:grid-col-6\">\r\n            <img \r\n              class=\"usa-banner__icon usa-media-block__img\" \r\n              alt=\"Https\" \r\n              src=\"{{url}}/assets/uswds/img/icon-https.svg\"\r\n            >\r\n            <div class=\"usa-media-block__body\">\r\n              <p>\r\n                <strong>The site is secure.</strong>\r\n                <br>\r\n                The <strong>https://</strong> ensures that you are connecting to the official website and that any\r\n                information you provide is encrypted and transmitted securely.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'art-section508-footer',\r\n  templateUrl: './section508-footer.component.html',\r\n  styleUrls: ['./section508-footer.component.scss']\r\n})\r\nexport class Section508FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  @Input() url=\"\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"usa-footer usa-footer--big\">\r\n    <div class=\"usa-footer__primary-section\">\r\n        <div class=\"grid-container\">\r\n            <div class=\"grid-row grid-gap padding-bottom-4\">\r\n                <div class=\"desktop:grid-col-4\">\r\n                    <p class=\"text-bold\">Government-wide Initiatives</p>\r\n                    <ul class=\"add-list-reset line-height-sans-6\">\r\n                        <li> <a href=\"https://www.gsa.gov/technology/government-it-initiatives/digital-strategy\" target=\"_blank\">Digital Strategy</a></li>\r\n                        <li> <a href=\"https://www.plainlanguage.gov/\" target=\"_blank\">Plain Language </a></li>\r\n                        <li> <a href=\"https://designsystem.digital.gov/\" target=\"_blank\"> US Web Design System </a></li>\r\n                        <li> <a href=\"https://www.cio.gov/about/members-and-leadership/accessibility-cop/\" target=\"_blank\"> CIO Council Accessibility Community of Practice (ACOP)</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"desktop:grid-col-2\">\r\n                    <p class=\"text-bold\">Organization</p>\r\n                    <ul class=\"add-list-reset line-height-sans-6\">\r\n                        <li> <a href=\"https://www.section508.gov/about-us/\" aria-label=\"About Us in Organization\"> About Us</a></li>\r\n                        <li> <a aria-label=\"Contact Us details\" href=\"https://www.section508.gov/contact-us/\"> Contact Us</a></li>\r\n                        <li><a href=\"https://www.section508.gov/contributors/\" aria-label=\"Section508.gov site Contributors\"> Contributors</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"desktop:grid-col-3\">\r\n                    <p class=\"text-bold\">Tools</p>\r\n                    <ul class=\"add-list-reset line-height-sans-6\">\r\n                        <li> <a href=\"https://www.section508.gov/art\" aria-label=\"Accessibility Requirements Tool\"> ART</a></li>\r\n                        <li> <a href=\"https://www.section508.gov/buy/solicitation-review-tool\" aria-label=\"Solicitation Review Tool\"> SRT</a></li>\r\n                        <li> <a href=\"https://www.section508.gov/content/guide-accessible-web-design-development\"> Developer Guide</a></li>\r\n                        <li> <a href=\"https://digitaldashboard.gov/\" target=\"_blank\"> DigitalDashboard.gov</a></li>\r\n                        <li> <a href=\"https://analytics.usa.gov/\" target=\"_blank\"> Analytics.usa.gov</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"desktop:grid-col-3\">\r\n                    <p class=\"text-bold\">Resources</p>\r\n                    <ul class=\"add-list-reset line-height-sans-6\">\r\n                        <li> <a href=\"https://www.section508.gov/content/glossary\"> Glossary</a></li>\r\n                        <li> <a href=\"https://www.section508.gov/website-policies\"> Website Policies</a></li>\r\n                        <li> <a href=\"https://www.section508.gov/tools/coordinator-listing\"> Find Your Section 508 Program Manager</a></li>\r\n                        <li><a href=\"https://www.section508.gov/manage/join-the-508-community/\">Join the Community(Listserv)</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <div class=\"usa-footer__secondary-section\">\r\n        <div class=\"grid-container\">\r\n            <div class=\"grid-row grid-gap\">\r\n                <div class=\"usa-footer__logo grid-row tablet:grid-col-12\">\r\n                    <div class=\"tablet:grid-col-3 desktop:grid-col-4 margin-y-1\">\r\n                        <a href=\"https://www.gsa.gov/\" aria-label=\"General Services Administration\" target=\"_blank\">\r\n                        <img alt=\"General Service Administration\" class=\"usa-footer__logo-img margin-right-1\" width=\"42\" valign=\"middle\" integrity=\"sha512-5ciC+l/ipR9VSnpK/i6PqrSHd0/pMTEBs6nArXajxdJ2S+59+E/itSW10iB2emnqYwwo1lYSTAXMiRp7TMGStg==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/images/gsa-logo.png\">General Services Administration </a>\r\n                    </div>\r\n                    <div class=\"tablet:grid-col-3 margin-y-1\">\r\n                        <a href=\"https://www.access-board.gov/\" target=\"_blank\" aria-label=\"US Access Board\">\r\n                        <img alt=\"US Access Board\" class=\"usa-footer__logo-img margin-right-1\" width=\"42\" valign=\"middle\" integrity=\"sha512-YCOEKxFp6bB4M71udl46ogBIO6Ai2DBjoRHDIeMnqCWjsBaq2tNQsyp+29cthfOYwCTNnxxS2jpxzWEUNZqV6g==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/images/seal-usab.png\">US Access Board </a>\r\n                    </div>\r\n                    <div class=\"tablet:grid-col-3 margin-y-1\">\r\n                        <a href=\"https://www.section508.gov/manage/join-the-508-community/\" target=\"_blank\" aria-label=\"Joining listserv\">\r\n                        Join the Community(Listserv)</a>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n</footer>\r\n<div class=\"usa-identifier\">\r\n    <section class=\"usa-identifier__section usa-identifier__section--masthead\" aria-label=\"Agency identifier,\">\r\n      <div class=\"usa-identifier__container\">\r\n        <div class=\"usa-identifier__logos\">\r\n          <a href=\"https://gsa.gov\" class=\"usa-identifier__logo\">\r\n              <img class=\"usa-identifier__logo-img\" alt=\"General Services Administration Logo\" integrity=\"sha512-5ciC+l/ipR9VSnpK/i6PqrSHd0/pMTEBs6nArXajxdJ2S+59+E/itSW10iB2emnqYwwo1lYSTAXMiRp7TMGStg==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/images/gsa-logo-md.png\">\r\n          </a>\r\n        </div>\r\n        <div class=\"usa-identifier__identity\" aria-label=\"Agency description\">\r\n          <p class=\"usa-identifier__identity-domain\">Section508.gov</p>\r\n          <p class=\"usa-identifier__identity-disclaimer\">\r\n            An official website of the <a href=\"https://www.gsa.gov/\">General Services Administration</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <nav class=\"usa-identifier__section usa-identifier__section--required-links\" aria-label=\"Important links,,\">\r\n      <div class=\"usa-identifier__container\">\r\n        <ul class=\"usa-identifier__required-links-list\">\r\n          <li class=\"usa-identifier__required-links-item\">\r\n            <a href=\"https://www.gsa.gov/about-us\" class=\"usa-identifier__required-link usa-link\">About GSA</a>\r\n          </li>\r\n          <li class=\"usa-identifier__required-links-item\">\r\n            <a href=\"https://www.gsa.gov/website-information/accessibility-aids\" class=\"usa-identifier__required-link usa-link\">Accessibility support</a>\r\n          </li>\r\n          <li class=\"usa-identifier__required-links-item\">\r\n            <a href=\"https://www.gsa.gov/reference/freedom-of-information-act-foia\" class=\"usa-identifier__required-link usa-link\">FOIA requests</a>\r\n          </li>\r\n          <li class=\"usa-identifier__required-links-item\">\r\n            <a href=\"https://www.gsa.gov/reference/civil-rights-programs/notification-and-federal-employee-antidiscrimination-and-retaliation-act-of-2002\" class=\"usa-identifier__required-link usa-link\">No FEAR Act data</a>\r\n          </li>\r\n          <li class=\"usa-identifier__required-links-item\">\r\n            <a href=\"https://www.gsaig.gov/\" class=\"usa-identifier__required-link usa-link\">Office of the Inspector General</a>\r\n          </li>\r\n          <li class=\"usa-identifier__required-links-item\">\r\n            <a href=\"https://www.gsa.gov/reference/reports/budget-performance\" class=\"usa-identifier__required-link usa-link\">Performance reports</a>\r\n          </li>\r\n          <li class=\"usa-identifier__required-links-item\">\r\n            <a href=\"https://www.gsa.gov/website-information/website-policies\" class=\"usa-identifier__required-link usa-link\">Privacy policy</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    <section class=\"usa-identifier__section usa-identifier__section--usagov\" aria-label=\"U.S. government information and services,,\">\r\n      <div class=\"usa-identifier__container\">\r\n        <div class=\"usa-identifier__usagov-description\">\r\n          Looking for U.S. government information and services?\r\n        </div>\r\n        <a href=\"https://www.usa.gov/\" class=\"usa-link\">Visit USA.gov</a>\r\n      </div>\r\n    </section>\r\n  </div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'art-section508-header',\r\n  templateUrl: './section508-header.component.html',\r\n  styleUrls: ['./section508-header.component.scss']\r\n})\r\nexport class Section508HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  @Input() url = \"\";\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header class=\"usa-header usa-header--extended\" role=\"banner\">\r\n    <div class=\"usa-navbar\">\r\n      <div class=\"usa-logo\" id=\"extended-logo\">\r\n    <span><a href=\"https://www.section508.gov/\">\r\n      <img class=\"logo\" alt=\"Section508.gov Home; GSA logo with text: Section508.gov Buy. Build. Be Accessible.\" integrity=\"sha512-S2YGUVu8KqAmjqtxiMVq5MXieFg+L8T4y7Uv3eHZE3ePWZbUSJnehCZbsNEDiG/ZcFGxms61gqe9YViO6H/KZQ==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/images/508-logo-cropped-web-altgreen.png\">\r\n    </a></span>\r\n  </div>\r\n  \r\n      <button class=\"usa-menu-btn\">Menu</button>\r\n    </div>\r\n    <nav role=\"navigation\" class=\"usa-nav\" aria-label=\"Primary Site Navigation\">\r\n      <div class=\"usa-nav__inner\">\r\n        <button class=\"usa-nav__close\"><img alt=\"close\" integrity=\"sha512-XLawNnedFKdaFdJhoad/TAQHLO1XHwSyvZVlVpXieNmk80S974//1mU5khr0OXVTGH4H3k6mTs9tVP/J6fPoFw==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/uswds/img/usa-icons/close.svg\"></button>\r\n        <ul class=\"usa-nav__primary usa-accordion\">\r\n          \r\n          \r\n          \r\n          \r\n          <li class=\"usa-nav__primary-item\">\r\n            <a aria-label=\"Policy &amp; Management primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/manage/\"><span>Policy &amp; Management</span></a>\r\n          </li>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <li class=\"usa-nav__primary-item\">\r\n            <a aria-label=\"Acquisition primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/buy-sell/\"><span>Acquisition</span></a>\r\n          </li>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <li class=\"usa-nav__primary-item\">\r\n            <a aria-label=\"Content Creation primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/create/\"><span>Content Creation</span></a>\r\n          </li>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <li class=\"usa-nav__primary-item\">\r\n            <a aria-label=\"Design &amp; Develop primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/develop/\"><span>Design &amp; Develop</span></a>\r\n          </li>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <li class=\"usa-nav__primary-item\">\r\n            <a aria-label=\"Testing primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/test/\"><span>Testing</span></a>\r\n          </li>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <li class=\"usa-nav__primary-item\">\r\n            <a aria-label=\"Training, Tools &amp; Events primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/training/\"><span>Training, Tools &amp; Events</span></a>\r\n          </li>\r\n          \r\n          \r\n        </ul>\r\n        <div class=\"usa-nav__secondary\">\r\n          <ul class=\"usa-nav__secondary-links\">\r\n            \r\n            <li class=\"usa-nav__secondary-item\">\r\n              <a href=\"https://www.section508.gov/blog/\">Blogs &amp; Updates</a>\r\n            </li>\r\n            \r\n            <li class=\"usa-nav__secondary-item\">\r\n              <a href=\"https://www.section508.gov/tools/coordinator-listing/\">My Agency’s 508 PM</a>\r\n            </li>\r\n            \r\n            <li class=\"usa-nav__secondary-item\">\r\n              <a href=\"https://www.section508.gov/about-us/\">About Us</a>\r\n            </li>\r\n            \r\n          </ul>\r\n          \r\n  \r\n  \r\n    \r\n      <form id=\"search_form\" class=\"usa-search usa-search--small\" action=\"https://search.usa.gov/search\" accept-charset=\"UTF-8\" method=\"get\">\r\n    \r\n      \r\n    \r\n      <input name=\"utf8\" type=\"hidden\" value=\"✓\">\r\n      <input name=\"affiliate\" type=\"hidden\" value=\"gsa-section508-accessibility\">\r\n    \r\n      <div role=\"search\">\r\n        <label class=\"usa-sr-only\" for=\"extended-search-field-small\">Search small</label>\r\n        <input class=\"usa-input usagov-search-autocomplete\" id=\"extended-search-field-small\" type=\"search\" name=\"query\" autocomplete=\"off\">\r\n        <button class=\"usa-button primary-background-color\" type=\"submit\"><img src=\"{{url}}/assets/icons/search-white.svg\" class=\"usa-search__submit-icon\" alt=\"Search\"></button>\r\n      </div>\r\n    </form>\r\n  \r\n  \r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>","import {Component, Input, OnInit, Output, EventEmitter, SimpleChanges} from \"@angular/core\";\r\nimport { IStepIndicator } from \"../../models/step-indicator.interface\";\r\n@Component({\r\n    selector: 'atr-step-indicator',\r\n    templateUrl: './step-indicator.component.html',\r\n    styleUrls: ['./step-indicator.component.scss']\r\n})\r\n\r\nexport class StepIndicatorComponent implements OnInit{\r\n    //variable to store index of active tab\r\n    @Input() currentIndex: number = 0\r\n    //variable to store id of active tab\r\n    @Input() activeTab=\"\";\r\n    //output to calling component\r\n    @Output() getSelectedTab = new EventEmitter<number>();\r\n    //input from calling component\r\n    @Input() stepsData: IStepIndicator = {tabs:[], activeId:''};\r\n    @Input() update: boolean = false;\r\n    constructor(){}\r\n    ngOnInit(): void {\r\n        this.resetStep();\r\n    }\r\n\r\n    /**\r\n     * @description sets the style of the tab and emits the index of the selected tab to getSelectedTab\r\n     * @param tabIndex index of the selected tab\r\n     * @param tabId id of the selected tab\r\n     * @returns void\r\n     * @type {(tabIndex:number, tabId:string) => void}\r\n     */\r\n    tabSelected(tabIndex:number, tabId:string): void{\r\n        this.currentIndex = tabIndex;\r\n        this.activeTab = tabId;\r\n        this.getSelectedTab.emit(tabIndex);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.resetStep();\r\n    }\r\n\r\n    /**\r\n     * @description Set current step.\r\n     */\r\n    resetStep(): void {\r\n        this.activeTab = this.stepsData.activeId;\r\n        let index=0;\r\n        for(let tab of this.stepsData.tabs){\r\n            if(tab.id==this.stepsData.activeId){\r\n                this.currentIndex=index;\r\n            }\r\n            index++;\r\n        }\r\n    }\r\n\r\n}\r\n","<!-- progress bar -->\r\n<div class=\"usa-step-indicator usa-step-indicator--counters-sm\" aria-label=\"progress\">\r\n  <ol class=\"usa-step-indicator__segments\">\r\n    <li *ngFor=\"let tab of stepsData.tabs;let stepIndex=index\" id=\"{{tab.id}}\" class=\"usa-step-indicator__segment\" \r\n      [ngClass]=\"{'usa-step-indicator__segment--current': activeTab==tab.id, 'usa-step-indicator__segment--complete': currentIndex>stepIndex}\"  \r\n      (click)=\"tabSelected(stepIndex, tab.id)\">\r\n      <span class=\"usa-step-indicator__segment-label\">\r\n        <button class=\"step-indicator-button\" [ngClass]=\"{'step-indicator-selected': activeTab==tab.id}\">{{tab.name}}</button> \r\n        <span *ngIf=\"currentIndex>stepIndex\"  class=\"usa-sr-only\">completed</span>\r\n        <span *ngIf=\"currentIndex<stepIndex\"  class=\"usa-sr-only\">not completed</span>\r\n      </span>\r\n    </li>\r\n  </ol>\r\n</div>\r\n  ","import { ValidationErrors, Validator } from \"@angular/forms\";\r\n\r\nexport interface FormElement {\r\n    /**\r\n     * @type string\r\n     * @description: the type of the current form element: text, checkbox, radioButton, checkboxGroup, radioButtonGroup\r\n     */\r\n    elementType:string;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: The label of the form element\r\n     */\r\n    label: string;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: the title of the form element\r\n     */\r\n    title?: string;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: place holder for the element\r\n     */\r\n     placeholder?: string;\r\n\r\n    /**\r\n     * @type string\r\n     * @description:  the description of the form element\r\n     */\r\n    description?: string;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: the error massages of the form elements\r\n     */\r\n    errorMessages?: any;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: Array of form elements. Will be used for the checkboxes as different options and option for the radioButtons\r\n     */\r\n    options?:FormElement[];\r\n\r\n    /**\r\n     * @type string\r\n     * @description: The name of the control for this element, it should be unique\r\n     */\r\n    controlName: string;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: The different validations for this elements\r\n     */\r\n    validations: ValidationErrors;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: the name of the control Element for another element. The Form component will display that element whenever the value of this element is not null\r\n     */\r\n    next:string;\r\n\r\n    /**\r\n     * @type string[]\r\n     * @description: For other control to be displayed along with next. Only one for now\r\n     */\r\n     additionalNext?:string[];\r\n\r\n    /**\r\n     * @type string\r\n     * @description: The Section where this element should be. Will be used by the parent component, the From component\r\n     */\r\n    formSection: string;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: Will use to display the menu item label when the menu Item is used\r\n     */\r\n     menuItem?: string;\r\n\r\n    /**\r\n     * @type string\r\n     * @description: Any predefined value\r\n     */\r\n    value?: any;\r\n\r\n    /**\r\n     * @type boolean\r\n     * @description: Set if this option can be only one of current group.\r\n     */\r\n    onlyOption?: boolean;\r\n\r\n    /**\r\n     * @description used to hide or display a formcontrol\r\n     * @type boolean\r\n     */\r\n     hidden?:boolean;\r\n\r\n    /**\r\n     * @description Used to display additional text, in the checkboxgroup or radiogroup component \r\n     * @type string\r\n     */\r\n    info?:string;\r\n}\r\n\r\nexport enum  ElementType{\r\n    text = \"text\",\r\n    checkbox = \"checkbox\",\r\n    checkboxGroup = \"checkboxGroup\",\r\n    radioButton = \"radioButton\",\r\n    radioButtonGroup = \"radioButtonGroup\",\r\n    textDisplay = \"textDisplay\"\r\n}","import {Injectable} from '@angular/core';\r\nimport optionLangMap from '../../../../assets/data/option-language-mapping.json';\r\nimport languages from '../../../../assets/data/508languages.json';\r\nimport compHardwareKeys from '../../../../assets/data/comp-hardware-keys.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Art508LangService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * @description get 508 languages by form submission.\r\n   * @param data\r\n   */\r\n  get508Languages(data: any): string {\r\n    let optionKeys = this.getOptionKeys(data, []);\r\n\r\n    // Computer hardware\r\n    compHardwareKeys.forEach(key => {\r\n      for (let k in optionKeys) {\r\n        if(optionKeys[k].includes(key) && !optionKeys.includes(\"hardware-computer\")) {\r\n          // @ts-ignore\r\n          optionKeys.push(\"hardware-computer\");\r\n        }\r\n      }\r\n    });\r\n    let mapping = this.getMapping(optionKeys);\r\n    return this.getResultString(mapping);\r\n  }\r\n\r\n  /**\r\n   * Get filtered form options array\r\n   *\r\n   * @param data\r\n   * @param optionKeys\r\n   */\r\n  getOptionKeys(data: any, optionKeys: []): any[] {\r\n    for (let key in data) {\r\n      let value = data[key];\r\n      if (typeof value !== 'object') {\r\n        if (typeof value === 'string') {\r\n          // @ts-ignore\r\n          optionKeys.push(value.trim());\r\n        } else if (typeof value === 'boolean' && value) {\r\n          // @ts-ignore\r\n          optionKeys.push(key.trim());\r\n        }\r\n      } else {\r\n        this.getOptionKeys(value, optionKeys);\r\n      }\r\n    }\r\n    return optionKeys;\r\n  }\r\n\r\n  /**\r\n   * Option key to language key mapping.\r\n   *\r\n   * @param optionKeys\r\n   */\r\n  getMapping(optionKeys: any[]): any[] {\r\n    let mapping: any[] = [];\r\n    for (let key in optionLangMap) {\r\n      for (let k in optionKeys) {\r\n        if(optionKeys[k].includes(key)) {\r\n          // @ts-ignore\r\n          mapping = mapping.concat(optionLangMap[key]);\r\n        }\r\n      }\r\n    }\r\n    mapping = [...new Set(mapping)];\r\n    mapping.sort();\r\n    return mapping;\r\n  }\r\n\r\n  /**\r\n   * Get string language HTML by keys.\r\n   *\r\n   * @param mapping\r\n   */\r\n  getResultString(mapping: any[]): string {\r\n    let result = \"\";\r\n    mapping.forEach(langKey => {\r\n      if (langKey in languages) {\r\n        // @ts-ignore\r\n        result += languages[langKey];\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport  Banner  from '../../../../assets/data/banner.json';\r\nimport  Header  from '../../../../assets/data/header.json';\r\nimport  Footer  from '../../../../assets/data/footer.json';\r\nimport  UpdateDate  from '../../../../assets/data/update-date.json';\r\nimport { IButtonInterface } from '../../models/IButtonInterface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtContentDataService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * @description Getting the banner data from the json file\r\n   * @returns title:string, header:string\r\n   */\r\n  getBannerData(): {title:string, header:string}{\r\n    return Banner;\r\n  }\r\n\r\n  /**\r\n   * @description Getting the header data from the json file\r\n   * @returns string\r\n   */\r\n   getHeader(): string{\r\n    return Header['data'];\r\n  }\r\n\r\n  /**\r\n   * @description Getting the footer data from the json file\r\n   * @returns title:string, data:string\r\n   */\r\n   getFooter(): {title:string, data:string}{\r\n    return Footer;\r\n  }\r\n\r\n  /**\r\n   * @description Getting the updated date data from the json file\r\n   * @returns string\r\n   */\r\n   getUpdatedDate(): string{\r\n      return UpdateDate['data'];\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { FormTemplateInterface } from '../../models/form-template.interface';\r\nimport  formConfigJsons  from '../../../../assets/form-config/ict-lp.config.json';\r\nimport  Buttons  from '../../../../assets/data/buttons.json';\r\nimport  IctLp  from '../../../../assets/data/ict-lp.json';\r\nimport { IButtonInterface } from '../../models/IButtonInterface';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtIctLpService {\r\n\r\n  constructor() { }\r\n\r\n  \r\n  /**\r\n   * @description the maximum number the name character\r\n   */\r\n  private charCount:number = 25;\r\n\r\n  /**\r\n   * @description Configuration for the ICT Listing Page input field, loading config for one Form\r\n   */\r\n   private formConfig: FormTemplateInterface[] = formConfigJsons;\r\n\r\n   /**\r\n    * @description Generation validation error from the configurations: Only required and maxLength has be configure, additional validations will have ot be added\r\n    * @param strValidation\r\n    * @type string[]\r\n    * @returns ValidationErrors\r\n    */\r\n   generateValidations(strValidation:string[] | any): ValidationErrors{\r\n    if(strValidation[0]?.name) return strValidation;\r\n    const validations: ValidatorFn[] = []\r\n    strValidation.forEach((eachVal:any)=>{\r\n      if(eachVal.includes(\"required\")) validations.push(Validators.required);\r\n      if(eachVal.includes(\"maxLength\")) {\r\n        const length = eachVal.slice(eachVal.indexOf(\"(\")+1,eachVal.indexOf(\")\"));\r\n        this.charCount = +length;\r\n        validations.push(Validators.maxLength(this.charCount));\r\n      }\r\n    });\r\n\r\n    return validations;\r\n   }\r\n\r\n   /**\r\n   * @description the parent will the sent maximum of character to be allowed\r\n   * @return number\r\n   */\r\n  getMaxLength():number{\r\n    return this.charCount;\r\n  }\r\n\r\n  /**\r\n   * @description Configuration for one form\r\n   * @return: FormTemplateInterface\r\n   */\r\n  getConfigurations(): FormTemplateInterface[]{\r\n    this.formConfig.forEach((eachForm, outterIndex)=>{\r\n      eachForm.formElements.forEach((eachElt, index)=>{\r\n        eachElt.validations = this.generateValidations(formConfigJsons[outterIndex].formElements[index].validations);\r\n      });\r\n    });\r\n    return this.formConfig;\r\n  }\r\n\r\n  /**\r\n   * @description Getting the label, the description and destination text for the upload button on the ict listing page\r\n   * @returns IButtonInterface\r\n   */\r\n   getUploadBtn(): IButtonInterface{\r\n    return Buttons['uploadICT'];\r\n  }\r\n\r\n  /**\r\n  * @description Getting the label, the description and destination text for the continue button on the ict listing page\r\n  * @returns IButtonInterface\r\n  */\r\n  getContBtl(): IButtonInterface{\r\n    return Buttons['continue'];\r\n  }\r\n   /**\r\n   * @description Get the error message for the landing page, generated when the number of ICT items has reached the max\r\n   * @returns string\r\n   */\r\n    getErrorMsg(): string{\r\n      return IctLp['errorMessage'];\r\n    }\r\n\r\n  /**\r\n   * @description Get the section title for the landing page\r\n   * @returns string\r\n   */\r\n   getSectionTitle(): string{\r\n    return IctLp['sectionTitle'];\r\n  }\r\n\r\n  /**\r\n   * @description Get the error message for Input Label on the ICT page\r\n   * @returns string\r\n   */\r\n   getInputLabel(): string{\r\n    return IctLp['inputLabel'];\r\n  }\r\n\r\n     /**\r\n   * @description Return the maximum number of items that should be allowed\r\n   * @returns number\r\n   */\r\n    getMaxItems(): number{\r\n      return IctLp['maxItems'];\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { FormTemplateInterface } from '../models/form-template.interface';\r\nimport  formConfigJsons  from '../../../assets/form-config/test.config.json';\r\nimport  Buttons  from '../../../assets/data/buttons.json';\r\nimport  IctLp  from '../../../assets/data/ict-lp.json';\r\nimport { IButtonInterface } from '../models/IButtonInterface';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtTestService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * @description Configuration for the ICT Listing Page input field, loading config for one Form\r\n   */\r\n   private formConfig: FormTemplateInterface[] = formConfigJsons;\r\n\r\n   /**\r\n    * @description Generation validation error from the configurations: Only required and maxLength has be configure, additional validations will have ot be added\r\n    * @param strValidation\r\n    * @type string[]\r\n    * @returns ValidationErrors\r\n    */\r\n   generateValidations(strValidation:string[]): ValidationErrors{\r\n    const validations: ValidatorFn[] = []\r\n    strValidation.forEach((eachVal)=>{\r\n      if(eachVal.includes(\"required\")) validations.push(Validators.required);\r\n      if(eachVal.includes(\"maxLength\")) {\r\n        const length = eachVal.slice(eachVal.indexOf(\"(\")+1,eachVal.indexOf(\")\"));\r\n        validations.push(Validators.maxLength(+length));\r\n      }\r\n    });\r\n    return validations;\r\n   }\r\n\r\n  /**\r\n   * @description Configuration for one form\r\n   * @return: FormTemplateInterface\r\n   */\r\n  getConfigurations(): FormTemplateInterface[]{\r\n    this.formConfig.forEach((eachForm, outterIndex)=>{\r\n      eachForm.formElements.forEach((eachElt, index)=>{\r\n        eachElt.validations = this.generateValidations(formConfigJsons[outterIndex].formElements[index].validations);\r\n      });\r\n    });\r\n    return this.formConfig;\r\n  }\r\n\r\n  /**\r\n   * @description Getting the label, the description and destination text for the upload button on the ict listing page\r\n   * @returns IButtonInterface\r\n   */\r\n   getUploadBtn(): IButtonInterface{\r\n    return Buttons['uploadICT'];\r\n  }\r\n\r\n  /**\r\n  * @description Getting the label, the description and destination text for the continue button on the ict listing page\r\n  * @returns IButtonInterface\r\n  */\r\n  getContBtl(): IButtonInterface{\r\n    return Buttons['continue'];\r\n  }\r\n   /**\r\n   * @description Get the error message for the landing page, generated when the number of ICT items has reached the max\r\n   * @returns string\r\n   */\r\n    getErrorMsg(): string{\r\n      return IctLp['errorMessage'];\r\n    }\r\n\r\n     /**\r\n   * @description Return the maximum number of items that should be allowed\r\n   * @returns number\r\n   */\r\n    getMaxItems(): number{\r\n      return IctLp['maxItems'];\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IFileData } from '../models/file-data.interface';\r\nimport { IctItemService } from './ict-item/ict-item.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileUploadService {\r\n\r\n  constructor(private ictItemService:IctItemService) {}\r\n\r\n  /**\r\n   * @description the maximum number the name character\r\n   */\r\n  private charCount:number = 25;\r\n\r\n  /**\r\n   * @param files - list of files selected from file-input component  \r\n   * @returns Promise<IFileData> - an object combining error messages and array of valid json objects.\r\n   * @description incoming json files with valid structures will be collected in and array. Any errors will also pushed in another array\r\n   * @type {(files:File[])=> Promise<IFileData>}\r\n   **/\r\n  upload(files:File[]): Promise<IFileData> {\r\n\r\n    let promises:Promise<any>[] = []\r\n\r\n    for (var file of files){\r\n      let promise:Promise<any> = new Promise((resolve)=>{\r\n        let fileName = file.name;\r\n        const fileReader = new FileReader();\r\n      \r\n        fileReader.readAsText(file, \"UTF-8\");\r\n        fileReader.onload = (e) => {\r\n          if(fileReader.result){\r\n            var fileData;\r\n            //there may be chances that the file is not in proper json structure leading to break on parsing.\r\n            try{\r\n              fileData = JSON.parse(fileReader.result.toString());\r\n              if(fileData.name == null || fileData.langKeyWords==null){\r\n                resolve({data:'JSON structure does not match: ' + fileName, error: true});\r\n              }else if(fileData.name && fileData.name.length > this.charCount ){\r\n                resolve({data:'The maximum length has exceeded ' + this.charCount, error: true});\r\n              }\r\n              else if(this.checkItemDuplicated(fileData.timeStamp)){\r\n                resolve({data:'This ICT Item has already been uploaded, please select a different ICT Item', error: true});\r\n              }\r\n              else{\r\n                //fileData.timeStamp = Date.now().toString();\r\n                resolve({data:fileData});\r\n              }\r\n\r\n            }catch(error){\r\n              resolve({data:'JSON structure does not match:: '+fileName, error: true});\r\n            }           \r\n          }else{\r\n            resolve({data:'Empty file: ' + fileName, error: true});\r\n          }\r\n        }\r\n      })\r\n      promises.push(promise);\r\n    }\r\n    return new Promise<IFileData>((resolve)=>{\r\n      Promise.all(promises).then((values)=>{\r\n        let finalOuput: IFileData = {errors:[], jsonData:[]}\r\n        let hasError:Boolean = false;\r\n        for( var value of values){\r\n          if(value.error){\r\n            hasError = true;\r\n            finalOuput.errors.push(value.data)\r\n          }else{\r\n            finalOuput.jsonData.push(value.data)\r\n          }\r\n        }\r\n        if(hasError){\r\n          finalOuput.jsonData = [];\r\n        }\r\n        resolve(finalOuput);\r\n      })\r\n    });\r\n  } \r\n\r\n  /**\r\n   * @param num - number to truncate\r\n   * @param places - number of decimal places\r\n   * @returns number\r\n   * @description function to truncate the decimal number with the given place\r\n   * @type {(num:number, places: number) => number}\r\n   **/\r\n  truncate (num: number, places: number): number {\r\n    return Math.trunc(num * Math.pow(10, places)) / Math.pow(10, places);\r\n  }\r\n\r\n  /**\r\n   * @description the parent will the sent maximum of character to be allowed\r\n   * @param maxLength \r\n   * @type number\r\n   */\r\n  setMaxLength(charCount:number){\r\n    this.charCount = charCount;\r\n  }\r\n\r\n  /**\r\n   * @description check if a timestamp from the upload json has already been uploaded\r\n   * @params timeStamp\r\n   * @type string\r\n   * @returns boolean\r\n   */\r\n   checkItemDuplicated(timeStamp:string):boolean{\r\n   return !!this.ictItemService.get().find(eachItem => eachItem.timeStamp ===  timeStamp);\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport  formConfig  from '../../../../assets/form-config/form.config.json';\r\nimport { ElementType, FormElement } from '../../models/form-element.interface';\r\nimport { FormTemplateInterface } from '../../models/form-template.interface';\r\nimport { ICTInterface } from '../../models/ict.interface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormPageService {\r\n /**\r\n   * @description Configuration for the ICT Listing Page input field, loading config for one Form\r\n   */\r\n  private formConfig: FormTemplateInterface[] = formConfig;\r\n\r\n  /**\r\n  * @description the maximum number the name character\r\n  */\r\n  private charCount:number = 25;\r\n\r\n  /**\r\n   * @description identify the form page ot be displayed\r\n   * @type number\r\n   */\r\n  private formPage = 0;\r\n\r\n  /**\r\n   * @description get the form result generated on a form\r\n   */\r\n  private formResults:{} ={};\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * @description Configuration for thr form\r\n   * @return: FormTemplateInterface\r\n   */\r\n   getConfigurations(): FormTemplateInterface[]{\r\n    this.formConfig.forEach((eachForm, outterIndex)=>{\r\n      eachForm.formElements.forEach((eachElt, index)=>{\r\n        eachElt.validations = this.generateValidations(formConfig[outterIndex].formElements[index].validations);\r\n      });\r\n    });\r\n    return this.formConfig;\r\n  }\r\n\r\n\r\n  /**\r\n   * @description Set the date for a form\r\n   * @param datat\r\n   * @type {}\r\n   */\r\n  setFormResults(data:{}):void{\r\n    this.formResults = data;\r\n  }\r\n\r\n  /**\r\n   * @description return the data for a form\r\n   * @returns {}\r\n   */\r\n  getFormResults():{}{\r\n    return this.formResults;\r\n  }\r\n\r\n  /**\r\n  * @description Generation validation error from the configurations: Only required and maxLength has be configure, additional validations will have ot be added\r\n  * @param strValidation\r\n  * @type string[]\r\n  * @returns ValidationErrors\r\n  */\r\n  generateValidations(strValidation:string[] | any): ValidationErrors{\r\n    if(strValidation[0]?.name) return strValidation;\r\n    const validations: ValidatorFn[] = []\r\n    strValidation.forEach((eachVal:any)=>{\r\n      if(eachVal.includes(\"required\")) validations.push(Validators.required);\r\n      if(eachVal.includes(\"maxLength\")) {\r\n        const length = eachVal.slice(eachVal.indexOf(\"(\")+1,eachVal.indexOf(\")\"));\r\n        this.charCount = +length;\r\n        validations.push(Validators.maxLength(this.charCount));\r\n      }\r\n    });\r\n    return validations;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @description Used to clone and generate form configuration\r\n   * @param formConfig \r\n   * @param text \r\n   * @returns FormTemplateInterface\r\n   */\r\n   generateNewConfig(formConfig: FormTemplateInterface, text:string,eachIctItem: ICTInterface):FormTemplateInterface{\r\n    //console.log(\"ICTInterface-->\", eachIctItem.langKeyWords);\r\n    const newCongig:FormTemplateInterface = {...formConfig};\r\n\r\n    newCongig.formElements = [...newCongig.formElements];\r\n\r\n    newCongig.formElements.forEach((eachFormElement, index)=>{\r\n      eachFormElement = {...eachFormElement};\r\n      newCongig.formElements[index] =  {...eachFormElement};\r\n\r\n      if(eachFormElement.options && eachFormElement.options.length > 0){\r\n        eachFormElement.options = [...eachFormElement.options];\r\n        newCongig.formElements[index].options = [...eachFormElement.options];\r\n        eachFormElement.options.forEach((eachOption, innerIndex)=>{\r\n          // Getting all the result for the form: For file upload or return to form page\r\n          const tempLang:any= eachIctItem.langKeyWords;\r\n          eachOption = {...eachOption};\r\n          if(newCongig.formElements[index].options !== undefined) {\r\n            if(newCongig.formElements[index].options![innerIndex] !== undefined){\r\n              newCongig.formElements[index].options![innerIndex] = {...eachOption};\r\n            }\r\n          }\r\n         // Storing the options the group check box or group radio\r\n         const options =eachFormElement.options? [...eachFormElement.options]:null;\r\n         //TO BE Removed console.log(\"options-> \", options);\r\n         // If this element has options, being checkbox group or radio button\r\n         if(options && options.length > 0){\r\n          \r\n          // Getting the lang object or the option value for this element group\r\n          const optionLang:any = tempLang[newCongig.formElements[index].controlName];\r\n          // if this option has a value or if this element has a value set to true\r\n          if(optionLang && Object.keys(optionLang).length > 0)   {\r\n            // Capturing the control name an option for the checkbox group or radio button\r\n            const currentControlName = newCongig.formElements[index].options![innerIndex].controlName;\r\n            // If we have a radio button\r\n            if(newCongig.formElements[index].options![innerIndex].elementType !== \"checkbox\") {\r\n              //console.log(\"radioButton\");\r\n              //We can change the controlName of each option because it does not matter eventhough there is a value. What is store on the json file is the controlName of the radioBUtton Group. We just change the options controlName to be different from other form\r\n              newCongig.formElements[index].options![innerIndex].controlName += text;\r\n              \r\n            }else{ // if we have a checkbox\r\n              //console.log(\"Checkbox\");\r\n              //console.log(\"No change------------------------------------->\", currentControlName);\r\n              //console.log(\"optionLang------------------------------------->\", optionLang);\r\n              // We are checking if any lang key saved from the jsonfile includes the controlName of this checkbox option, we want to change the controlName of all the checkbox option, eventhough they have a value, and that name should match the lang key saved before\r\n              const langKeyControName = Object.keys(optionLang).find(eachLangKey => eachLangKey.includes(currentControlName));\r\n              //console.log(\"langKeyControName------------------------------------->\", langKeyControName);\r\n              // If incase we don't find that controlName on th elagn Key, it was not save, so we can give it a random controlName\r\n              newCongig.formElements[index].options![innerIndex].controlName = langKeyControName || newCongig.formElements[index].options![innerIndex].controlName + text;\r\n            }\r\n          }\r\n          else {\r\n            // Any option which does not have a value set will have to be givin a radon control name\r\n            newCongig.formElements[index].options![innerIndex].controlName += text;\r\n            //console.log(\"New controlName------------------------------------->\",  newCongig.formElements[index].options![innerIndex].controlName);\r\n\r\n          }\r\n         }\r\n        })\r\n      }\r\n    });\r\n    return {...newCongig};\r\n  }\r\n\r\n  /**\r\n   * @description to retrieve the form page to be displayed \r\n   * @returns number\r\n   */\r\n  navToFormPage():number{\r\n    return this.formPage;\r\n  }\r\n\r\n  /**\r\n   * @description to update the form page to be displyaed\r\n   * @param index\r\n   * @returns void \r\n   */\r\n  setFormPage(index:number):void{\r\n    this.formPage = index;\r\n  }\r\n\r\n  /**\r\n   * @description when the user return from the summary page to the form page, the data should be loaded\r\n   * @returns void\r\n   */\r\n   prepopulateData(formConfig:FormTemplateInterface[], ictItems:ICTInterface[] ):void{\r\n    //Getting the config for each from\r\n    formConfig.forEach((eachConfig, index) =>{\r\n      //Looping each element of each form\r\n      eachConfig.formElements.forEach(eachElement =>{\r\n        // the langkey or data for each form. ex. exemptions-group: {excep-idk-2: true}, hardware-group: {hardware-computer-2: false, hardware-tablet-2: false, hardware-printer-2: false, hardware-multi-func-2: false, hardware-peripheral-2: false, …}ict-group: {it-none-2: true}\r\n        const resultObj:any = ictItems[index] && ictItems[index].langKeyWords? {...ictItems[index].langKeyWords}: {};\r\n        if(resultObj){\r\n          //Getting data for each fromControl eg: {excep-idk-2: true}\r\n          const value = resultObj[eachElement.controlName];\r\n\r\n          if(eachElement.elementType === ElementType.checkboxGroup && value){\r\n            // a control can have many values for a checkbox. eg [excep-idk-2]\r\n            const keys = Object.keys(value);\r\n\r\n            // checking if any key is matching an option controlName and assign the value of the key if so\r\n            keys.forEach((eachKey, outterIndex)=>{\r\n              eachElement.options!.forEach((eachOption, innerIndex)=>{\r\n                if(eachKey.includes(eachOption.controlName))  eachOption.value = value[eachKey];\r\n              })\r\n            });\r\n          }\r\n          if(eachElement.elementType === ElementType.text && value){\r\n            eachElement.value = value;\r\n          }\r\n          if(eachElement.elementType === ElementType.radioButtonGroup && value){\r\n            const keys = Object.keys(value);\r\n            eachElement.value = value[keys[0]];\r\n          }\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ICTInterface } from '../../models/ict.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IctItemService {\r\n\r\n  constructor() { }\r\n\r\n  public ictItem:ICTInterface[] = [];\r\n\r\n  /**\r\n   * @description function to return any ICT items\r\n   * @returns ICTInterface[]\r\n   */\r\n  get():ICTInterface[]{\r\n    return JSON.parse(JSON.stringify(this.ictItem));\r\n  }\r\n\r\n  /**\r\n   * @description function to assign a value to an ICT item\r\n   * @param items \r\n   * @return void\r\n   * @type ICTInterface[]\r\n   */\r\n  set(items:ICTInterface[]){\r\n    this.ictItem.push(...items);\r\n  }\r\n\r\n   /**\r\n   * @description function to reassign updated set of data to items\r\n   * @params items\r\n   * @return void\r\n   * @type ICTInterface[]\r\n   */\r\n    reSet(items:ICTInterface[]):void{\r\n      this.ictItem = items;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ICTInterface } from '../../models/ict.interface';\r\nimport  LpButton  from '../../../../assets/data/lp-button.json';\r\nimport  Buttons  from '../../../../assets/data/buttons.json';\r\nimport  SampleProLang  from '../../../../assets/data/sample-procurement.json';\r\nimport { IButtonInterface } from '../../models/IButtonInterface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LandingPageService {\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * @description store the value for the destination or next page\r\n   * @type string\r\n   */\r\n  destination:NextPage = NextPage.none;\r\n\r\n  /**\r\n   * @description Getting the title header text and upload button description used on the landing page from the json file\r\n   * @returns {buttonHeader:string}\r\n   */\r\n  getLpButtonData(): {buttonHeader:string}{\r\n    return LpButton;\r\n  }\r\n\r\n  /**\r\n   * @description Getting the label, the description and destination text for the get started button on the landing page\r\n   * @returns IButtonInterface\r\n   */\r\n   getLpGetStrBtn(): IButtonInterface{\r\n    return Buttons['getStarted'];\r\n  }\r\n\r\n  /**\r\n   * @description Getting the label, the description and destination text for the upload json button on the landing page\r\n   * @returns IButtonInterface\r\n   */\r\n   getLpUplBtn(): IButtonInterface{\r\n    return Buttons['uploadICT'];\r\n  }\r\n\r\n  /**\r\n   * @description Getting the data for the Sample Procurement Language in 3 Steps in the json file\r\n   * @returns string\r\n   */\r\n   getSampleProLang(): string{\r\n    return SampleProLang['data'];\r\n  }\r\n\r\n  /**\r\n   * @description used to update the destination\r\n   * @param nextPage \r\n   * @type NextPage\r\n   */\r\n  setNextPage(nextPage:NextPage){\r\n    this.destination = nextPage;\r\n  }\r\n\r\n  /**\r\n   * @description used to update the destination\r\n   * @return NextPage\r\n   */\r\n   getNextPage(): NextPage{\r\n    return this.destination;\r\n  }\r\n  \r\n}\r\n\r\nexport enum NextPage {\r\n  getStarted = \"getStarted\",\r\n  uploadICT = \"uploadICT\",\r\n  none=\"\"\r\n}\r\n","import {Component, EventEmitter, HostListener, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, MaxLengthValidator, Validators } from '@angular/forms';\r\nimport { FormElement, ElementType } from 'src/app/shared/models/form-element.interface';\r\nimport { FormTemplateInterface } from 'src/app/shared/models/form-template.interface';\r\nimport { FormButtons } from '../../models/form-buttons.interface';\r\nimport { IButtonInterface } from '../../models/IButtonInterface';\r\nimport { ICTInterface } from '../../models/ict.interface';\r\nimport { Router } from '@angular/router';\r\nimport { IctItemService } from '../../services/ict-item/ict-item.service';\r\nimport {ArtSideMenuInterface} from \"../../models/art-side-menu.interface\";\r\n\r\n\r\n@Component({\r\n  selector: 'art-form-template',\r\n  templateUrl: './art-form-template.component.html',\r\n  styleUrls: ['./art-form-template.component.scss']\r\n})\r\nexport class ArtFormTemplateComponent implements OnInit, OnChanges {\r\n\r\n  constructor(private fb: FormBuilder,public router:Router, public ictItemService:IctItemService) { }\r\n\r\n  /**\r\n   * @description An array of forms. Can have any any number of form, each form having its own sent of controls\r\n   * @type Array<FormGroup>\r\n   */\r\n  formList: FormGroup[] = [];\r\n\r\n  /**\r\n   * @description All the elements for all any number of forms\r\n   * @type Double array of FormControl\r\n   */\r\n  formElements:FormControl[][] = [[],[]];\r\n\r\n  /**\r\n   * @description Will use the ElementType enum to enforce specific type of elements already predefined\r\n   * @type\r\n   */\r\n  elementType = ElementType;\r\n\r\n  /**\r\n   * @description To flag when all the forms have been completed\r\n   * @type boolean[]\r\n   */\r\n  formCompletetion:boolean[] = []\r\n\r\n  /**\r\n   * @description the button to navigate to the previous form\r\n   * @type IButtonInterface\r\n   */\r\n  backButton: IButtonInterface = {label:\"Previous\", ariaLabel: \"navigate to the previous form\", btnClass:\"base\",  action: ()=>{} };\r\n\r\n  /**\r\n   * @description the button to navigate to the next form\r\n   * @type IButtonInterface\r\n   */\r\n  nextButton: IButtonInterface = {label:\"Next\", ariaLabel: \"navigate to the next form\", btnClass:\"base\", action: ()=>{} };\r\n\r\n  /**\r\n   * @type number\r\n   * @description tracking the page navigation \r\n   */\r\n  navIndex:number = 0;\r\n\r\n  /**\r\n   * @description storing the formControl the user selected\r\n   */\r\n  elementSelected:FormElement | undefined;\r\n\r\n  /**\r\n   * @description Generate side navigation\r\n   * @type ArtSideMenuInterface\r\n   */\r\n  sideMenu: ArtSideMenuInterface = {\r\n    sideNavItems:[],\r\n    activeId: 0\r\n  };\r\n\r\n  /**\r\n   * Used to trigger an component to run ngOnchange when an object was been updated but not flagged by angular\r\n   */\r\n  eltUpdated = false;\r\n\r\n  /**\r\n   * @description This input from the parent will provide all the configuration for the forms and elements which will be created\r\n   * @type FormTemplateInterface\r\n   */\r\n  @Input() formConfig: FormTemplateInterface[] = [];\r\n\r\n\r\n  /**\r\n   * @description this will be sent by the parent to trigger the ngOnChanges function to listing to any input property change\r\n   * @type any\r\n   */\r\n  @Input() scanChange: any;\r\n\r\n  /**\r\n   * @description to display loading section\r\n   */\r\n  loading = false;\r\n\r\n  /**\r\n   * @description Navigation page index.\r\n   */\r\n  @Input() pageIndex: number = 0;\r\n\r\n  /**\r\n   * @description Will return the data to the parent for only 1 form after form submission\r\n   * @type FormData[]\r\n   */\r\n  @Output()  formData = new EventEmitter<FormData[]>();\r\n\r\n  /**\r\n   * @type EventEmitter\r\n   * @description to track the page number on the form.\r\n   */\r\n  @Output()  pageNumber = new EventEmitter<number>();\r\n  \r\n  /**\r\n   * @description will listening to any input property change, will capture if a disable property for a form has been update to disable or enable that form\r\n   * @returns void\r\n   */\r\n  ngOnChanges(): void{\r\n      //looping each form to check if it has been set to disable or enable by its parent\r\n      this.formConfig.forEach((eachConfig, outerIndex) => {\r\n        if(this.formList[outerIndex ]){\r\n          if(this.formConfig[outerIndex].disable) this.formList[outerIndex].disable();\r\n          if(this.formConfig[outerIndex] && !this.formConfig[outerIndex].disable) this.formList[outerIndex].enable();\r\n        }\r\n      });\r\n      this.navIndex = this.pageIndex;\r\n    this.sideNavConfig();\r\n  }\r\n\r\n  /**\r\n   * @type ICTInterface\r\n   * @description get the current formData on the form\r\n   */\r\n  currentFormData:ICTInterface = {name:\"\", timeStamp:\"\", langKeyWords:{}};\r\n\r\n  /**\r\n   * @description holding all the control list data\r\n   * @type any[][]\r\n   */\r\n  allControlList:any[][]=[];\r\n\r\n  /**\r\n   * @description Form Initialization\r\n   * @returns void\r\n   */\r\n  ngOnInit(): void {\r\n\r\n    // Setting each Form\r\n    this.formConfig.forEach((eachConfig, outerIndex) => {\r\n\r\n      //Init  each form\r\n      this.formList.push(new FormGroup({}));\r\n\r\n      //Initialize form\r\n      this.formCompletetion.push(false);\r\n\r\n      //Only for debugging TOBE REMOVED\r\n      this.formList[outerIndex].valueChanges.subscribe((data)=>{\r\n\r\n        //clearHiddenElts should be run first to clear and removed the data which was displayed when another option is clicked before any other element should be displayed \r\n        setTimeout(()=>{\r\n          this.updateDownloadData();\r\n          //Loop all the field and display any elements which are needed based on the user answer\r\n          this.autoDisplayFields(outerIndex);\r\n          this.sideNavConfig();\r\n          this.loading = false;\r\n        },1000);\r\n      });\r\n   \r\n      \r\n      //create controls elements for each form\r\n      eachConfig.formElements.forEach((eachFormElement, index)=>{\r\n        if(eachFormElement.elementType === ElementType.text){\r\n          this.formList[outerIndex ].addControl(eachFormElement.controlName, new FormControl(eachFormElement.value, eachFormElement.validations));\r\n        } else{\r\n          this.formList[outerIndex ].addControl(eachFormElement.controlName, new FormGroup({}));\r\n          const k = {...this.formList[outerIndex ]};\r\n        }\r\n      });\r\n      this.allControlList.push([]);\r\n\r\n      Object.keys(this.formList[this.formControlIndex].controls).forEach(key => {\r\n        this.allControlList[outerIndex].push(this.formList[outerIndex].controls[key]);\r\n      });\r\n      // Check if a form needs to be disabled based on its config or parent request. It should be if the ICT lp has 10 ICT items \r\n      if(this.formConfig[outerIndex].disable) this.formList[outerIndex].disable();\r\n    });\r\n    this.sideNavConfig();\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param elt \r\n   * @type any\r\n   * @param outerIndex \r\n   * @description Capture the element the user click on and call the clearHiddenElts to clear and hide any other element which might be open on other options\r\n   */\r\n  onElementClick(elt:any, outerIndex: number){\r\n    this.loading = true;\r\n    //Parent control of the element selected\r\n    const parentControl = this.formConfig[outerIndex].formElements.find(data => {\r\n      const result = data.options?.find(eachOption => {\r\n        return eachOption.controlName === elt.controlName;\r\n      });\r\n      return  result;\r\n    })\r\n\r\n    //If an element is clicked and it is not a page load, get the formElement data for that element. It will always stored the latest element selected adn will only be updated if a n element is selected\r\n    if (elt && elt.controlName) {\r\n      this.elementSelected = parentControl?.options?.find(eachElt => eachElt.controlName === elt.controlName );\r\n    }\r\n\r\n    //Except the option the user clicked on, all other option children will be clear out and hidden until the children element has done as next property \"done\" \r\n    this.clearHiddenElts(outerIndex,parentControl, elt.controlName);\r\n\r\n  }\r\n\r\n  /**\r\n   * @description To check if an object has any value which is true\r\n   * @param obj \r\n   * @returns boolean\r\n   */\r\n  objectNotNull(obj:any):boolean{\r\n    const tempObj = JSON.parse(JSON.stringify(obj));\r\n    // If it is not an object, for the text element\r\n    if (tempObj === null) return false;\r\n\r\n    const keys = Object.keys(tempObj);\r\n    const data = keys.filter(eachKey => {\r\n      return tempObj[eachKey]\r\n    });\r\n    return data.length > 0;\r\n  }\r\n\r\n  /**\r\n   * @description from the list of all the formElement, it should return the formElement based on the controlName and index of the Form\r\n   * @param index \r\n   * @param controlName \r\n   * @returns FormElement | undefined\r\n   */\r\n  findFormElement(index:number, controlName: string): FormElement | undefined{\r\n    return controlName? this.formConfig[index]!.formElements!.find(eachElt => eachElt!.controlName === controlName ):undefined;\r\n  }\r\n\r\n/**\r\n * @description from the group element all the children of each element will be cleared and hidden except the element the user just selected.\r\n * @param index \r\n * @param parentElt \r\n * @param eltSelectedName \r\n */\r\n  clearHiddenElts(index:number, parentElt:FormElement | undefined, eltSelectedName:string){\r\n    //Getting the group of the option selected | e.g ict-group\r\n    const parentControl: FormGroup  = <FormGroup>this.formList[index].get(parentElt!.controlName);\r\n    //Getting all the option of that group {it-prod:false,it-serv:true ,it-none:false}\r\n    const vals = JSON.parse(JSON.stringify(parentControl!.value));\r\n    \r\n    /**\r\n     *  - this.objectNotNull(vals) => At least a  value should not be null on the current element. For user selection\r\n     *  - eltSelectedName === \"\" => for recurssion or form on load, no direct click by the user\r\n     *  - the group or formGroup should can be null if it is a text\r\n     * */ \r\n    if( this.objectNotNull(vals) || eltSelectedName === \"\" || (vals === null && parentElt?.elementType === ElementType.text )){ //for recursion, because the children of children will not be selected\r\n      /**\r\n       * the parent/group has many options, on the user click on one option, we want to cancel and hide them all next of each option\r\n       * We are looping through all the option of the group\r\n       * */\r\n      parentElt!.options!.forEach(parentOption =>{\r\n          // From on option of the group, we are getting the group element it will open if a user have selected that option\r\n          const nextElt = parentOption.next;\r\n          // From on option of the group, we are getting the group element that will be open along with the nextElt element. Can be null, only one element options under exemptions-group has it now\r\n          const nextEltAdd = parentOption.additionalNext;\r\n\r\n          //Getting the FormElement for group element that will be opened if a user selected on option on the group element/parent\r\n          const tempFormElt = this.findFormElement(index,nextElt);\r\n          //The formElement of the groupElement that would be hidden with tempFormElt \r\n          const tempFormEltAdd = nextEltAdd?this.findFormElement(index,nextEltAdd[0]?nextEltAdd![0]:\"\"):null;\r\n          /*\r\n          * Even though it is the same control name, all need to be clear, until autoDisplayFields redisplay them and it should not be the last item and shouldn't be hidden\r\n          * To clear anf hide that group element\r\n          * - It shouldn't be done, the end of the question\r\n          * - That element should not be already hidden unless the element to removed along with it exits\r\n          * \r\n          **/\r\n          if( nextElt !== 'done' && (tempFormElt?.hidden === false || tempFormEltAdd  )) {\r\n            // If the element that need to be hideen along exits, hide it. \r\n            if(tempFormEltAdd )tempFormEltAdd.hidden = true;\r\n            // Clearing all the data for the other option child\r\n            this.formList[index].get(nextElt)?.reset();\r\n            // Going to all the formElement\r\n            this.formConfig[index].formElements.forEach(eachElement => {\r\n              //If the element matching the next element\r\n              if(eachElement.controlName === nextElt  ){\r\n                // WE should hide that element and enable any element which might have been disabled\r\n                eachElement.hidden = true;\r\n                // Only when the has a direct click, and one option of the group element from that element an additionAll next\r\n                if(this.elementSelected && this.elementSelected.additionalNext && this.elementSelected.additionalNext.length > 0){\r\n                  //We are checking if that controlName is matching any controlName in our list and hide it.\r\n                  this.formConfig[index].formElements.forEach((elt, eltIndex) =>{\r\n                    if(elt.controlName === this.elementSelected?.additionalNext![0]) elt.hidden = true;\r\n                  })\r\n                }\r\n                this.formList[index].get(eachElement.controlName)?.enable();\r\n                // check if any next of each options on the element hidden has a value\r\n                  this.clearHiddenElts(index,tempFormElt, \"\");\r\n              }\r\n            })      \r\n          }\r\n        }); \r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description to auto display controls on the form\r\n   * @params number\r\n   * @Type number\r\n   * @returns void\r\n   */\r\n  autoDisplayFields(outerIndex:number):void{\r\n    //Looping to all the elements on the form\r\n    this.formConfig[outerIndex].formElements.forEach(eachElement => {\r\n\r\n      //If any elements has a value set or if the user selected a value\r\n      if( (eachElement.elementType === ElementType.text && this.formList[outerIndex].value[eachElement.controlName] )||\r\n          ( eachElement.elementType !== ElementType.text &&\r\n            this.formList[outerIndex].value[eachElement.controlName] && \r\n            Object.keys(this.formList[outerIndex].value[eachElement.controlName]).length > 0 &&\r\n            Object.keys(this.formList[outerIndex].value[eachElement.controlName]).find(key =>  !!this.formList[outerIndex].value[eachElement.controlName][key])\r\n           )\r\n        ) {\r\n          // If the field selected is not a text\r\n          if(eachElement.elementType !== ElementType.text){\r\n            // All the form(all elements on the form) key value are stored\r\n            const formKeysValues:any = this.formList[outerIndex].value[eachElement.controlName]; //{sot-type: 'red'} or {sof-type:true, elec-com:false ...}\r\n            //Only extract the keys from the form results which have values\r\n            const allKeysWithValues:string[] | undefined = Object.keys(formKeysValues).filter(key =>  !!formKeysValues[key]); // one or many keys have a value [fot-type, elec-com]\r\n            //Only extract the values which have been selected by the user input\r\n            const values = allKeysWithValues.map(eachVal => formKeysValues[eachVal!]);\r\n\r\n            const eltSelected:any[] = [];\r\n            //Going over all the values selected\r\n            values.forEach((eachVal, indexVal) => {\r\n                /*\r\n                 * Storing the list of all the elements the users interacted with. for radio or checkbox\r\n                 * WHen a user clicked on a control. It can capture the option with value by matching the element name with all values(key is the controlname) stored in   allKeysWithValues\r\n                **/\r\n                const optWithValue = eachElement.options!.find((elt, index) =>elt.controlName === allKeysWithValues[indexVal]);\r\n                /*\r\n                 * elt.value === eachVal is for prepopulated scenarious, when a user navigates back on the page.\r\n                 * we can directly get the value from the value property because all the elt has been updated\r\n                 * this option is needed only if the controlForm has not value, nothing has been selected by the user\r\n                **/\r\n                const optWithValuePrepo = eachElement.options!.find((elt, index) => elt.value === eachVal)\r\n\r\n                //Storing all the element selected, or having values on page loaded\r\n                eltSelected.push(optWithValue? optWithValue:optWithValuePrepo);\r\n\r\n                //Parent control of the element selected\r\n                const parentControl = this.formConfig[outerIndex].formElements.find(data => {\r\n                  const result = data.options?.find(eachOption => {\r\n                    return eachOption.controlName === eltSelected[0].controlName;\r\n                  });\r\n                  return  result;\r\n                })\r\n                  // For any option element having additionNext field set up\r\n                  let additionNext:string[] = [];\r\n                  //Based on the element selected, capture the next value and setting it to visible\r\n                  this.formConfig[outerIndex].formElements.forEach((elt, eltIndex) => {\r\n                    if(eltSelected[indexVal] && eltSelected[indexVal].next && elt.controlName.includes(eltSelected[indexVal]!.next)){\r\n                      elt.hidden = false;\r\n                      //if another element should be display at the same time of the current element, we are saving that element\r\n                      if(eltSelected[indexVal].additionalNext && eltSelected[indexVal].additionalNext.length > 0){\r\n                        additionNext = eltSelected[indexVal].additionalNext;\r\n                      }\r\n                    }\r\n\r\n                    if(eltSelected[indexVal].next === 'done'){\r\n                      this.formCompletetion[outerIndex] = true;\r\n                    }\r\n                  });\r\n                  // Looping to all the element t be displayed as well. For now ont one item on the array\r\n                  this.formConfig[outerIndex].formElements.forEach((elt, eltIndex) =>{\r\n                    if(elt.controlName === additionNext[0]) elt.hidden = false;\r\n                  })\r\n            });\r\n          }else{\r\n            // All the form(all elements on the form) key value are stored\r\n            const value:any = this.formList[outerIndex].value[eachElement.controlName]; //{sot-type: 'red'} or {sof-type:true, elec-com:false ...}\r\n        \r\n            let eltSelected:any;\r\n            //Going over all the values selected\r\n            // Storing the list of all the elements the users interacted with. for radio or checkbox\r\n            eltSelected = eachElement;\r\n              //Based on the element selected, capture the next value and setting it to visible\r\n            this.formConfig[outerIndex].formElements.forEach((elt, eltIndex) => {\r\n                if(eltSelected && eltSelected.next && elt.controlName.includes(eltSelected!.next)){\r\n                  elt.hidden = false;\r\n                }\r\n            })\r\n          } \r\n      }\r\n    });\r\n        \r\n  }\r\n\r\n  /**\r\n   * @description Will be called on a form submission button being clicked. And will emit the data to its parent\r\n   * @param index \r\n   * @rerun void\r\n   */\r\n  onFormSubmit(index:number):void{\r\n    const data = this.formList.map(eachForm =>eachForm.value);\r\n    \r\n    this.formData.emit(data);\r\n    //Will reset the form based on the its configuration\r\n    if(this.formConfig[index].clearForm) this.formList[index].reset();\r\n    if (this.formCompletetion.find(eachComp => !eachComp) === false &&  !this.formConfig[0].formButtons.add) alert(\"All your ICT project have not been completed !\");\r\n  }\r\n\r\n  /**\r\n   * @description Used to identified which form is being used\r\n   * @type number\r\n   */\r\n  formControlIndex:number = 0;\r\n\r\n  /**\r\n   * @description For each form it will get all the control elements and return it as an array to be looped on the html\r\n   * @returns FormControl[]\r\n   */\r\n  get controlList():any[]{\r\n    //Should not be go over the maximum number for forms set up.\r\n    if(this.formControlIndex >= this.formList.length) this.formControlIndex = 0;\r\n    const result:AbstractControl[] = [];\r\n    //Getting controls elements for a specific form\r\n    Object.keys(this.formList[this.formControlIndex].controls).forEach(key => {\r\n      result.push(this.formList[this.formControlIndex].controls[key]);\r\n    });\r\n    this.formControlIndex++;\r\n    return <any[]>(result);\r\n  }\r\n\r\n  /**\r\n   * @description on page reset\r\n   * @return void\r\n   */\r\n  onReset():void{\r\n    this.formList[this.navIndex].reset();\r\n  }\r\n\r\n  /**\r\n   * @description to navigate to the previous form page\r\n   * @returns void\r\n   */\r\n  navBackForm():void{\r\n    if(this.navIndex > 0){\r\n     this.navIndex--;\r\n     this.pageNumber.emit(this.navIndex);\r\n     this.updateDownloadData()\r\n     document.documentElement.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @description Based on the current form page, the data to be downloaded should be updated\r\n   * @return void\r\n   */\r\n  updateDownloadData():void{\r\n    //this is updated whenever the object is updated so the other component can render that object update\r\n    this.eltUpdated = !this.eltUpdated;\r\n    if(this.ictItemService.get() && this.ictItemService.get()[this.navIndex] && this.formList[this.navIndex] && this.formList[this.navIndex].value) {\r\n      this.currentFormData = {\r\n        name:this.ictItemService.get()[this.navIndex].name, \r\n        timeStamp: Date.now().toString(), \r\n        langKeyWords: this.formList[this.navIndex].value\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description to navigate to the next form page\r\n   * @returns void\r\n   */\r\n   navNextForm():void{\r\n    if(this.navIndex  < this.formConfig.length - 1){\r\n      this.navIndex++;\r\n      this.pageNumber.emit(this.navIndex);\r\n      this.updateDownloadData()\r\n     }\r\n    document.documentElement.scrollIntoView({behavior: \"smooth\", block: \"start\"});\r\n  }\r\n\r\n\r\n  sideNavConfig(){\r\n    //side navigation configuration\r\n    this.sideMenu.sideNavItems=[];\r\n    this.formConfig[this.pageIndex].formElements.forEach((formElement, index) => {\r\n      if(formElement.formSection && !formElement.hidden){\r\n        this.sideMenu.sideNavItems.push({\r\n          id: this.formConfig[this.pageIndex].formElements.length*this.pageIndex + index,\r\n          name: formElement.menuItem?formElement.menuItem:formElement.formSection\r\n        });}\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description Get array on menu IDs.\r\n   * @return array\r\n   */\r\n  getMenuIds():number[] {\r\n    let ids: number[] = [];\r\n    this.sideMenu.sideNavItems.forEach(item => {\r\n      ids.push(item.id);\r\n    });\r\n    return ids;\r\n  }\r\n\r\n  /**\r\n   * @description Windows scroll listener for set current side menu link as active.\r\n   */\r\n  @HostListener(\"window:scroll\", []) onWindowScroll() {\r\n    const allSections = document.querySelectorAll(`.form-section`);\r\n    let currLink: number = -1;\r\n    allSections.forEach((section, index) => {\r\n      let pos = section.getBoundingClientRect();\r\n      if (pos.bottom > 20 && currLink < 0 && this.getMenuIds().includes(index)) {\r\n        currLink = this.sideMenu.activeId = index;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"grid-row\">\r\n<div *ngIf=\"sideMenu.sideNavItems.length > 0\" class=\"tablet:grid-col-3 margin-bottom-3 tablet:margin-bottom-0 tablet:margin-right-6\">\r\n    <art-side-navigation [sideMenu]=\"sideMenu\"></art-side-navigation>\r\n</div>\r\n\r\n<!-- Will display all ICT FORM 1..10-->\r\n<div class=\"tablet:grid-col-8 tablet:margin-bottom-0\">\r\n\r\n<div  *ngFor=\"let eachFormConfig of formConfig; let outerIndex = index ; let last = last\" [ngClass]=\"{'ogp-display-none':outerIndex !== navIndex,'ogp-display-bloc':outerIndex === navIndex}\">\r\n    <form  [formGroup]=\"formList[outerIndex]\" (ngSubmit)=\"onFormSubmit(outerIndex)\" [hidden]=\"outerIndex !== navIndex\">\r\n        <!-- For each form, it will list all the control or form element-->\r\n        <div [hidden]=\"outerIndex !== navIndex\" class=\"grid-row\" \r\n            [ngClass]=\"{\r\n                        'flex-row':eachFormConfig.formButtons.add,\r\n                        'flex-align-end':eachFormConfig.formButtons.add,  \r\n                        'flex-column':!eachFormConfig.formButtons.add}\"\r\n                        >\r\n            \r\n            <div *ngFor=\"let eachControl of allControlList[outerIndex]; let index = index; let first=first\" \r\n                 class=\"form-section\" id=\"form-section-{{controlList.length*outerIndex + index }}\"\r\n              \r\n                 >\r\n                <div *ngIf=\"!eachFormConfig.formElements[index].hidden\" class=\"font-sans-lg  margin-bottom-2\" [ngClass]=\"{'margin-top-3':'index!==first'}\">\r\n                    <b>{{eachFormConfig.formElements[index].formSection}}</b>\r\n                </div>\r\n                <div class=\"margin-top-2\" *ngIf=\"!eachFormConfig.formElements[index].hidden\"  >\r\n                    <art-text-field \r\n                        *ngIf=\"eachFormConfig.formElements[index].elementType === 'text'\"  \r\n                        [formData]=\"eachFormConfig.formElements[index]\" \r\n                        [hidden]=\"false\"\r\n                        (eltClicked) = \"onElementClick($event, outerIndex)\"\r\n                        [control] = \"eachControl\">\r\n                    </art-text-field>\r\n                    <!-- Radio Button Group -->\r\n                    <div *ngIf=\"eachFormConfig.formElements[index].elementType === 'radioButtonGroup' && !eachFormConfig.formElements[index].hidden\">\r\n                        <art-radiobutton-group \r\n                            [formData]=\"eachFormConfig.formElements[index]\" \r\n                            [hidden]=\"false\"\r\n                            (eltClicked) = \"onElementClick($event,outerIndex )\"\r\n                            [formGroup]=\"eachControl\"></art-radiobutton-group>\r\n                    </div>\r\n\r\n                    <art-checkbox-group *ngIf=\"eachFormConfig.formElements[index].elementType === 'checkboxGroup' && !eachFormConfig.formElements[index].hidden\"\r\n                        [formData]=\"eachFormConfig.formElements[index]\"\r\n                        [formGroup]=\"eachControl\"\r\n                        [dataUpdated]=\"eltUpdated\"    \r\n                        (eltClicked) = \"onElementClick($event, outerIndex)\"                   \r\n                        >\r\n                    </art-checkbox-group>\r\n                </div>\r\n            </div>\r\n            <div tabindex = \"0\" aria-label=\"Content is loading, additional information is being displayed\" class=\"ogp-flex-center\" *ngIf=\"loading\">\r\n                <div class=\"lds-ripple\"><div></div><div></div></div>\r\n            </div>\r\n            <!-- This button will be disable if the form is not valid and if the value is null-->\r\n            <button \r\n                *ngIf=\"eachFormConfig.formButtons.add\"\r\n                [disabled]=\"!formList[outerIndex].valid || formList[outerIndex].value === null\" \r\n                id=\"art-add-btn for index {{outerIndex}}\" \r\n                aria-label=\"Add an ICT Item\"\r\n                class=\"usa-button usa-button--accent-warm art-add-btn\" \r\n                type=\"submit\">{{eachFormConfig.formButtons.add}}\r\n            </button>\r\n        </div>\r\n    </form>\r\n    <br>\r\n</div>\r\n<div *ngIf=\"this.router.url.includes('form-page')\" class=\"ogp-flex\">\r\n    <div>\r\n        <art-button class=\"ogp-btn\" [disabled]=\"navIndex === 0\" class=\"\" [buttonData]=\"backButton\" (click)=\"navBackForm()\"> </art-button>\r\n        <art-button class=\"ogp-btn\" *ngIf=\"navIndex <= formConfig.length - 2\" [buttonData]=\"nextButton\" (click)=\"navNextForm()\"> </art-button>\r\n        <button \r\n            *ngIf=\"navIndex === formConfig.length - 1\"\r\n            [disabled]=\"\" \r\n            class=\"ogp-btn usa-button usa-button--accent-warm\" \r\n            type=\"submit\"\r\n            (click)=\"onFormSubmit(0)\">\r\n            {{formConfig[0].formButtons.submit}}\r\n            \r\n        </button>\r\n    </div>\r\n    <div class=\"ogp-btn\" *ngIf=\"formConfig[0].formButtons.submit\">\r\n        <art-save-json [saveAsInfo]=\"{btnName:'Save json', fileName:'jsonData.json'}\" [ictItem]=\"currentFormData\" ></art-save-json>\r\n\r\n        \r\n        <!-- <button \r\n            (click)=\"onReset()\"\r\n            class=\"usa-button usa-button--secondary\" \r\n            type=\"button\">Clear Form\r\n        </button> -->\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlPath:\"/preview/gsa/section508.gov/development-art/art-v2\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}