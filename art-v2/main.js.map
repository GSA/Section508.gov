{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/ict-listing-page/ict-listing-page.component.ts","./src/app/pages/ict-listing-page/ict-listing-page.component.html","./src/app/pages/landing-page/landing-page.component.ts","./src/app/pages/landing-page/landing-page.component.html","./src/app/pages/test/test.component.ts","./src/app/pages/test/test.component.html","./src/app/shared/components/art-button/art-button.component.ts","./src/app/shared/components/art-button/art-button.component.html","./src/app/shared/components/art-generic-text/art-generic-text.component.ts","./src/app/shared/components/art-generic-text/art-generic-text.component.html","./src/app/shared/components/art-ict-item/art-ict-item.component.ts","./src/app/shared/components/art-ict-item/art-ict-item.component.html","./src/app/shared/components/art-text-field/art-text-field.component.ts","./src/app/shared/components/art-text-field/art-text-field.component.html","./src/app/shared/components/banner/banner.component.ts","./src/app/shared/components/banner/banner.component.html","./src/app/shared/components/file-upload/file-upload.component.ts","./src/app/shared/components/file-upload/file-upload.component.html","./src/app/shared/components/section508-banner/section508-banner.component.ts","./src/app/shared/components/section508-banner/section508-banner.component.html","./src/app/shared/components/section508-footer/section508-footer.component.ts","./src/app/shared/components/section508-footer/section508-footer.component.html","./src/app/shared/components/section508-header/section508-header.component.ts","./src/app/shared/components/section508-header/section508-header.component.html","./src/app/shared/models/form-element.interface.ts","./src/app/shared/services/art-content-data/art-content-data.service.ts","./src/app/shared/services/art-ict-lp/art-ict-lp.service.ts","./src/app/shared/services/art-test.service.ts","./src/app/shared/services/file-upload.service.ts","./src/app/shared/services/ict-item/ict-item.service.ts","./src/app/shared/services/landing-page/landing-page.service.ts","./src/app/shared/templates/art-form-template/art-form-template.component.ts","./src/app/shared/templates/art-form-template/art-form-template.component.html","./src/environments/environment.dev.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IctListingPageComponent } from './pages/ict-listing-page/ict-listing-page.component';\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\nimport { TestComponent } from './pages/test/test.component';\n\nconst routes: Routes = [\n  { path:'' ,  component: LandingPageComponent },  \n  { path:'ict-listing-page' ,  component: IctListingPageComponent },  \n  { path:'test' ,  component: TestComponent },  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ICTInterface } from './shared/models/ict.interface';\nimport { IButtonInterface } from './shared/models/IButtonInterface';\nimport { ArtContentDataService } from './shared/services/art-content-data/art-content-data.service';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n   /**\n   * @description Using service for all shared content\n   * @params artContentDataService\n   */\n    constructor( public artContentDataService:ArtContentDataService, private router:Router ) { }\n    \n    url=\"/preview/gsa/section508.gov/test-art/art-v2\";\n    //url=\"\";\n\n    ngOnInit(): void {\n      this.url = environment.urlPath;\n      console.log(this.url);\n      // update the on local, federalist or prod\n      //this.url = this.router.url.includes('preview/gsa/section508.gov')? \"/preview/gsa/section508.gov/feature/ECASOGP-dev-art-header-footer/art-v2\":\"/art-v2\"; \n    }\n  title = 'Accessibility Requirements Tool (ART)';\n\n  \n}\n","<section aria-label=\"Official Government Site Banner\" class=\"page-landing-page layout-demo  art-default-font\">\n    <a class=\"usa-skipnav\" href=\"#main-content\" >Skip to main content</a>\n    <art-section508-banner [url] = \"url\"></art-section508-banner>\n    <button id=\"backtotop\" title=\"Go to top\" style=\"display: none\">˄ Top</button>\n    <div class=\"usa-overlay\"></div>\n</section>\n<art-section508-header [url] = \"url\"></art-section508-header>\n  \n<art-banner \n    id=\"main-content\"\n    *ngIf=\"artContentDataService && artContentDataService.getBannerData()\"\n    [title]=\"artContentDataService.getBannerData().title\" \n    [header]=\"artContentDataService.getBannerData().header\" >\n</art-banner>\n\n<section class=\"usa-graphic-list usa-section art-banner\">\n    <div class=\"grid-container\">\n        <div class=\"grid-row grid-gap\">\n            <div class=\"tablet: grid-col\">\n                <!-- Header display -->\n                <div class=\"margin-bottom-2\">\n                    <art-generic-text *ngIf=\"artContentDataService && artContentDataService.getHeader\">\n                        <div [innerHTML]=\"artContentDataService.getHeader()\"></div>\n                    </art-generic-text>\n                </div>\n                <!-- Any content from the routing url will be displayed here -->\n                <router-outlet></router-outlet>\n                <!-- Footer display-->\n                <div art-generic-text-layout=\"border\" class=\"margin-top-5\">\n                    <div class=\"padding-x-2 padding-bottom-2 margin-top-2\"  *ngIf=\"artContentDataService && artContentDataService.getFooter()\">\n                        <art-generic-text [title]=\"artContentDataService.getFooter().title\">\n                            <div class=\"margin-top-1\">\n                                <div [innerHTML]=\"artContentDataService.getFooter().data\"></div>\n                            </div>\n                        </art-generic-text>\n                    </div>\n                </div>\n                <div class=\"margin-y-2\" [innerHTML]=\"artContentDataService.getUpdatedDate()\"> </div>\n            </div>\n        </div>\n    </div>\n</section>\n<art-section508-footer [url] = \"url\"></art-section508-footer>\n","import { NgModule } from '@angular/core';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FileUploadComponent } from './shared/components/file-upload/file-upload.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ArtButtonComponent } from './shared/components/art-button/art-button.component';\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\nimport { BannerComponent } from './shared/components/banner/banner.component';\nimport { IctListingPageComponent } from './pages/ict-listing-page/ict-listing-page.component';\nimport { ArtGenericTextComponent } from './shared/components/art-generic-text/art-generic-text.component';\nimport { Section508HeaderComponent } from './shared/components/section508-header/section508-header.component';\nimport { Section508BannerComponent } from './shared/components/section508-banner/section508-banner.component';\nimport { Section508FooterComponent } from './shared/components/section508-footer/section508-footer.component';\nimport { ArtTextFieldComponent } from './shared/components/art-text-field/art-text-field.component';\nimport { ArtFormTemplateComponent } from './shared/templates/art-form-template/art-form-template.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ICTItemComponent } from './shared/components/art-ict-item/art-ict-item.component';\nimport { TestComponent } from './pages/test/test.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FileUploadComponent,\n    ArtButtonComponent,\n    LandingPageComponent,\n    BannerComponent,\n    IctListingPageComponent,\n    ArtGenericTextComponent,\n    Section508HeaderComponent,\n    Section508BannerComponent,\n    Section508FooterComponent,\n    ArtTextFieldComponent,\n    ArtFormTemplateComponent,\n    ICTItemComponent,\n    TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [  {provide: LocationStrategy, useClass: HashLocationStrategy} ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { IButtonInterface } from 'src/app/shared/models/IButtonInterface';\nimport { IctItemService } from 'src/app/shared/services/ict-item/ict-item.service';\nimport { FormTemplateInterface } from 'src/app/shared/models/form-template.interface';\nimport { ArtIctLpService } from 'src/app/shared/services/art-ict-lp/art-ict-lp.service';\nimport { ICTInterface } from 'src/app/shared/models/ict.interface';\nimport { LandingPageService, NextPage } from 'src/app/shared/services/landing-page/landing-page.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ict-listing-page',\n  templateUrl: './ict-listing-page.component.html',\n  styleUrls: ['./ict-listing-page.component.scss']\n})\nexport class IctListingPageComponent implements OnInit {\n\n  /**\n   * @description limit the maximum of ICT items that can be added\n   * @type number\n   */\n  maxItems:number = 0;\n\n  /**\n   * @description Provide all the configuration for the forms and elements which will be created\n   * @type FormTemplateInterface\n   */\n  formConfig:FormTemplateInterface[] = [];\n\n  /**\n   * @description Used to trigger the ngOnChanges function to listing to any input property change\n   * @type any\n   */\n  scanChange:any = \"\";\n\n  /**\n   * @description The description for the input field\n   * @type:string\n   */\n  inputFieldDesc:string = \"\";\n\n  /**\n   * @description to store all the ICT Items created or uploaded\n   * @type: ICTInterface[]\n   */\n  ictItems:ICTInterface[] = [];\n\n  /**\n   * @description store the value of the placeholder for an element\n   * @type string\n   */\n  tempPlaceHolder:string | undefined;\n\n  /**\n  * @description enum to set predefined string \n  * @type string\n  */\n  nextPage = NextPage;\n\n  /**\n   * @description using the ictItemService component and artIctLpService service\n   * @param ictItemService artIctLpService\n   */\n  constructor(\n    private router:Router,\n    public landingPageService: LandingPageService,\n    private ictItemService: IctItemService, \n    public artIctLpService:ArtIctLpService) { }\n\n  ngOnInit(): void {\n    this.maxItems = this.artIctLpService.getMaxItems();\n    console.log(\"in ICT\", this.ictItemService.get());\n    console.log(\"landingPageService\", this.landingPageService.getNextPage());\n    if(!this.landingPageService.getNextPage()){\n      this.router.navigateByUrl(\"/\");\n    }\n    this.formConfig = this.artIctLpService.getConfigurations();\n    this.inputFieldDesc = this.formConfig[0].formElements[0].label.concat(\"\");\n    this.formConfig[0].formElements[0].label = \"\";\n    this.tempPlaceHolder = this.formConfig[0].formElements[0].placeholder;\n\n    // To Test 2 forms TOBE REMOVED\n    //this.formConfig.push(this.artIctLpService.getConfigurations2());\n  }\n\n  /**\n   * @return void\n   * @description When the user submit an project or ICT name, it will call the addIctItem function\n   * @param data \n   */\n  onFormSubmitted(data:any):void{\n    const key = Object.keys(data)[0];\n    const val = data[key];\n    const tempIctItem:ICTInterface = {name:val, langKeyWords:[data], timeStamp: (Date.now()).toString()} \n    this.addIctItem(tempIctItem);\n  }\n\n   /**\n   * @description When the user delete an ictItem, it will return the index of the ictItem deleted\n   * @param index \n   * @type number\n   * @return void\n   */\n  onItemDelete(index:number):void{\n    this.removeIctItem(index-1);\n  }\n\n  /**\n   * @description Used to remove an ICT item from the ictItem array\n   * @type: number\n   * @return void\n   * @param index\n   */\n   removeIctItem(index: number):void{\n    if(this.ictItems[index]){\n      // If the form  is disabled and an iem is being removed \n      if(this.ictItems.length <= this.maxItems && this.formConfig[0].disable ){\n        this.formConfig[0].disable = false;\n        this.formConfig[0].formElements[0].placeholder = this.tempPlaceHolder;\n        this.scanChange=\"false\";\n        this.ictItems.splice(index,1);\n      }else{\n        this.ictItems.splice(index,1);\n      }\n    }\n   }\n\n  /**\n   * @description Used to add an ICT item to the ictItem array\n   * @type: ICTInterface\n   * @return void\n   */\n  addIctItem(ictItem: ICTInterface):void{\n    // No action needed if the mx item is reached\n    if(this.ictItems.length >= this.maxItems && this.formConfig[0].disable){\n      return;\n    }\n\n    if(this.ictItems.length < this.maxItems){\n      this.ictItems.push(ictItem);\n    }\n\n    // if the max item number has been reached, disable the form\n    if(this.ictItems.length === this.maxItems){\n      this.formConfig[0].disable = true;\n      this.formConfig[0].formElements[0].placeholder = \"\";\n      this.scanChange=\"true\";\n    }\n  }\n\n  /**\n   * @description when the file has been uploaded successfully, this function is called \n   * @param event \n   * @type ICTInterface\n   * @return void\n   */\n   onFileReceive(event:ICTInterface[]):void{\n    this.ictItemService.set(event);\n    event.forEach(eachIctItem => this.addIctItem(eachIctItem));\n  }\n}\n","\n<!-- Bordered section-->\n<div art-generic-text-layout=\"top-border\">\n\n    <div class=\"margin-3\">\n        <!-- Upload ICT section-->\n        <div *ngIf=\"nextPage.uploadICT === landingPageService.getNextPage()\" >\n            <!-- Get Upload button container section-->\n            <div class=\"margin-bottom-3\">\n                <p class=\"art-margin-bottom-03\">{{artIctLpService.getUploadBtn().description}} </p>\n            </div>\n\n            <!-- File upload section-->\n            <div id=\"art-upload-button-container\" class=\"margin-left-1 margin-bottom-3\">\n                <art-file-upload \n                    (getFileData)=\"onFileReceive($event)\" \n                    [maxFilesNbr]=\"maxItems - ictItems.length\"\n                    [maxLength] = \"artIctLpService.getMaxLength()\"\n                >\n                </art-file-upload>\n            </div>\n        </div>\n\n        <!-- Input field section-->\n        <art-generic-text *ngIf=\"formConfig[0].formElements[0].formSection && nextPage.getStarted === landingPageService.getNextPage()\">\n                <div class =\"font-serif-lg margin-bottom-1\">\n                    <b>{{formConfig[0].formElements[0].formSection}}</b>\n                </div>\n                <div class=\"margin-left-2\">\n                    <p class=\"margin-bottom-0\">\n                        {{inputFieldDesc}}\n                    </p>\n                    <!-- Input field -->\n                    <art-form-template \n                        [formConfig]=\"formConfig\" \n                        [scanChange]=\"scanChange\"\n                        (formData)=\"onFormSubmitted($event)\"\n                    ></art-form-template>\n                    <i class=\"usa-error-message font-sans-2xs\" *ngIf=\"ictItems.length >= maxItems\">{{artIctLpService.getErrorMsg()}}</i>\n                </div>         \n        </art-generic-text>\n         <!-- Listing ICT Items -->\n         <div class=\"margin-left-2 margin-top-1\">\n            <span *ngFor= \"let eachIctItem of ictItems; let index = index\">\n                <art-ict-item \n                    [index] = \"index + 1\"\n                    [ictItem]=\"eachIctItem\"\n                    (delete)=\"onItemDelete($event)\"\n                >\n                </art-ict-item>\n            </span>\n        </div>  \n        <!-- Continue button-->\n        <div class=\"margin-top-5\" *ngIf=\"ictItems\">\n            <art-button  \n                [buttonData] = \"artIctLpService.getContBtl()\" \n                [disabled]=\"ictItems.length <= 0\"\n                >\n            </art-button>\n        </div>\n    </div>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { IButtonInterface } from 'src/app/shared/models/IButtonInterface';\nimport { ICTInterface } from 'src/app/shared/models/ict.interface';\nimport { IctItemService } from 'src/app/shared/services/ict-item/ict-item.service';\nimport { LandingPageService, NextPage } from 'src/app/shared/services/landing-page/landing-page.service';\n\n@Component({\n  selector: 'art-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n\n  /**\n   * @description Using the  ICT Item service and the landing page service\n   * @params ictItemService, landingPageService\n   */\n  constructor(private ictItemService:IctItemService, public landingPageService:LandingPageService ) { }\n\n  /**\n   * @description data for the description above the button\n   * @type string\n   */\n  lpButtonHeader:string = \"\";\n\n  /**\n   * @description Used to check if the data has been upload component is displayed\n   * @type boolean\n   */\n   uploadDisplayed:boolean = false;\n\n  /**\n    * @description Storing the data for the get started button: label and destination\n    * @type IButtonInterface\n    */\n  getStartedBtn:IButtonInterface = {label:\"\"};\n\n  /**\n  * @description storing the data for the upload ict button. labe and destination\n  * @type IButtonInterface\n  */\n  getUploadICTBtn:IButtonInterface = {label:\"\"}\n\n\n  ngOnInit(): void {\n    //Initialization\n    this.lpButtonHeader = this.landingPageService.getLpButtonData().buttonHeader;\n    this.getStartedBtn = {...this.landingPageService.getLpGetStrBtn(), action:()=>{this.getNextPage(NextPage.getStarted)}};\n    this.getUploadICTBtn = {...this.landingPageService.getLpUplBtn(), action:()=>{this.getNextPage(NextPage.uploadICT)}};\n  }\n\n  /**\n   * @description when the file has been uploaded successfully, this function is called \n   * @param event \n   * @type ICTInterface\n   * @return void\n   */\n  onFileReceive(event:ICTInterface[]):void{\n    this.ictItemService.set(event);\n  }\n\n  /**\n   * @description set the destination on the next page\n   * @param nextPage \n   * @type string\n   */\n  getNextPage(nextPage:NextPage):void{\n      this.landingPageService.setNextPage(nextPage);\n  }\n\n}\n","<section aria-label=\"Landing Banner\">\n    <!-- Get started button container section-->\n    <div art-generic-text-layout=\"top-border\">\n        <art-generic-text *ngIf=\"lpButtonHeader\">\n            <div class=\"margin-2\">\n                <div class =\"font-serif-lg margin-bottom-1\">\n                    <b>{{lpButtonHeader}}</b>\n                </div> \n                <div class=\"art-flex\">\n                    <div>\n                        <art-button [buttonData] = \"getStartedBtn\" ></art-button>\n                    </div>\n                    <div class=\"art-btn\">\n                        <art-button [buttonData] = \"getUploadICTBtn\"   ></art-button>\n                    </div>\n                </div>\n            </div>\n        </art-generic-text>\n    </div>\n    <!-- Sample Procurement Language in 3 Steps section-->\n    <div art-generic-text-layout=\"background-color\">\n        <art-generic-text *ngIf=\"landingPageService && landingPageService.getSampleProLang\">\n            <div class=\"padding-x-3 padding-y-1 margin-top-5\"  >\n                <div [innerHTML]=\"landingPageService.getSampleProLang()\"></div>\n            </div>\n        </art-generic-text>\n    </div>\n</section>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormTemplateInterface } from 'src/app/shared/models/form-template.interface';\nimport { ArtTestService } from 'src/app/shared/services/art-test.service';\nimport { IctItemService } from 'src/app/shared/services/ict-item/ict-item.service';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n/**\n * @description Provide all the configuration for the forms and elements which will be created\n * @type FormTemplateInterface\n */\n  formConfig:FormTemplateInterface[] = [];\n\n  /**\n  * @description Used to trigger the ngOnChanges function to listing to any input property change\n  * @type any\n  */\n  scanChange:any = \"\";\n  \n  constructor(private ictItemService: IctItemService, \n    public artTestService:ArtTestService) { }\n\n  ngOnInit(): void {\n    this.formConfig = this.artTestService.getConfigurations();\n    this.formConfig.push(this.formConfig[0]);\n  }\n\n  /**\n   * @return void\n   * @description When the user submit an project or ICT name, it will call the addIctItem function\n   * @param data \n   */\n   onFormSubmitted(data:any):void{\n    const key = Object.keys(data)[0];\n    const val = data[key];\n  }\n\n}\n","<art-form-template \n    [formConfig]=\"formConfig\" \n    [scanChange]=\"scanChange\"\n    (formData)=\"onFormSubmitted($event)\"\n></art-form-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IButtonInterface } from '../../models/IButtonInterface';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'art-button',\n    templateUrl: './art-button.component.html',\n    styleUrls: ['./art-button.component.scss']\n})\nexport class ArtButtonComponent implements OnInit {\n    constructor(private router: Router) { }\n\n    /**\n     * @description the input for the button \n     * @type IButtonInterface\n     */\n    @Input('buttonData') buttonData?: IButtonInterface;\n\n    /**\n     * @description to disabled the button\n     * @type boolean\n     */\n    @Input('disabled') disabled?: boolean = false;\n\n    ngOnInit(): void {\n    }\n\n    /**\n     * @return void\n     * @description this function is trigger when the button is and will redirect the user to the destination\n     */\n    buttonClicked():void {\n\n        // Calling the action method if defined\n        if (this.buttonData?.action) {\n            this.buttonData?.action();\n        }\n        if (this.buttonData?.destination) {\n            this.router.navigateByUrl(this.buttonData?.destination);\n        }\n    }\n}\n","<button \n    [disabled]=\"disabled\"\n    type=\"button\" \n    title=\"{{buttonData?.description}}\" \n    class=\"usa-button usa-button--accent-warm\" \n    (click)=\"buttonClicked()\">\n        {{buttonData?.label}}\n</button>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'art-generic-text',\n  templateUrl: './art-generic-text.component.html',\n  styleUrls: ['./art-generic-text.component.scss']\n})\nexport class ArtGenericTextComponent implements OnInit {\n\n  /**\n   * @description the input value for this component\n   * @type string\n   */\n  @Input() title:string = '';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div>\n  <strong class=\"art-agt-title\">{{ title }}</strong>\n  <ng-content></ng-content>\n</div>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {ICTInterface} from \"../../models/ict.interface\";\n\n@Component({\n  selector: 'art-ict-item',\n  templateUrl: './art-ict-item.component.html',\n  styleUrls: ['./art-ict-item.component.scss']\n})\nexport class ICTItemComponent {\n  /**\n   * @var index  The index of this item in a list\n   */\n  @Input() index: number = 0;\n\n  /**\n   * @var ictItem  The Item this component represents.\n   */\n  @Input() ictItem?: ICTInterface;\n\n  /**\n   * @var delete  An event emitter that triggers when the delete button is clicked.\n   */\n  @Output() delete: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor() { }\n\n  /**\n   * Emits a delete event when the function is invoked.\n   * This function is bound to the click event of the delete button.\n   */\n  deleteClicked(): void {\n    this.delete.emit(this.index);\n  }\n\n}\n","<div attr.data-index=\"{{ index }}\">\n    <span><abbr title=\"{{ ictItem?.name }}\">{{ ictItem?.name }}</abbr></span>\n    <button \n        (click)=\"deleteClicked()\" \n        attr.aria-label=\"Delete button for index {{index + 1}}\"\n        class=\"usa-button usa-button--secondary\" >Delete\n    </button>\n</div>\n","import { ThisReceiver } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors } from '@angular/forms';\nimport { FormElement, ElementType } from '../../models/form-element.interface';\n\n@Component({\n  selector: 'art-text-field',\n  templateUrl: './art-text-field.component.html',\n  styleUrls: ['./art-text-field.component.scss']\n})\nexport class ArtTextFieldComponent implements OnInit {\n\n  constructor() { }\n\n  /**\n   * @type FromElement\n   * @description the parent component will send that input to configure this text input field component\n   */\n  @Input() formData:FormElement | undefined;\n  @Input() control:AbstractControl<any, any> | undefined;\n  fromControl:FormControl = new FormControl();\n\n  ngOnInit(): void {\n    this.fromControl = <FormControl>this.control;\n    this.control?.statusChanges.subscribe(()=>{\n    });\n  }\n\n  /** \n   * @description used to check if this formcontrol has any error based on the validations from its configuration, wit the max char length to be 25\n   * @return string\n  */\n  displayError():string{\n    let errorMessage = \"\";\n    const error:ValidationErrors | undefined | null = this.control?.errors;\n    if(this.control?.getError(ErrorText.maxlength)){\n      errorMessage= this.formData?.errorMessages[ErrorText.maxlength];\n    };\n\n    return errorMessage || \"\";\n  }\n\n}\n\nexport enum ErrorText {\n  maxlength = \"maxlength\"\n}\n","\n<div class=\"usa-form-group\" [ngClass]=\"{'usa-form-group--error':displayError()}\">\n  <label class=\"usa-label \" for=\"input\"\n    >{{formData?.label}}</label\n  >\n\n  <span *ngIf=\"displayError()\" class=\"usa-error-message\" role=\"alert\" for=\"input-error\">{{displayError()}}</span>\n\n  <input\n    class=\"usa-input\" [ngClass]=\"{'usa-input--error':displayError()}\"\n    autocomplete=\"off\"\n    id=\"input\"\n    attr.aria-label=\"{{formData?.placeholder}}\"\n    [placeholder]=\"formData?.placeholder\"\n    name=\"input\"\n    [formControl]=\"fromControl\"\n  />\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'art-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  /**\n   * @description Title for the banner\n   * @type string\n   */\n  @Input() title:string = \"\";\n\n  /**\n   * @description Header for the banner\n   * @type string\n   */\n  @Input() header:string = \"\";\n\n  ngOnInit(): void {\n  }\n\n}\n","<section aria-label=\"Page Banner\" class=\"usa-graphic-list usa-section art-landing-page-banner\">\n    <div class=\"grid-container\">\n        <div class=\"grid-row grid-gap\">\n            <div class=\"tablet: grid-col\">\n                <span *ngIf=\"header\" id=\"art-banner-header\" class=\"art-banner-title-color font-sans-lg margin-bottom-0\">\n                    {{header}}\n                </span>\n                <br />\n                <h1 *ngIf=\"title\" id=\"art-banner-title\" class=\"text-white font-sans-xl margin-top-0 margin-bottom-0\">\n                    {{title}}\n                </h1>\n            </div>\n        </div>\n    </div>\n </section>\n","import { Component,EventEmitter,Input,OnInit, Output } from \"@angular/core\";\nimport { FileUploadService } from \"src/app/shared/services/file-upload.service\";\nimport { IFileData } from \"../../models/file-data.interface\";\nimport { ICTInterface } from \"../../models/ict.interface\";\n@Component({\n    selector: 'art-file-upload',\n    templateUrl: './file-upload.component.html',\n    styleUrls: ['./file-upload.component.scss']\n})\n\nexport class FileUploadComponent implements OnInit{\n    selectErrors:string[] = [];\n    //Store selected files\n    files: File[] = [];\n    //Output for parent component.\n    result: IFileData = {errors:[], jsonData:[]};\n    //Flag to enable/disable the Upload button.\n    isReadyToUpload:boolean = false;\n    //Flag for file input. True if no file selected.\n    fileInputRequired:boolean = true;\n   \n    //Max size allowed for a file (in Bytes)\n    maxFileSize: number = 10485760\n    /**\n     * @description Used to display successful message when the files has been upload successfully \n     * @type string\n     */\n    successMessage:string = '';\n    \n    //Inject Services\n    constructor(private fileUploadService: FileUploadService){}\n    @Output() getFileData = new EventEmitter<ICTInterface[]>();\n\n    /**\n     * @description the maximum number of files to be uploaded\n     */\n    @Input() maxFilesNbr:number = 8;\n\n    /**\n     * @description the maximum number the name character\n     */\n     @Input() maxLength:number = 25;\n\n    ngOnInit(): void {\n        this.fileUploadService.setMaxLength(this.maxLength);\n    }\n    /**\n     * @param event \n     * @returns void\n     * @description invokes when user selects the files. Validates numbers of file selected, size and type of a file. Validation errors are stored in SelectErrors array. \n     * @type {(event: Event) => void}\n     **/\n    onChange(event: any): void {\n        this.successMessage = \"\";\n        //Initializing the variables\n        this.result={errors:[], jsonData:[]};\n        this.isReadyToUpload = false;\n        this.fileInputRequired = false;\n        this.selectErrors = [];\n        //checking if no file is selected\n        if(event.target.files.length==0){\n            this.fileInputRequired = true\n            return;\n        }\n        //checking if files are selected are more than the maximum sent by the parents\n        if(event.target.files.length > this.maxFilesNbr){\n            this.selectErrors.push('Maximum Upload is ' +this.maxFilesNbr.toString() + '.');\n        }\n        //validating type and size of selected files.\n        for(var file of event.target.files){\n            if (file.size > this.maxFileSize){\n                this.selectErrors.push('File size is limited to 10MB max. ' + file.name + ': ' + this.fileUploadService.truncate(file.size/1048576,2)  + 'MB');\n            }\n            if(file.type != 'application/json'){\n                this.selectErrors.push('Please upload a valid JSON file. ' + file.name);\n            }\n        }\n        console.log(\"=====\", event.target.files);\n        if(this.selectErrors.length>0){\n            return;\n        }\n        this.files = event.target.files;\n        this.isReadyToUpload = true;\n    }\n    \n    /**\n     * @returns void\n     * @description collects the json data from all files and emits a single array to the calling component \n     * @type {() => void}\n     **/\n    onUpload(){\n        this.fileUploadService.upload(this.files)\n        .then((fileData)=>{       \n            this.result = fileData;\n            this.getFileData.emit(this.result.jsonData);\n            this.isReadyToUpload = false;\n            if(this.result.errors && this.result.errors.length <= 0) this.successMessage = \"File uploaded\"\n        })\n    }\n\n}","<!-- div for file upload -->\n<section aria-label=\"File upload\" class=\"usa-graphic-list\">\n    <div class=\"usa-form-group \">\n        <label class=\"usa-label\" for=\"file-input-specific\">Input accepts only specific file types</label>\n        <span class=\"usa-hint\" id=\"file-input-specific-hint\" *ngIf=\"fileInputRequired\" >Select JSON files</span>\n        <!-- file input button -->\n        <div class=\"usa-file-input\">\n            <!-- error message from file-upload component, these error may be seen after selecting the files -->\n            <div class=\"input-error-alert error\" *ngIf=\"selectErrors.length>0\">\n                <div class=\"margin-x-2\" *ngFor=\"let error of selectErrors\">\n                    {{error}}\n                </div>\n            </div>\n            <!-- error message from file-upload service -->\n            <div *ngIf=\"result.errors.length>0\" class=\"error\">\n                <div *ngFor=\"let error of result.errors; let i = index\">\n                    {{error}}\n                </div>\n            </div>\n            <!-- SUccess message-->\n            <div *ngIf=\"successMessage\" class=\"success\">\n                {{successMessage}}\n            </div>\n            <div class=\"art-file-input__target\" >\n                <div *ngIf=\"isReadyToUpload\" class=\"margin-bottom-3\" >\n                    <div class=\"usa-file-input__preview-heading\">\n                        {{files.length}} file{{files.length==1? '':'s'}} selected \n                        <span class=\"usa-file-input__choose\">Change files</span>\n                    </div>\n                    <!-- Looping through each file selected-->\n                    <div *ngFor=\"let eachFile of files\" class=\"usa-file-input__preview\" aria-hidden=\"true\">\n                        {{eachFile.name}}\n                    <div></div></div>\n                </div>\n                <div class=\"usa-file-input__instructions\" *ngIf=\"!isReadyToUpload\">\n                    <span class=\"usa-file-input__drag-text\">Drag file here or </span>\n                    <span class=\"usa-file-input__choose\">choose from folder</span>\n                </div>\n                <div class=\"usa-file-input__box\"></div>\n                <input \n                    id=\"file-input-specific\" \n                    class=\"usa-file-input__input\" \n                    type=\"file\" \n                    name=\"file-input-specific\" \n                    (change)=\"onChange($event)\" \n                    aria-describedby=\"file-input-specific-hint\" \n                    accept=\".json\" \n                    multiple=\"multiple\" \n                    aria-live=\"polite\" \n                    aria-label=\"No files selected\" \n                    data-default-aria-label=\"No files selected\"\n                />\n            </div>\n        </div>\n    </div>\n    <!-- the upload button -->\n    <button \n        class=\"usa-button usa-button--outline\" \n        *ngIf=\"isReadyToUpload\" \n        (click)=\"onUpload()\" >\n        Upload\n    </button>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'art-section508-banner',\n  templateUrl: './section508-banner.component.html',\n  styleUrls: ['./section508-banner.component.scss']\n})\nexport class Section508BannerComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() url = \"\";\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"usa-banner\">\n    <div class=\"usa-accordion\">\n      <div class=\"usa-banner__header\">\n        <div class=\"usa-banner__inner\">\n          <div class=\"grid-col-auto\">\n              <img\n                  aria-hidden=\"true\"\n                  aria-label=\"U.S. Flag\"\n                  class=\"usa-banner__header-flag\"\n                  src=\"{{url}}/assets/uswds/img/us_flag_small.png\"\n              >\n          </div>\n          <div class=\"grid-col-fill tablet:grid-col-auto\">\n            <p class=\"usa-banner__header-text\">An official website of the United States government</p>\n            <p class=\"usa-banner__header-action\" aria-hidden=\"true\">Here’s how you know</p>\n          </div>\n          <button class=\"usa-accordion__button usa-banner__button\" aria-expanded=\"false\" aria-controls=\"gov-banner\">\n            <span class=\"usa-banner__button-text\">Here's how you know</span>\n          </button>\n        </div>\n      </div>\n      <div class=\"usa-banner__content usa-accordion__content\" id=\"gov-banner\" hidden=\"\">\n        <div class=\"grid-row grid-gap-lg\">\n          <div class=\"usa-banner__guidance tablet:grid-col-6\">\n            <img class=\"usa-banner__icon usa-media-block__img\" alt=\"Dot gov\" src=\"{{url}}/assets/uswds/img/icon-dot-gov.svg\">\n            <div class=\"usa-media-block__body\">\n              <p>\n                <strong>The .gov means it’s official.</strong>\n                <br>\n                Federal government websites often end in .gov or .mil. Before sharing sensitive information, make sure\n                you’re on a federal government site.\n              </p>\n            </div>\n          </div>\n          <div class=\"usa-banner__guidance tablet:grid-col-6\">\n            <img \n              class=\"usa-banner__icon usa-media-block__img\" \n              alt=\"Https\" \n              src=\"{{url}}/assets/uswds/img/icon-https.svg\"\n            >\n            <div class=\"usa-media-block__body\">\n              <p>\n                <strong>The site is secure.</strong>\n                <br>\n                The <strong>https://</strong> ensures that you are connecting to the official website and that any\n                information you provide is encrypted and transmitted securely.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'art-section508-footer',\n  templateUrl: './section508-footer.component.html',\n  styleUrls: ['./section508-footer.component.scss']\n})\nexport class Section508FooterComponent implements OnInit {\n\n  constructor() { }\n  @Input() url=\"\";\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"usa-footer usa-footer--big\">\n    <div class=\"usa-footer__primary-section\">\n        <div class=\"grid-container\">\n            <div class=\"grid-row grid-gap padding-bottom-4\">\n                <div class=\"desktop:grid-col-4\">\n                    <p class=\"text-bold\">Government-wide Initiatives</p>\n                    <ul class=\"add-list-reset line-height-sans-6\">\n                        <li> <a href=\"https://www.gsa.gov/technology/government-it-initiatives/digital-strategy\" target=\"_blank\">Digital Strategy</a></li>\n                        <li> <a href=\"https://www.plainlanguage.gov/\" target=\"_blank\">Plain Language </a></li>\n                        <li> <a href=\"https://designsystem.digital.gov/\" target=\"_blank\"> US Web Design System </a></li>\n                        <li> <a href=\"https://www.cio.gov/about/members-and-leadership/accessibility-cop/\" target=\"_blank\"> CIO Council Accessibility Community of Practice (ACOP)</a></li>\n                    </ul>\n                </div>\n                <div class=\"desktop:grid-col-2\">\n                    <p class=\"text-bold\">Organization</p>\n                    <ul class=\"add-list-reset line-height-sans-6\">\n                        <li> <a href=\"https://www.section508.gov/about-us/\" aria-label=\"About Us in Organization\"> About Us</a></li>\n                        <li> <a aria-label=\"Contact Us details\" href=\"https://www.section508.gov/contact-us/\"> Contact Us</a></li>\n                        <li><a href=\"https://www.section508.gov/contributors/\" aria-label=\"Section508.gov site Contributors\"> Contributors</a></li>\n                    </ul>\n                </div>\n                <div class=\"desktop:grid-col-3\">\n                    <p class=\"text-bold\">Tools</p>\n                    <ul class=\"add-list-reset line-height-sans-6\">\n                        <li> <a href=\"https://www.section508.gov/art\" aria-label=\"Accessibility Requirements Tool\"> ART</a></li>\n                        <li> <a href=\"https://www.section508.gov/buy/solicitation-review-tool\" aria-label=\"Solicitation Review Tool\"> SRT</a></li>\n                        <li> <a href=\"https://www.section508.gov/content/guide-accessible-web-design-development\"> Developer Guide</a></li>\n                        <li> <a href=\"https://digitaldashboard.gov/\" target=\"_blank\"> DigitalDashboard.gov</a></li>\n                        <li> <a href=\"https://analytics.usa.gov/\" target=\"_blank\"> Analytics.usa.gov</a></li>\n                    </ul>\n                </div>\n                <div class=\"desktop:grid-col-3\">\n                    <p class=\"text-bold\">Resources</p>\n                    <ul class=\"add-list-reset line-height-sans-6\">\n                        <li> <a href=\"https://www.section508.gov/content/glossary\"> Glossary</a></li>\n                        <li> <a href=\"https://www.section508.gov/website-policies\"> Website Policies</a></li>\n                        <li> <a href=\"https://www.section508.gov/tools/coordinator-listing\"> Find Your Section 508 Program Manager</a></li>\n                        <li><a href=\"https://www.section508.gov/manage/join-the-508-community/\">Join the Community(Listserv)</a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- <div class=\"usa-footer__secondary-section\">\n        <div class=\"grid-container\">\n            <div class=\"grid-row grid-gap\">\n                <div class=\"usa-footer__logo grid-row tablet:grid-col-12\">\n                    <div class=\"tablet:grid-col-3 desktop:grid-col-4 margin-y-1\">\n                        <a href=\"https://www.gsa.gov/\" aria-label=\"General Services Administration\" target=\"_blank\">\n                        <img alt=\"General Service Administration\" class=\"usa-footer__logo-img margin-right-1\" width=\"42\" valign=\"middle\" integrity=\"sha512-5ciC+l/ipR9VSnpK/i6PqrSHd0/pMTEBs6nArXajxdJ2S+59+E/itSW10iB2emnqYwwo1lYSTAXMiRp7TMGStg==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/images/gsa-logo.png\">General Services Administration </a>\n                    </div>\n                    <div class=\"tablet:grid-col-3 margin-y-1\">\n                        <a href=\"https://www.access-board.gov/\" target=\"_blank\" aria-label=\"US Access Board\">\n                        <img alt=\"US Access Board\" class=\"usa-footer__logo-img margin-right-1\" width=\"42\" valign=\"middle\" integrity=\"sha512-YCOEKxFp6bB4M71udl46ogBIO6Ai2DBjoRHDIeMnqCWjsBaq2tNQsyp+29cthfOYwCTNnxxS2jpxzWEUNZqV6g==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/images/seal-usab.png\">US Access Board </a>\n                    </div>\n                    <div class=\"tablet:grid-col-3 margin-y-1\">\n                        <a href=\"https://www.section508.gov/manage/join-the-508-community/\" target=\"_blank\" aria-label=\"Joining listserv\">\n                        Join the Community(Listserv)</a>\n                    </div> \n                </div>\n            </div>\n        </div>\n    </div> -->\n</footer>\n<div class=\"usa-identifier\">\n    <section class=\"usa-identifier__section usa-identifier__section--masthead\" aria-label=\"Agency identifier,\">\n      <div class=\"usa-identifier__container\">\n        <div class=\"usa-identifier__logos\">\n          <a href=\"https://gsa.gov\" class=\"usa-identifier__logo\">\n              <img class=\"usa-identifier__logo-img\" alt=\"General Services Administration Logo\" integrity=\"sha512-5ciC+l/ipR9VSnpK/i6PqrSHd0/pMTEBs6nArXajxdJ2S+59+E/itSW10iB2emnqYwwo1lYSTAXMiRp7TMGStg==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/images/gsa-logo-md.png\">\n          </a>\n        </div>\n        <div class=\"usa-identifier__identity\" aria-label=\"Agency description\">\n          <p class=\"usa-identifier__identity-domain\">Section508.gov</p>\n          <p class=\"usa-identifier__identity-disclaimer\">\n            An official website of the <a href=\"https://www.gsa.gov/\">General Services Administration</a>\n          </p>\n        </div>\n      </div>\n    </section>\n    <nav class=\"usa-identifier__section usa-identifier__section--required-links\" aria-label=\"Important links,,\">\n      <div class=\"usa-identifier__container\">\n        <ul class=\"usa-identifier__required-links-list\">\n          <li class=\"usa-identifier__required-links-item\">\n            <a href=\"https://www.gsa.gov/about-us\" class=\"usa-identifier__required-link usa-link\">About GSA</a>\n          </li>\n          <li class=\"usa-identifier__required-links-item\">\n            <a href=\"https://www.gsa.gov/website-information/accessibility-aids\" class=\"usa-identifier__required-link usa-link\">Accessibility support</a>\n          </li>\n          <li class=\"usa-identifier__required-links-item\">\n            <a href=\"https://www.gsa.gov/reference/freedom-of-information-act-foia\" class=\"usa-identifier__required-link usa-link\">FOIA requests</a>\n          </li>\n          <li class=\"usa-identifier__required-links-item\">\n            <a href=\"https://www.gsa.gov/reference/civil-rights-programs/notification-and-federal-employee-antidiscrimination-and-retaliation-act-of-2002\" class=\"usa-identifier__required-link usa-link\">No FEAR Act data</a>\n          </li>\n          <li class=\"usa-identifier__required-links-item\">\n            <a href=\"https://www.gsaig.gov/\" class=\"usa-identifier__required-link usa-link\">Office of the Inspector General</a>\n          </li>\n          <li class=\"usa-identifier__required-links-item\">\n            <a href=\"https://www.gsa.gov/reference/reports/budget-performance\" class=\"usa-identifier__required-link usa-link\">Performance reports</a>\n          </li>\n          <li class=\"usa-identifier__required-links-item\">\n            <a href=\"https://www.gsa.gov/website-information/website-policies\" class=\"usa-identifier__required-link usa-link\">Privacy policy</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n    <section class=\"usa-identifier__section usa-identifier__section--usagov\" aria-label=\"U.S. government information and services,,\">\n      <div class=\"usa-identifier__container\">\n        <div class=\"usa-identifier__usagov-description\">\n          Looking for U.S. government information and services?\n        </div>\n        <a href=\"https://www.usa.gov/\" class=\"usa-link\">Visit USA.gov</a>\n      </div>\n    </section>\n  </div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'art-section508-header',\n  templateUrl: './section508-header.component.html',\n  styleUrls: ['./section508-header.component.scss']\n})\nexport class Section508HeaderComponent implements OnInit {\n\n  constructor() { }\n  @Input() url = \"\";\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"usa-header usa-header--extended\" role=\"banner\">\n    <div class=\"usa-navbar\">\n      <div class=\"usa-logo\" id=\"extended-logo\">\n    <span><a href=\"https://www.section508.gov/\">\n      <img class=\"logo\" alt=\"Section508.gov Home; GSA logo with text: Section508.gov Buy. Build. Be Accessible.\" integrity=\"sha512-S2YGUVu8KqAmjqtxiMVq5MXieFg+L8T4y7Uv3eHZE3ePWZbUSJnehCZbsNEDiG/ZcFGxms61gqe9YViO6H/KZQ==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/images/508-logo-cropped-web-altgreen.png\">\n    </a></span>\n  </div>\n  \n      <button class=\"usa-menu-btn\">Menu</button>\n    </div>\n    <nav role=\"navigation\" class=\"usa-nav\" aria-label=\"Primary Site Navigation\">\n      <div class=\"usa-nav__inner\">\n        <button class=\"usa-nav__close\"><img alt=\"close\" integrity=\"sha512-XLawNnedFKdaFdJhoad/TAQHLO1XHwSyvZVlVpXieNmk80S974//1mU5khr0OXVTGH4H3k6mTs9tVP/J6fPoFw==\" crossorigin=\"anonymous\" src=\"{{url}}/assets/uswds/img/usa-icons/close.svg\"></button>\n        <ul class=\"usa-nav__primary usa-accordion\">\n          \n          \n          \n          \n          <li class=\"usa-nav__primary-item\">\n            <a aria-label=\"Policy &amp; Management primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/manage/\"><span>Policy &amp; Management</span></a>\n          </li>\n          \n          \n          \n          \n          \n          <li class=\"usa-nav__primary-item\">\n            <a aria-label=\"Acquisition primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/buy-sell/\"><span>Acquisition</span></a>\n          </li>\n          \n          \n          \n          \n          \n          <li class=\"usa-nav__primary-item\">\n            <a aria-label=\"Content Creation primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/create/\"><span>Content Creation</span></a>\n          </li>\n          \n          \n          \n          \n          \n          <li class=\"usa-nav__primary-item\">\n            <a aria-label=\"Design &amp; Develop primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/develop/\"><span>Design &amp; Develop</span></a>\n          </li>\n          \n          \n          \n          \n          \n          <li class=\"usa-nav__primary-item\">\n            <a aria-label=\"Testing primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/test/\"><span>Testing</span></a>\n          </li>\n          \n          \n          \n          \n          \n          <li class=\"usa-nav__primary-item\">\n            <a aria-label=\"Training, Tools &amp; Events primary navigation\" class=\"usa-nav__link\" href=\"https://www.section508.gov/training/\"><span>Training, Tools &amp; Events</span></a>\n          </li>\n          \n          \n        </ul>\n        <div class=\"usa-nav__secondary\">\n          <ul class=\"usa-nav__secondary-links\">\n            \n            <li class=\"usa-nav__secondary-item\">\n              <a href=\"https://www.section508.gov/blog/\">Blogs &amp; Updates</a>\n            </li>\n            \n            <li class=\"usa-nav__secondary-item\">\n              <a href=\"https://www.section508.gov/tools/coordinator-listing/\">My Agency’s 508 PM</a>\n            </li>\n            \n            <li class=\"usa-nav__secondary-item\">\n              <a href=\"https://www.section508.gov/about-us/\">About Us</a>\n            </li>\n            \n          </ul>\n          \n  \n  \n    \n      <form id=\"search_form\" class=\"usa-search usa-search--small\" action=\"https://search.usa.gov/search\" accept-charset=\"UTF-8\" method=\"get\">\n    \n      \n    \n      <input name=\"utf8\" type=\"hidden\" value=\"✓\">\n      <input name=\"affiliate\" type=\"hidden\" value=\"gsa-section508-accessibility\">\n    \n      <div role=\"search\">\n        <label class=\"usa-sr-only\" for=\"extended-search-field-small\">Search small</label>\n        <input class=\"usa-input usagov-search-autocomplete\" id=\"extended-search-field-small\" type=\"search\" name=\"query\" autocomplete=\"off\">\n        <button class=\"usa-button primary-background-color\" type=\"submit\"><img src=\"{{url}}/assets/icons/search-white.svg\" class=\"usa-search__submit-icon\" alt=\"Search\"></button>\n      </div>\n    </form>\n  \n  \n        </div>\n      </div>\n    </nav>\n  </header>","import { ValidationErrors, Validator } from \"@angular/forms\";\n\nexport interface FormElement {\n    /**\n     * @type string\n     * @description: the type of the current form element: text, checkbox, radioButton, checkboxGroup, radioButtonGroup\n     */\n    elementType:string;\n\n    /**\n     * @type string\n     * @description: The label of the form element\n     */\n    label: string;\n\n    /**\n     * @type string\n     * @description: the title of the form element\n     */\n    title?: string;\n\n    /**\n     * @type string\n     * @description: place holder for the element\n     */\n     placeholder?: string;\n\n    /**\n     * @type string\n     * @description:  the description of the form element\n     */\n    description?: string;\n\n    /**\n     * @type string\n     * @description: the error massages of the form elements\n     */\n    errorMessages?: any;\n\n    /**\n     * @type string\n     * @description: Array of form elements. Will be used for the checkboxes as different options and option for the radioButtons\n     */\n    options?:FormElement[];\n\n    /**\n     * @type string\n     * @description: The name of the control for this element, it should be unique\n     */\n    controlName: string;\n\n    /**\n     * @type string\n     * @description: The different validations for this elements\n     */\n    validations: ValidationErrors;\n\n    /**\n     * @type string\n     * @description: the name of the control Element for another element. The Form component will display that element whenever the value of this element is not null\n     */\n    next:string;\n\n    /**\n     * @type string\n     * @description: The Section where this element should be. Will be used by the parent component, the From component\n     */\n    formSection: string;\n\n    /**\n     * @type string\n     * @description: Any predefined value\n     */\n    value?: any;\n}\n\nexport enum  ElementType{\n    text = \"text\",\n    checkbox = \"checkbox\",\n    checkboxGroup = \"checkboxGroup\",\n    radioButton = \"radioButton\",\n    radioButtonGroup = \"radioButtonGroup\",\n}","import { Injectable } from '@angular/core';\nimport  Banner  from '../../../../assets/data/banner.json';\nimport  Header  from '../../../../assets/data/header.json';\nimport  Footer  from '../../../../assets/data/footer.json';\nimport  UpdateDate  from '../../../../assets/data/update-date.json';\nimport { IButtonInterface } from '../../models/IButtonInterface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArtContentDataService {\n\n  constructor() { }\n\n  /**\n   * @description Getting the banner data from the json file\n   * @returns title:string, header:string\n   */\n  getBannerData(): {title:string, header:string}{\n    return Banner;\n  }\n\n  /**\n   * @description Getting the header data from the json file\n   * @returns string\n   */\n   getHeader(): string{\n    return Header['data'];\n  }\n\n  /**\n   * @description Getting the footer data from the json file\n   * @returns title:string, data:string\n   */\n   getFooter(): {title:string, data:string}{\n    return Footer;\n  }\n\n  /**\n   * @description Getting the updated date data from the json file\n   * @returns string\n   */\n   getUpdatedDate(): string{\n      return UpdateDate['data'];\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { FormTemplateInterface } from '../../models/form-template.interface';\nimport  formConfigJsons  from '../../../../assets/form-config/ict-lp.config.json';\nimport  Buttons  from '../../../../assets/data/buttons.json';\nimport  IctLp  from '../../../../assets/data/ict-lp.json';\nimport { IButtonInterface } from '../../models/IButtonInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArtIctLpService {\n\n  constructor() { }\n\n  \n  /**\n   * @description the maximum number the name character\n   */\n  private charCount:number = 25;\n\n  /**\n   * @description Configuration for the ICT Listing Page input field, loading config for one Form\n   */\n   private formConfig: FormTemplateInterface[] = formConfigJsons;\n\n   /**\n    * @description Generation validation error from the configurations: Only required and maxLength has be configure, additional validations will have ot be added\n    * @param strValidation\n    * @type string[]\n    * @returns ValidationErrors\n    */\n   generateValidations(strValidation:string[] | any): ValidationErrors{\n    if(strValidation[0]?.name) return strValidation;\n    const validations: ValidatorFn[] = []\n    strValidation.forEach((eachVal:any)=>{\n      if(eachVal.includes(\"required\")) validations.push(Validators.required);\n      if(eachVal.includes(\"maxLength\")) {\n        const length = eachVal.slice(eachVal.indexOf(\"(\")+1,eachVal.indexOf(\")\"));\n        this.charCount = +length;\n        validations.push(Validators.maxLength(this.charCount));\n      }\n    });\n    console.log(\"validations-->\", typeof validations, validations);\n\n    return validations;\n   }\n\n   /**\n   * @description the parent will the sent maximum of character to be allowed\n   * @return number\n   */\n  getMaxLength():number{\n    return this.charCount;\n  }\n\n  /**\n   * @description Configuration for one form\n   * @return: FormTemplateInterface\n   */\n  getConfigurations(): FormTemplateInterface[]{\n    this.formConfig.forEach((eachForm, outterIndex)=>{\n      eachForm.formElements.forEach((eachElt, index)=>{\n        eachElt.validations = this.generateValidations(formConfigJsons[outterIndex].formElements[index].validations);\n      });\n    });\n    return this.formConfig;\n  }\n\n  /**\n   * @description Getting the label, the description and destination text for the upload button on the ict listing page\n   * @returns IButtonInterface\n   */\n   getUploadBtn(): IButtonInterface{\n    return Buttons['uploadICT'];\n  }\n\n  /**\n  * @description Getting the label, the description and destination text for the continue button on the ict listing page\n  * @returns IButtonInterface\n  */\n  getContBtl(): IButtonInterface{\n    return Buttons['continue'];\n  }\n   /**\n   * @description Get the error message for the landing page, generated when the number of ICT items has reached the max\n   * @returns string\n   */\n    getErrorMsg(): string{\n      return IctLp['errorMessage'];\n    }\n\n     /**\n   * @description Return the maximum number of items that should be allowed\n   * @returns number\n   */\n    getMaxItems(): number{\n      return IctLp['maxItems'];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { FormTemplateInterface } from '../models/form-template.interface';\nimport  formConfigJsons  from '../../../assets/form-config/test.config.json';\nimport  Buttons  from '../../../assets/data/buttons.json';\nimport  IctLp  from '../../../assets/data/ict-lp.json';\nimport { IButtonInterface } from '../models/IButtonInterface';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArtTestService {\n\n  constructor() { }\n\n  /**\n   * @description Configuration for the ICT Listing Page input field, loading config for one Form\n   */\n   private formConfig: FormTemplateInterface[] = formConfigJsons;\n\n   /**\n    * @description Generation validation error from the configurations: Only required and maxLength has be configure, additional validations will have ot be added\n    * @param strValidation\n    * @type string[]\n    * @returns ValidationErrors\n    */\n   generateValidations(strValidation:string[]): ValidationErrors{\n    const validations: ValidatorFn[] = []\n    strValidation.forEach((eachVal)=>{\n      if(eachVal.includes(\"required\")) validations.push(Validators.required);\n      if(eachVal.includes(\"maxLength\")) {\n        const length = eachVal.slice(eachVal.indexOf(\"(\")+1,eachVal.indexOf(\")\"));\n        validations.push(Validators.maxLength(+length));\n      }\n    });\n    return validations;\n   }\n\n  /**\n   * @description Configuration for one form\n   * @return: FormTemplateInterface\n   */\n  getConfigurations(): FormTemplateInterface[]{\n    this.formConfig.forEach((eachForm, outterIndex)=>{\n      eachForm.formElements.forEach((eachElt, index)=>{\n        eachElt.validations = this.generateValidations(formConfigJsons[outterIndex].formElements[index].validations);\n      });\n    });\n    return this.formConfig;\n  }\n\n  /**\n   * @description Getting the label, the description and destination text for the upload button on the ict listing page\n   * @returns IButtonInterface\n   */\n   getUploadBtn(): IButtonInterface{\n    return Buttons['uploadICT'];\n  }\n\n  /**\n  * @description Getting the label, the description and destination text for the continue button on the ict listing page\n  * @returns IButtonInterface\n  */\n  getContBtl(): IButtonInterface{\n    return Buttons['continue'];\n  }\n   /**\n   * @description Get the error message for the landing page, generated when the number of ICT items has reached the max\n   * @returns string\n   */\n    getErrorMsg(): string{\n      return IctLp['errorMessage'];\n    }\n\n     /**\n   * @description Return the maximum number of items that should be allowed\n   * @returns number\n   */\n    getMaxItems(): number{\n      return IctLp['maxItems'];\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { IFileData } from '../models/file-data.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileUploadService {\n\n  /**\n   * @description the maximum number the name character\n   */\n  private charCount:number = 25;\n\n  /**\n   * @param files - list of files selected from file-input component  \n   * @returns Promise<IFileData> - an object combining error messages and array of valid json objects.\n   * @description incoming json files with valid structures will be collected in and array. Any errors will also pushed in another array\n   * @type {(files:File[])=> Promise<IFileData>}\n   **/\n  upload(files:File[]): Promise<IFileData> {\n\n    let promises:Promise<any>[] = []\n\n    for (var file of files){\n      let promise:Promise<any> = new Promise((resolve)=>{\n        let fileName = file.name;\n        const fileReader = new FileReader();\n      \n        fileReader.readAsText(file, \"UTF-8\");\n        fileReader.onload = (e) => {\n          if(fileReader.result){\n            var fileData;\n            //there may be chances that the file is not in proper json structure leading to break on parsing.\n            try{\n              fileData = JSON.parse(fileReader.result.toString());\n              console.log(fileData);\n              if(fileData.name == null || fileData.langKeyWords==null){\n                resolve({data:'JSON structure does not match: ' + fileName, error: true});\n              }else if(fileData.name && fileData.name.length > this.charCount ){\n                resolve({data:'The maximum length has exceeded ' + this.charCount, error: true});\n              }else{\n                fileData.timeStamp = new Date().toString();\n                resolve({data:fileData});\n              }\n\n            }catch(error){\n              resolve({data:'Can\\'t parse JSON: '+fileName, error: true});\n            }           \n          }else{\n            resolve({data:'Empty file: ' + fileName, error: true});\n          }\n        }\n      })\n      promises.push(promise);\n    }\n    return new Promise<IFileData>((resolve)=>{\n      Promise.all(promises).then((values)=>{\n        let finalOuput: IFileData = {errors:[], jsonData:[]}\n        let hasError:Boolean = false;\n        for( var value of values){\n          if(value.error){\n            hasError = true;\n            finalOuput.errors.push(value.data)\n          }else{\n            finalOuput.jsonData.push(value.data)\n          }\n        }\n        if(hasError){\n          finalOuput.jsonData = [];\n        }\n        resolve(finalOuput);\n      })\n    });\n  } \n\n  /**\n   * @param num - number to truncate\n   * @param places - number of decimal places\n   * @returns number\n   * @description function to truncate the decimal number with the given place\n   * @type {(num:number, places: number) => number}\n   **/\n  truncate (num: number, places: number): number {\n    return Math.trunc(num * Math.pow(10, places)) / Math.pow(10, places);\n  }\n\n  /**\n   * @description the parent will the sent maximum of character to be allowed\n   * @param maxLength \n   * @type number\n   */\n  setMaxLength(charCount:number){\n    this.charCount = charCount;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ICTInterface } from '../../models/ict.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IctItemService {\n\n  constructor() { }\n\n  private ictItem:ICTInterface[] = [];\n\n  /**\n   * @description function to return any ICT items\n   * @returns ICTInterface[]\n   */\n  get():ICTInterface[]{\n    return this.ictItem;\n  }\n\n  /**\n   * @description function to assign a value to an ICT item\n   * @param items \n   */\n  set(items:ICTInterface[]){\n    this.ictItem.push(...items);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ICTInterface } from '../../models/ict.interface';\nimport  LpButton  from '../../../../assets/data/lp-button.json';\nimport  Buttons  from '../../../../assets/data/buttons.json';\nimport  SampleProLang  from '../../../../assets/data/sample-procurement.json';\nimport { IButtonInterface } from '../../models/IButtonInterface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LandingPageService {\n\n  constructor() { }\n\n  /**\n   * @description store the value for the destination or next page\n   * @type string\n   */\n  destination:NextPage = NextPage.none;\n\n  /**\n   * @description Getting the title header text and upload button description used on the landing page from the json file\n   * @returns {buttonHeader:string}\n   */\n  getLpButtonData(): {buttonHeader:string}{\n    return LpButton;\n  }\n\n  /**\n   * @description Getting the label, the description and destination text for the get started button on the landing page\n   * @returns IButtonInterface\n   */\n   getLpGetStrBtn(): IButtonInterface{\n    return Buttons['getStarted'];\n  }\n\n  /**\n   * @description Getting the label, the description and destination text for the upload json button on the landing page\n   * @returns IButtonInterface\n   */\n   getLpUplBtn(): IButtonInterface{\n    return Buttons['uploadICT'];\n  }\n\n  /**\n   * @description Getting the data for the Sample Procurement Language in 3 Steps in the json file\n   * @returns string\n   */\n   getSampleProLang(): string{\n    return SampleProLang['data'];\n  }\n\n  /**\n   * @description used to update the destination\n   * @param nextPage \n   * @type NextPage\n   */\n  setNextPage(nextPage:NextPage){\n    this.destination = nextPage;\n  }\n\n  /**\n   * @description used to update the destination\n   * @return NextPage\n   */\n   getNextPage(): NextPage{\n    return this.destination;\n  }\n  \n}\n\nexport enum NextPage {\n  getStarted = \"getStarted\",\n  uploadICT = \"uploadICT\",\n  none=\"\"\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, MaxLengthValidator, Validators } from '@angular/forms';\nimport { FormElement, ElementType } from 'src/app/shared/models/form-element.interface';\nimport { FormTemplateInterface } from 'src/app/shared/models/form-template.interface';\n\n@Component({\n  selector: 'art-form-template',\n  templateUrl: './art-form-template.component.html',\n  styleUrls: ['./art-form-template.component.scss']\n})\nexport class ArtFormTemplateComponent implements OnInit, OnChanges {\n\n  constructor(private fb: FormBuilder,) { }\n\n  /**\n   * @description An array of forms. Can have any any number of form, each form having its own sent of controls\n   * @type Array<FormGroup>\n   */\n  formList: FormGroup[] = [];\n\n  /**\n   * @description All the elements for all any number of forms\n   * @type Double array of FormControl\n   */\n  formElements:FormControl[][] = [[],[]];\n\n  /**\n   * @description Will use the ElementType enum to enforce specific type of elements already predefined\n   * @type\n   */\n  elementType = ElementType;\n\n  /**\n   * @description This input from the parent will provide all the configuration for the forms and elements which will be created\n   * @type FormTemplateInterface\n   */\n  @Input() formConfig: FormTemplateInterface[] = [];\n\n  /**\n   * @description this will be sent by the parent to trigger the ngOnChanges function to listing to any input property change\n   * @type any\n   */\n  @Input() scanChange: any;\n\n  /**\n   * @description Will return the data to the parent for only 1 form after form submission\n   * @type FormData[]\n   */\n  @Output()  formData = new EventEmitter<FormData[]>();\n\n  /**\n   * @description will listening to any input property change, will capture if a disable property for a form has been update to disable or enable that form\n   * @returns void\n   */\n  ngOnChanges(): void{\n      //looping each form to check if it has been set to disable or enable by its parent\n      this.formConfig.forEach((eachConfig, outerIndex) => {\n        if(this.formList[outerIndex ]){\n          if(this.formConfig[outerIndex].disable) this.formList[outerIndex].disable();\n          if(this.formConfig[outerIndex] && !this.formConfig[outerIndex].disable) this.formList[outerIndex].enable();\n        }\n      }) \n  }\n\n  /**\n   * @description Form Initialization\n   * @returns void\n   */\n  ngOnInit(): void {\n\n    // Setting each Form\n    this.formConfig.forEach((eachConfig, outerIndex) => {\n\n      //Init  each form\n      this.formList.push(new FormGroup({}));\n\n      //Only for debugging TOBE REMOVED\n      this.formList[outerIndex].valueChanges.subscribe((data)=>{\n        console.log(\"Form-> \",1+outerIndex);\n        console.log(data);\n      });\n      \n      //create controls elements for each form\n      eachConfig.formElements.forEach((eachFormElement, index)=>{\n        if(eachFormElement.elementType === ElementType.text){\n          this.formList[outerIndex ].addControl(eachFormElement.controlName, new FormControl(eachFormElement.value, eachFormElement.validations));\n        } else{\n          this.formList[outerIndex ].addControl(eachFormElement.controlName, new FormGroup({}));\n        }\n      });\n      // Check if a form needs to be disabled based on its config or parent request. It should be if the ICT lp has 10 ICT items \n      if(this.formConfig[outerIndex].disable) this.formList[outerIndex].disable();\n    });\n  }\n\n  /**\n   * @description Will be called on a form submission button being clicked. And will emit the data to its parent\n   * @param index \n   * @rerun void\n   */\n  onFormSubmit(index:number):void{\n    //TO BE REMOVED\n    console.log(\"Result--> \", this.formList[index].value);\n    this.formData.emit(this.formList[index].value);\n    //Will reset the form based on the its configuration\n    if(this.formConfig[index].clearForm) this.formList[index].reset();\n  }\n\n  /**\n   * @description Used to identified which form is being used\n   * @type number\n   */\n  formControlIndex:number = 0;\n  /**\n   * @description For each form it will get all the control elements and return it as an array to be looped on the html\n   * @returns FormControl[]\n   */\n  get controlList():FormControl[]{\n    //Should not be go over the maximum number for forms set up.\n    if(this.formControlIndex >= this.formList.length) this.formControlIndex = 0;\n    const result:AbstractControl[] = [];\n    //Getting controls elements for a specific form\n    Object.keys(this.formList[this.formControlIndex].controls).forEach(key => {\n      result.push(this.formList[this.formControlIndex].controls[key]);\n    });\n    this.formControlIndex++;\n    return <FormControl[]>(result);\n  }\n\n}\n","<!-- Will display all ICT FORM 1..10-->\n<div  *ngFor=\"let eachFormConfig of formConfig; let outerIndex = index\">\n    <form  [formGroup]=\"formList[outerIndex]\" (ngSubmit)=\"onFormSubmit(outerIndex)\">\n        <!-- For each form, it will list all the control or form element-->\n        <div class=\"grid-row\" \n            [ngClass]=\"{\n                        'flex-row':eachFormConfig.formButtons.add,\n                        'flex-align-end':eachFormConfig.formButtons.add,  \n                        'flex-column':!eachFormConfig.formButtons.add}\"\n                        >\n            <div *ngFor=\"let eachControl of controlList; let index = index\">\n                <art-text-field \n                    *ngIf=\"eachFormConfig.formElements[index].elementType === 'text'\"  \n                    [formData]=\"eachFormConfig.formElements[index]\" \n                    [control] = \"eachControl\">\n                </art-text-field>\n\n                <div *ngIf=\"eachFormConfig.formElements[index].elementType === 'checkboxGroup'\">\n                <!-- <art-checkbox-group *ngIf=\"eachFormConfig.formElements[index].elementType === 'checkboxGroup'\"  [formData]=\"eachFormConfig.formElements[index]\" [control] = \"eachControl\"></art-text-field> -->\n                </div>\n            </div>\n            <!-- This button will be disable if the form is not valid and if the value is null-->\n            <button \n                *ngIf=\"eachFormConfig.formButtons.add\"\n                [disabled]=\"!formList[outerIndex].valid || formList[outerIndex].value === null\" \n                id=\"art-add-btn for index {{outerIndex}}\" \n                aria-label=\"Add an ICT Item\"\n                class=\"usa-button usa-button--accent-warm art-add-btn\" \n                type=\"submit\">{{eachFormConfig.formButtons.add}}\n            </button>\n\n            <div class=\"margin-top-3\" *ngIf=\"eachFormConfig.formButtons.submit\">\n                <button \n                    [disabled]=\"!formList[outerIndex].valid || formList[outerIndex].value === null\" \n                    class=\"usa-button usa-button--accent-warm\" \n                    type=\"submit\">{{eachFormConfig.formButtons.submit}}\n                </button>\n            </div>\n        </div>\n    </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  urlPath:\"/preview/gsa/section508.gov/development-art/art-v2\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}